.\"     $NetBSD: m_tag.9,v 1.5.46.1 2019/06/10 22:05:41 christos Exp $
.\"
.\" Copyright (c)2004 YAMAMOTO Takashi,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" ------------------------------------------------------------
.Dd November 15, 2018
.Dt M_TAG 9
.Os
.Sh NAME
.Nm m_tag ,
.Nm m_tag_get ,
.Nm m_tag_free ,
.Nm m_tag_prepend ,
.Nm m_tag_unlink ,
.Nm m_tag_delete ,
.Nm m_tag_delete_chain ,
.Nm m_tag_find ,
.Nm m_tag_copy ,
.Nm m_tag_copy_chain
.Nd mbuf tagging interfaces
.\" ------------------------------------------------------------
.Sh SYNOPSIS
.In sys/mbuf.h
.Ft struct m_tag *
.Fn m_tag_get "int type" "int len" "int wait"
.Ft void
.Fn m_tag_free "struct m_tag *t"
.Ft void
.Fn m_tag_prepend "struct mbuf *m" "struct m_tag *t"
.Ft void
.Fn m_tag_unlink "struct mbuf *m" "struct m_tag *t"
.Ft void
.Fn m_tag_delete "struct mbuf *m" "struct m_tag *t"
.Ft void
.Fn m_tag_delete_chain "struct mbuf *m"
.Ft struct m_tag *
.Fn m_tag_find "struct mbuf *m" "int type"
.Ft struct m_tag *
.Fn m_tag_copy "struct m_tag *m"
.Ft int
.Fn m_tag_copy_chain "struct mbuf *to" "struct mbuf *from"
.\" ------------------------------------------------------------
.Sh DESCRIPTION
The
.Nm
interface is used to
.Dq tag
mbufs.
.\" XXX PACKET_TAG_*
.\" ------------------------------------------------------------
.Sh FUNCTIONS
.Bl -tag -width compact
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_get "type" "len" "wait"
Allocate an mbuf tag.
.Fa type
is one of the
.Dv PACKET_TAG_
macros.
.Fa len
is the size of the data associated with the tag, in bytes.
.Fa wait
is either
.Dv M_WAITOK
or
.Dv M_NOWAIT .
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_free "t"
Free the mbuf tag
.Fa t .
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_prepend "m" "t"
Prepend the mbuf tag
.Fa t
to the mbuf
.Fa m .
.Fa t
will become the first tag of the mbuf
.Fa m .
When
.Fa m
is freed,
.Fa t
will also be freed.
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_unlink "m" "t"
Unlink the mbuf tag
.Fa t
from the mbuf
.Fa m .
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_delete "m" "t"
The same as
.Fn m_tag_unlink
followed by
.Fn m_tag_free .
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_delete_chain "m"
Unlink and free mbuf tags from the mbuf
.Fa m .
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_find "m" "type"
Find an mbuf tag with type
.Fa type
in the tag chain associated with the mbuf
.Fa m .
If an mbuf tag is found, return a pointer to it.
Otherwise return
.Dv NULL .
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_copy "t"
Copy an mbuf tag
.Fa t .
Return a new mbuf tag on success.
Otherwise return
.Dv NULL .
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.It Fn m_tag_copy_chain "to" "from"
Copy all mbuf tags associated with the mbuf
.Fa from
to the mbuf
.Fa to .
If
.Fa to
already has any mbuf tags, they will be unlinked and freed beforehand.
Return 1 on success.
Otherwise return 0.
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.El
.\" ------------------------------------------------------------
.Sh CODE REFERENCES
The mbuf tagging interfaces are implemented within the file
.Pa sys/kern/uipc_mbuf.c .
.Pp
The
.Dv PACKET_TAG_
macros are defined in the file
.Pa sys/sys/mbuf.h .
.Sh SEE ALSO
.Xr intro 9 ,
.Xr malloc 9 ,
.Xr mbuf 9
.\" ------------------------------------------------------------
.Sh BUGS
The semantics of the term "persistent tag" are vague.
