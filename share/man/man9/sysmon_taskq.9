.\" $NetBSD: sysmon_taskq.9,v 1.8 2014/03/18 18:20:40 riastradh Exp $
.\"
.\" Copyright (c) 2010 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Jukka Ruohonen.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd January 24, 2010
.Dt SYSMON_TASKQ 9
.Os
.Sh NAME
.Nm sysmon_taskq
.Nd general purpose system monitoring task queue
.Sh SYNOPSIS
.In dev/sysmon/sysmon_taskq.h
.Ft void
.Fn sysmon_task_queue_preinit "void"
.Ft void
.Fn sysmon_task_queue_init "void"
.Ft void
.Fn sysmon_task_queue_fini "void"
.Ft int
.Fn sysmon_task_queue_sched "u_int pri" "void (*func)(void *)" "void *arg"
.Sh DESCRIPTION
The machine-independent
.Nm
provides a simple general purpose task queue.
It can be used to run callbacks that require thread context,
but do not warrant the use of a more fine-grained solution.
.Pp
Although the intended usage is related to the context of system monitoring
and power management, also other comparable functions are suitable for
.Nm .
.Sh FUNCTIONS
The necessary internal data structures
are initialized during system startup by
.Fn sysmon_task_queue_preinit .
Before actual usage, a machine-dependent
procedure should finish the initialization
by calling
.Fn sysmon_task_queue_init .
This will create a kernel thread that can be later halted by
.Fn sysmon_task_queue_fini .
All scheduled tasks are executed before the queue is halted.
.Pp
The
.Fn sysmon_task_queue_sched
enqueues
.Fa func
to be executed at the priority
.Fa pri .
If
.Fa pri
is 0, the scheduled function will be placed as the last element in the queue.
The single argument passed to
.Fa func
is specified by
.Fa arg .
.Sh RETURN VALUES
Upon successful completion,
.Fn sysmon_task_queue_sched
returns 0.
Otherwise, the following error values are returned:
.Bl -tag -width [EINVAL]
.It Bq Er EINVAL
An invalid parameter was specified.
.It Bq Er ENOMEM
There was not enough memory.
.El
.Sh SEE ALSO
.Xr queue 3 ,
.Xr kthread 9 ,
.Xr workqueue 9
.Sh AUTHORS
.An Jason R. Thorpe Aq Mt thorpej@NetBSD.org
