.\"     $NetBSD: cpu_need_resched.9,v 1.10 2019/11/23 19:46:38 ad Exp $
.\"
.\" Copyright (c) 2002, 2019 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Gregory McGarry, and Andrew Doran.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd November 17, 2019
.Dt CPU_NEED_RESCHED 9
.Os
.Sh NAME
.Nm cpu_need_resched
.Nd context switch notification
.Sh SYNOPSIS
.In sys/cpu.h
.Ft void
.Fn cpu_need_resched "struct cpu_info *ci" "struct lwp *l" "int flags"
.Sh DESCRIPTION
The
.Fn cpu_need_resched
function is the machine-independent interface for the scheduler to
notify machine-dependent code that a context switch from the current
LWP
.Fa l ,
on the cpu
.Fa ci ,
is required.
This event may occur if a higher priority LWP appears on the run
queue or if the current LWP has exceeded its time slice.
.Fa l
is the last LWP observed running on the CPU.
It may no longer be running, as
.Fn cpu_need_resched
can be called without holding scheduler locks.
.Pp
If the
.Dv RESCHED_KPREEMPT
flag is specified in
.Fa flags
and
.Dv __HAVE_PREEMPTION
C pre-processor macro is defined in
.In machine/intr.h ,
machine-dependent code should make a context switch happen as soon as possible
even if the CPU is running in kernel mode.
If the
.Dv RESCHED_KPREEMPT
flag is not specified, then
.Dv RESCHED_UPREEMPT
is specified instead.
.Pp
If the
.Dv RESCHED_IDLE
flag is specified in
.Fa flags ,
the last thread observed running on the CPU was the idle LWP.
.Pp
If
.Dv RESCHED_REMOTE
flag is specified in
.Fa flags ,
the request is not for the current CPU.
The opposite also holds true.
If
.Fa ci
is not the current processor,
.Fn cpu_need_resched
typically issues an inter processor call to the processor to make it
notice the need of a context switch as soon as possible.
.Pp
.Fn cpu_need_resched
is always called with kernel preemption disabled.
.Pp
Typically, the
.Fn cpu_need_resched
function will perform the following operations:
.Bl -bullet -offset indent
.It
Set a per-processor flag which is checked by
.Xr userret 9
when returning to user-mode execution.
.It
Post an asynchronous software trap
.Pq Tn AST .
.It
Send an inter processor interrupt to wake up
.Xr cpu_idle 9
and/or force an user process across the user/kernel boundary, thus making a
trip through
.Fn userret .
.El
.Sh SEE ALSO
.Xr sched_4bsd 9 ,
.Xr userret 9
