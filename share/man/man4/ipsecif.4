.\"	$NetBSD: ipsecif.4,v 1.2 2018/01/10 12:18:22 wiz Exp $
.\"
.\" Copyright (C) 2017 Internet Initiative Japan Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the project nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd December 22, 2017
.Dt IPSECIF 4
.Os
.Sh NAME
.Nm ipsecif
.Nd IPsec interface
.Sh SYNOPSIS
.Cd "pseudo-device ipsecif"
.Sh DESCRIPTION
The
.Nm
interface is similar to
.Xr gif 4
over
.Xr ipsec 4
transport mode.
.Xr gif 4
over
.Xr ipsec 4
transport mode is managed by userland programs.
In contrast,
.Nm
manages its security policies by itself, that is, when user sets up a
.Nm
tunnel source and destination address pair, the related security policies
are created automatically in the kernel.
Therefore, the security policies of
.Nm
are added/deleted atomically.
It also means that
.Nm
ensures that both the in and out security policy pairs exist, that is,
.Nm
avoids the trouble caused when only one of the in and out security
policy pair exists.
.Pp
There are four security policies generated by
.Nm ,
that is, one in and out pair for IPv4 and IPv6 each.
This
.Xr ipsec.conf 5
has the same meaning as these security policies:
.Bd -literal
spdadd "src" "dst" ipv4 -P out ipsec esp/transport//unique;
spdadd "dst" "src" ipv4 -P in ipsec esp/transport//unique;
spdadd "src" "dst" ipv6 -P out ipsec esp/transport//unique;
spdadd "dst" "src" ipv6 -P in ipsec esp/transport//unique;
.Ed
.Pp
Therefore,
.Nm
configuration will fail if you already added such security policies, and
vice versa.
.Pp
The related security associates can be established by an IKE daemon such as
.Xr racoon 8 .
They can also be manipulated manually by
.Xr setkey 8
with the
.Fl u
option which sets a security policy's unique id.
.Pp
Some if_flags change
.Nm Ap s
behaviour.
IFF_LINK0 can enable Network Address Translator traversal,
IFF_LINK1 can enable ECN friendly mode like
.Xr gif 4 ,
and IFF_LINK2 can enable forwarding inner IPv6 packets.
Only IFF_LINK2 is set by default.
If you use only IPv4 packets as inner packets, you would want to
unset IFF_LINK2 to reduce security associates for IPv6 packets.
.Sh EXAMPLES
Configuration example:
.Bd -literal
Host X--NetBSD A  ----------------tunnel---------- NetBSD B------Host E
           \\                                          |
            \\                                        /
             +-----Router B--------Router C---------+
.Ed
.Pp
On
.Nx
system A
.Bd -literal
# ifconfig wm0 inet 192.168.0.1/24
# ifconfig ipsec0 create
# ifconfig ipsec0 tunnel 192.168.0.1 192.168.0.2
# ifconfig ipsec0 inet 172.16.100.1/32 172.16.200.1
start IKE daemon or set security associates manually.
# ifconfig wm1 inet 10.100.0.1/24
# route add 10.200.0.1 172.16.100.1
.Ed
.Pp
On
.Nx
system B
.Bd -literal
# ifconfig wm0 inet 192.168.0.2/24
# ifconfig ipsec0 create
# ifconfig ipsec0 tunnel 192.168.0.2 192.168.0.1
# ifconfig ipsec0 inet 172.16.200.1/32 172.16.100.1
start IKE daemon or set security associates manually.
# ifconfig wm1 inet 10.200.0.1/24
# route add 10.100.0.1 172.16.200.1
.Ed
.Sh SEE ALSO
.Xr gif 4 ,
.Xr inet 4 ,
.Xr inet6 4 ,
.Xr ipsec 4 ,
.Xr ifconfig 8 ,
.Xr setkey 8
.Sh HISTORY
The
.Nm
device first appeared in
.Nx 8.0 .
.Sh LIMITATIONS
Currently, the
.Nm
interface supports the ESP protocol only.
.Nm
does not support Network Address Translator traversal (NAT-T).
