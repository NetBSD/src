.\"	$NetBSD: ec.4,v 1.14 2017/07/03 21:30:58 wiz Exp $
.\"
.\" Copyright (c) 1997 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
.\" NASA Ames Research Center.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd October 20, 1997
.Dt EC 4
.Os
.Sh NAME
.Nm ec
.Nd driver for 3Com EtherLink II (3c503)
.Tn ISA
bus
.Tn Ethernet
cards
.Sh SYNOPSIS
.Cd "ec0 at isa? port 0x250 iomem 0xd8000 irq 9"
.Sh DESCRIPTION
The
.Nm
device driver supports 3Com EtherLink II (3c503)
.Tn Ethernet
cards for
.Tn ISA
bus which are based on the National Semiconductor DP8390/WD83C690
.Tn Ethernet
interface chips.
.Sh MEDIA SELECTION
The EtherLink II supports two media types on a single card.
All support the
.Tn AUI
media type.
The other media is either
.Tn BNC
or
.Tn UTP
behind a transceiver.
Software cannot differentiate between
.Tn BNC
and
.Tn UTP
cards.
.Pp
To enable the AUI media, select the
.Em 10base5
or
.Em aui
media type with
.Xr ifconfig 8 Ns 's
.Cm media
directive.
To select the other media
.Po
.Tn BNC
or
.Tn UTP
.Pc ,
select the
.Em 10base2
or
.Em bnc
media type.
.Sh DIAGNOSTICS
.Bl -diag
.It "ec0: wildcarded IRQ is not allowed"
.Pp
The
.Tn IRQ
was wildcarded in the kernel configuration file.
This is not supported.
.It "ec0: invalid IRQ <n>, must be 3, 4, 5, or 9"
.Pp
An
.Tn IRQ
other than the above
.Tn IRQ
values was specified in the kernel configuration file.
The EtherLink II hardware only supports the above listed
.Tn IRQ
values.
.It "ec0: failed to clear shared memory at offset <off>"
.Pp
The memory test was unable to clear shared the interface's shared memory
region.
This often indicates that the card is configured at a conflicting
.Em iomem
address.
.It "ec0: warning - receiver ring buffer overrun"
.Pp
The DP8390
.Tn Ethernet
chip used by this board implements a shared-memory
ring-buffer to store incoming packets.
The 3c503 usually has only 8K bytes of shared memory.
This is only enough room for about 4 full-size (1500 byte) packets.
This can sometimes be a problem, especially on the original 3c503, because
these boards' shared-memory access speed is quite slow; typically only
about 1MB/second.
The overhead of this slow memory access, and the fact that there
is only room for 4 full-sized packets means that the ring-buffer
will occasionally overrun.
.Pp
When an overrun occurs, the board must be reset to avoid a lockup
problem in early revision DP8390
.Tn Ethernet
chips.
Resetting the board causes all of the data in the ring-buffer to be
lost, requiring the data to be retransmitted/received, congesting the board
further.
Because of this, maximum throughput on these boards is only about
400-600K bytes per second.
.Pp
This problem is exacerbated by
.Tn NFS
because the 8-bit boards lack sufficient packet buffer memory to
support the default 8K byte packets that
.Tn NFS
and other protocols use as their default.
If these cards must be used
with
.Tn NFS ,
use the
.Xr mount_nfs 8
.Fl \&r
and
.Fl \&w
options in
.Pa /etc/fstab
to limit NFS's packet size.
4K (4096) byte packets generally work.
.El
.Sh SEE ALSO
.Xr ifmedia 4 ,
.Xr intro 4 ,
.Xr isa 4 ,
.Xr ifconfig 8 ,
.Xr mount_nfs 8
