.\" $NetBSD: moused.8,v 1.9 2016/08/16 02:04:01 uwe Exp $
.\"
.\" Copyright (c) 1996
.\"	Mike Pritchard <mpp@FreeBSD.org>.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Mike Pritchard.
.\" 4. Neither the name of the author nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" from:
.\"
.\" FreeBSD: src/usr.sbin/moused/moused.8,v 1.39 2001/08/10 13:45:34 ru Exp
.\"
.Dd October 29, 2001
.Dt MOUSED 8
.Os
.Sh NAME
.Nm moused
.Nd pass mouse data to mouse mux
.Sh SYNOPSIS
.Nm
.Op Fl DPRacdfs
.Op Fl I Ar file
.Op Fl F Ar rate
.Op Fl r Ar resolution
.Op Fl S Ar baudrate
.Op Fl W Ar devicename
.Op Fl a Ar X Ns Op ,Y
.Op Fl m Ar N=M
.Op Fl w Ar N
.Op Fl z Ar target
.Op Fl t Ar mousetype
.Op Fl 3 Op Fl E Ar timeout
.Fl p Ar port
.Pp
.Nm
.Op Fl Pd
.Fl p Ar port
.Fl i Ar info
.Sh DESCRIPTION
The mouse daemon
.Nm
and the console driver work together to support
access to serial mice from user programs.
They virtualize the mouse and provide user programs with mouse data
in the standard format
(see
.Xr wsmouse 4 ) .
.Pp
.Nm
listens to the specified port for mouse data, interprets and then
passes it via ioctls to the console driver.
It reports translation movement, button press/release events and
movement of the roller or the wheel if available.
The roller/wheel movement is reported as
.Dq Z
axis movement.
.Pp
If
.Nm
receives the signal
.Dv SIGHUP ,
it will reopen the mouse port and reinitializes itself.
Useful if
the mouse is attached/detached while the system is suspended.
.Pp
The following options are available:
.Bl -tag -width indent
.It Fl 3
Emulate the third (middle) button for 2-button mice.
It is emulated
by pressing the left and right physical buttons simultaneously.
.It Fl D
Lower DTR on the serial port.
This option is valid only if
.Ar mousesystems
is selected as the protocol type.
The DTR line may need to be dropped for a 3-button mouse
to operate in the
.Ar mousesystems
mode.
.It Fl E Ar timeout
When the third button emulation is enabled (see above),
.Nm
waits
.Ar timeout
milliseconds at most before deciding whether two buttons are being
pressed simultaneously.
The default timeout is 100 milliseconds.
.It Fl F Ar rate
Set the report rate (reports per second) of the device if supported.
.It Fl I Ar file
Write the process id of
.Nm
in the specified file.
Without this option, the process id will be stored in
.Pa /var/run/moused.pid .
.It Fl P
Do not start the Plug and Play COM device enumeration procedure
when identifying the serial mouse.
If this option is given together with the
.Fl i
option,
.Nm
will not be able to print useful information for the serial mouse.
.It Fl R
Lower RTS on the serial port.
This option is valid only if
.Ar mousesystems
is selected as the protocol type by the
.Fl t
option below.
It is often used with the
.Fl D
option above.
Both RTS and DTR lines may need to be dropped for
a 3-button mouse to operate in the
.Ar mousesystems
mode.
.It Fl S Ar baudrate
Select the baudrate for the serial port (1200 to 9600).
Not all serial mice support this option.
.It Fl W Ar devicename
Select the
.Xr wsmux 4
control device.
The default is
.Pa /dev/wsmuxctl0 .
.It Fl a Ar X Ns Op ,Y
Accelerate or decelerate the mouse input.
This is a linear acceleration only.
Values less than 1.0 slow down movement, values greater than 1.0 speed it
up.
Specifying only one value sets the acceleration for both axes.
.It Fl c
Some mice report middle button down events
as if the left and right buttons are being pressed.
This option handles this.
.It Fl d
Enable debugging messages.
.It Fl f
Do not become a daemon and instead run as a foreground process.
Useful for testing and debugging.
.It Fl i Ar info
Print specified information and quit.
Available pieces of information are:
.Pp
.Bl -tag -compact -width modelxxx
.It Ar port
Port (device file) name, e.g.\&
.Pa /dev/tty00 .
.It Ar if
Interface type: serial, bus, inport or ps/2.
.It Ar type
Protocol type.
It is one of the types listed under the
.Fl t
option below.
.It Ar model
Mouse model.
.Nm
may not always be able to identify the model.
.It Ar all
All of the above items.
Print port, interface, type and model in this order in one line.
.El
.Pp
If
.Nm
cannot determine the requested information, it prints ``unknown'' or
``generic''.
.It Fl m Ar N=M
Assign the physical button
.Ar M
to the logical button
.Ar N .
You may specify as many instances of this option as you like.
More than one physical button may be assigned to a logical button at the
same time.
In this case the logical button will be down,
if either of the assigned physical buttons is held down.
Do not put space around `='.
.It Fl p Ar port
Use
.Ar port
to communicate with the mouse.
.It Fl r Ar resolution
Set the resolution of the device; in Dots Per Inch, or
.Ar low ,
.Ar medium-low ,
.Ar medium-high
or
.Ar high .
This option may not be supported by all the device.
.It Fl s
Select a baudrate of 9600 for the serial line.
Not all serial mice support this option.
.It Fl t Ar type
Specify the protocol type of the mouse attached to the port.
You may explicitly specify a type listed below, or use
.Ar auto
to let
.Nm
automatically select an appropriate protocol for the given mouse.
If you entirely omit this option on the command line,
.Fl t Ar auto
is assumed.
Under normal circumstances, you need to use this option only if
.Nm
is not able to detect the protocol automatically.
.Pp
Note that if a protocol type is specified with this option, the
.Fl P
option above is implied and Plug and Play COM device enumeration
procedure will be disabled.
.Pp
Valid types for this option are
listed below.
.Pp
For the serial mouse:
.Bl -tag -compact -width mousesystemsxxx
.It Ar microsoft
Microsoft serial mouse protocol.
Most 2-button serial mice use this protocol.
.It Ar intellimouse
Microsoft IntelliMouse protocol.
Genius NetMouse, ASCII Mie Mouse, Logitech MouseMan+ and FirstMouse+
use this protocol too.
Other mice with a roller/wheel may be compatible with this protocol.
.It Ar mousesystems
MouseSystems 5-byte protocol.
3-button mice may use this protocol.
.It Ar mmseries
MM Series mouse protocol.
.It Ar logitech
Logitech mouse protocol.
Note that this is for old Logitech models.
.Ar mouseman
or
.Ar intellimouse
should be specified for newer models.
.It Ar mouseman
Logitech MouseMan and TrackMan protocol.
Some 3-button mice may be compatible with this protocol.
Note that MouseMan+ and FirstMouse+ use
.Ar intellimouse
protocol rather than this one.
.It Ar glidepoint
ALPS GlidePoint protocol.
.It Ar thinkingmouse
Kensington ThinkingMouse protocol.
.It Ar mmhitab
Hitachi tablet protocol.
.It Ar x10mouseremote
X10 MouseRemote.
.It Ar kidspad
Genius Kidspad and Easypad protocol.
.It Ar versapad
Interlink VersaPad protocol.
.El
.It Fl w Ar N
Make the physical button
.Ar N
act as the wheel mode button.
While this button is pressed, X and Y axis movement is reported to be zero
and the Y axis movement is mapped to Z axis.
You may further map the Z axis movement to virtual buttons by the
.Fl z
option below.
.It Fl z Ar target
Map Z axis (roller/wheel) movement to another axis or to virtual buttons.
Valid
.Ar target
maybe:
.Bl -tag -compact -width x__
.It Ar x
.It Ar y
X or Y axis movement will be reported when the Z axis movement is detected.
.It Ar N
Report down events for the virtual buttons
.Ar N
and
.Ar N+1
respectively when negative and positive Z axis movement
is detected.
There do not need to be physical buttons
.Ar N
and
.Ar N+1 .
Note that mapping to logical buttons is carried out after mapping
from the Z axis movement to the virtual buttons is done.
.It Ar N1 N2
Report down events for the virtual buttons
.Ar N1
and
.Ar N2
respectively when negative and positive Z axis movement
is detected.
.It Ar N1 N2 N3 N4
This is useful for the mouse with two wheels of which
the second wheel is used to generate horizontal scroll action,
and for the mouse which has a knob or a stick which can detect
the horizontal force applied by the user.
.Pp
The motion of the second wheel will be mapped to the buttons
.Ar N3 ,
for the negative direction, and
.Ar N4 ,
for the positive direction.
If the buttons
.Ar N3
and
.Ar N4
actually exist in this mouse, their actions will not be detected.
.Pp
Note that horizontal movement or second roller/wheel movement may not
always be detected,
because there appears to be no accepted standard as to how it is encoded.
.Pp
Note also that some mice think left is the negative horizontal direction,
others may think otherwise.
Moreover, there are some mice whose two wheels are both mounted vertically,
and the direction of the second vertical wheel does not match the
first one's.
.El
.El
.Ss Multiple Mice
As many instances of
.Nm
as the number of mice attached to the system may be run
simultaneously; one instance for each serial mouse.
.Sh FILES
.Bl -tag -width /var/run/moused.pid -compact
.It Pa /dev/wsmuxctl0
default device to control mouse mux
.It Pa /var/run/moused.pid
process id of the currently running
.Nm
.El
.Sh EXAMPLES
.Dl moused -p /dev/tty00 -i type
.Pp
Let
.Nm
determine the protocol type of the mouse at the serial port
.Pa /dev/tty00 .
If successful,
.Nm
will print the type, otherwise it will say ``unknown''.
.Pp
.Dl moused -p /dev/tty00
.Pp
If
.Nm
is able to identify the protocol type of the mouse at the specified
port automatically, you can start the daemon without the
.Fl t
option and enable the mouse pointer in the text console as above.
.Pp
.Dl moused -p /dev/tty01 -t microsoft
.Pp
Start
.Nm
on the serial port
.Pa /dev/tty01 .
The protocol type
.Ar microsoft
is explicitly specified by the
.Fl t
option.
.Pp
.Dl moused -p /dev/tty01 -m 1=3 -m 3=1
.Pp
Assign the physical button 3 (right button) to the logical button 1
(logical left) and the physical button 1 (left) to the logical
button 3 (logical right).
This will effectively swap the left and right buttons.
.Pp
.Dl moused -p /dev/tty01 -t intellimouse -z 4
.Pp
Report negative Z axis (roller) movement as the button 4 pressed
and positive Z axis movement as the button 5 pressed.
.Pp
The mouse daemon is normally enabled by setting
.Pa moused=YES
in
.Pa /etc/rc.conf .
.Sh SEE ALSO
.Xr wsmouse 4 ,
.Xr wsmux 4 ,
.Xr rc.conf 5 ,
.Xr wsmoused 8
.Sh STANDARDS
.Nm
partially supports
.Dq Plug and Play External COM Device Specification
in order to support PnP serial mice.
However, due to various degrees of conformance to the specification
by existing serial mice, it does not strictly follow version 1.0
of the standard.
Even with this less strict approach, it may not always determine
an appropriate protocol type for the given serial mouse.
.Sh HISTORY
The mouse daemon
.Nm
first appeared in
.Fx 2.2
and
.Nx 1.6 .
.Sh AUTHORS
.Nm
was written by
.An -nosplit Michael Smith
.Aq msmith@FreeBSD.org .
This manual page was written by
.An Mike Pritchard
.Aq mpp@FreeBSD.org .
The daemon and manual page have since been updated by
.An Kazutaka Yokota
.Aq yokota@FreeBSD.org .
The
.Nx
port was done by
.An Lennart Augustsson
.Aq augustss@NetBSD.org .
.Sh BUGS
Many pad devices behave as if the first (left) button were pressed if
the user `taps' the surface of the pad.
In contrast, some ALPS GlidePoint and Interlink VersaPad models
treat the tapping action as fourth button events.
Use the option ``-m 1=4'' for these models
to obtain the same effect as the other pad devices.
