.\"-
.\" Copyright (c) 2003-2006 David Boggs. (boggs@boggs.palo-alto.ca.us)
.\" All rights reserved.  I wrote this man page from scratch.
.\"
.\" BSD License:
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" GNU General Public License:
.\"
.\" This program is free software; you can redistribute it and/or modify it
.\" under the terms of the GNU General Public License as published by the Free
.\" Software Foundation; either version 2 of the License, or (at your option)
.\" any later version.
.\"
.\" This program is distributed in the hope that it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
.\" more details.
.\"
.\" You should have received a copy of the GNU General Public License along with
.\" this program; if not, write to the Free Software Foundation, Inc., 59
.\" Temple Place - Suite 330, Boston, MA  02111-1307, USA.
.\"
.\" $NetBSD: lmcconfig.8,v 1.4.42.1 2012/04/17 00:09:48 yamt Exp $
.\"
.Dd April 11, 2006
.Dt LMCCONFIG 8
.Os
.ie (\n(.y < 19) .nr ssfix 1
.el .nr ssfix 0
.\" Is the OS name FreeBSD?
.ie "\*[operating-system]"" .ds aa \*(oS
.el .ds aa \*[operating-system]
.substring aa (0+\n[ssfix] (6+\n[ssfix])
.ie "\*(aa"FreeBSD" .nr fbsd 1
.el .nr fbsd 0
.\" Is the OS name BSD (i.e. Linux)?
.ie "\*[operating-system]"" .ds aa \*(oS
.el .ds aa \*[operating-system]
.ie "\*(aa"BSD" .nr linux 1
.el .nr linux 0
.\"
.Sh NAME
.\"
.Nm lmcconfig
.Nd configuration program for
.Tn LMC
(and some
.Tn SBE )
wide-area network interface cards
.\"
.Sh SYNOPSIS
.\"
.Nm
.Ar interface
.Op Fl abBcCdDeEfgGhiLmMpPsStTuUvVwxXyY?
.Nm
.Ar interface
.Fl 1
.Op Fl aABcdeEfFgiIlLpPstTuUxX
.Nm
.Ar interface
.Fl 3
.Op Fl aABcefFlLsSV
.\"
.Sh DESCRIPTION
.\"
The
.Nm
utility is the configuration program for the
.Xr lmc 4
wide-area network device driver.
It sets control values, such as T3 framing format,
and it displays status, such as that of integrated modems,
which are beyond the scope of
.Xr ifconfig 8 .
.Pp
The
.Nm
utility displays the interface status when no parameters are specified;
see the
.Sx EXAMPLES
section.
For this case only, if no
.Ar interface
is specified, it defaults to
.ie \n[linux] .Dq Li hdlc0 .
.el .Dq Li lmc0 .
.Pp
Only the super-user may modify the configuration of a network interface.
.Pp
The following options are available:
.Bl -tag -width "interface"
.It Ar interface
This is the name of the interface; the default is
.ie \n[linux] .Dq Li hdlc0 .
.el .Dq Li lmc0 .
.if \n[fbsd] \{\
If
.Xr netgraph 4
is present and the interface name ends with a colon
then Netgraph control messages are used,
otherwise the
.if (\n[fbsd] : \n[nbsd] : \n[obsd] : \n[bsdi]) .Xr ifnet 9
.if \n[linux] netdevice
kernel interface and socket
.if (\n[fbsd] : \n[nbsd] : \n[obsd] : \n[bsdi]) .Xr ioctl 2
.if \n[linux] ioctl
system calls are used.
.\}
.It Fl 1
All parameters after this apply to the T1E1 card.
.It Fl 3
All parameters after this apply to the T3 card.
.El
.\"
.Ss Parameters for all cards
.\"
The following parameters apply to more then one card type.
.Bl -tag -width "-W addr data"
.It Fl a Ar number
Set Transmitter clock source to
.Ar number .
.Pp
.Bl -column "1" "External connector" "T1E1, HSSIc" -compact
.It 1 Ta "TxClk from modem"   Ta "T1E1, HSSI"  Ta "(default)"
.It 2 Ta "Internal source"    Ta "T1E1, HSSI"
.It 3 Ta "RxClk from modem"   Ta "T1E1, HSSIc" Ta "(loop timed)"
.It 4 Ta "External connector" Ta "T1E1, HSSIc"
.El
.Pp
An HSSI card normally takes its Tx clock from the modem connector
(it is a DTE) but can use the PCI bus clock (typically 33 MHz)
for loopback and null modem testing; values 3 and 4 are only
applicable to a few rare CompactPCI/HSSI cards.
.Pp
A T1E1 card uses an on-board synthesized oscillator
if the value is 1 or 2; it
.Em loop times
(uses the clock recovered by the receiver as the transmitter clock)
if the value is 3; and it uses a clock from a header connector on
the card if the value is 4.
.Pp
TxClk source is not applicable to other card types.
.It Fl b
Read BIOS ROM.
Print the first 256 locations.
The BIOS ROM is not used and not present on some cards.
.It Fl B
Write BIOS ROM.
Write the first 256 locations with an address pattern.
.It Fl c
Use HDLC's 16-bit Cyclic Redundancy Checksum (CRC).
.It Fl C
Use HDLC's 32-bit Cyclic Redundancy Checksum (CRC).
.It Fl d
Clear the driver-level debug flag.
Non-critical log messages are suppressed.
.It Fl D
Set the driver-level debug flag.
The driver generates more log messages.
The driver also generates more log messages if
the interface-level debug flag is set by
.Xr ifconfig 8 .
.It Fl e
Set DTE (Data Terminal Equipment) mode (default).
An SSI card transmitter uses the Tx clock signal from the
modem connector and receives the Data Carrier Detect pin (DCD).
DTE/DCE is not applicable to other card types
except a few rare CompactPCI/HSSI cards.
.It Fl E
Set DCE (Data Communication Equipment) mode.
An SSI card transmitter uses an on-board synthesized oscillator
and drives the Data Carrier Detect pin (DCD).
.It Fl f Ar number
Set the frequency of the built-in synthesized oscillator to
.Ar number
bits/second.
The nearest frequency that the synthesizer can generate will be used.
Only SSI cards and a few rare CompactPCI/HSSI cards have synthesizers.
.It Fl g
Load gate array microcode from on-board ROM; see also
.Fl U.
.It Fl G Ar filename
Load gate array microcode from
.Ar filename ;
see also
.Fl U.
.It Fl h
Print help (usage message).
.It Fl i
Set interface name (e.g.\&
.Dq Li lmc0 ) .
.It Fl L Ar number
Set loopback mode to
.Ar number .
.Pp
.Bl -column "99" "payload" "inward thru drvrs/rcvrs" -compact
.It  1 Ta "none"    Ta "default"
.It  2 Ta "payload" Ta "outward thru framer"     Ta "T1E1. T3"
.It  3 Ta "line"    Ta "outward thru line if"    Ta "T1E1, T3"
.It  4 Ta "other"   Ta "inward thru line if"     Ta "T1E1, T3"
.It  5 Ta "inward"  Ta "inward thru framer"      Ta "T1E1, T3"
.It  6 Ta "dual"    Ta "inward and outward"      Ta "T1E1, T3"
.It 16 Ta "tulip"   Ta "inward thru Tulip chip"  Ta "all cards"
.It 17 Ta "pins"    Ta "inward thru drvrs/rcvrs" Ta "SSI"
.It 18 Ta "LA/LL"   Ta "assert LA/LL modem pin"  Ta "HSSI, SSI"
.It 19 Ta "LB/RL"   Ta "assert LB/RL modem pin"  Ta "HSSI, SSI"
.El
.It Fl m
Read Tulip MII registers.
Print the 32 16-bit registers in the Media Independent Interface.
.It Fl M Ar addr Ar data
Write Tulip MII register.
Write
.Ar data
into register
.Ar addr .
.It Fl p
Read Tulip PCI configuration registers.
Print the first 16 32-bit registers in the PCI configuration space.
.It Fl P Ar addr Ar data
Write Tulip PCI configuration register.
Write
.Ar data
into register
.Ar addr .
.It Fl s
Read Tulip SROM.
Print the 64 16-bit locations.
The PCI subsystem vendor and device IDs are kept here.
.It Fl S Ar number
Write Tulip SROM.
Initializes the Tulip SROM to card type
.Ar number .
.Pp
.Bl -column "9" -compact
.It 3 Ta "HSSI"
.It 4 Ta "T3"
.It 5 Ta "SSI"
.It 6 Ta "T1E1"
.It 7 Ta "HSSIc"
.It 8 Ta "SDSL"
.It 0 Ta "auto-set from uCode type"
.El
.Pp
If
.Ar number
is zero, then the card type is computed from the gate array
microcode version field in the MII PHYID register.
.Em CAUTION :
if the SROM is incorrect, the card will be unusable!
This command is
.Em so
dangerous that
.Nm
must be edited and recompiled to enable it.
.It Fl t
Read Tulip CSRs.
Print the 16 32-bit Control and Status Registers.
.It Fl T Ar addr Ar data
Write Tulip CSR.
Write
.Ar data
into register
.Ar addr .
Note that
.Ar addr
is a CSR number (0-15) not a byte offset into CSR space.
.It Fl u
Reset event counters to zero.
The driver counts events like packets in and out, errors, discards, etc.
The time when the counters are reset is remembered.
.It Fl U
Reset gate array microcode.
.It Fl v
Set verbose mode: print more stuff.
.It Fl V
Print the card configuration; see the
.Sx EXAMPLES
section.
.It Fl x Ar number
Set the line control protocol to
.Ar number .
Line control protocols are listed below along with the operating
systems that implement them and the stacks that include them.
.Pp
.Bl -column "1" "FrameRelay" "fnobl" "dspgsn" -compact
.It x Ta Em Protocol Ta Em OpSys Ta Em Stack
.It 1 Ta "IPinHDLC"   Ta "FNOBL" Ta "D--G-N"
.It 2 Ta "PPP"        Ta "FNOBL" Ta "-SPGYN"
.It 3 Ta "CiscoHDLC"  Ta "FNOBL" Ta "-SPGYN"
.It 4 Ta "FrameRelay" Ta "F--BL" Ta "-SPG-N"
.It 5 Ta "EthInHDLC"  Ta "F---L" Ta "---G-N"
.El
.Bd -unfilled
OpSys: FreeBSD NetBSD OpenBSD BSD/OS Linux.
Stack: Driver SPPP P2P GenHDLC sYncPPP Netgraph.
.Ed
.It Fl X Ar number
Set the line control protocol stack to
.Ar number .
Line control protocol stacks are listed below along with the operating
systems that include them and the protocols that they implement.
.Pp
.Bl -column "1" "FrameRelay" "fnobl" "ipcfe" -compact
.It X Ta Em Stack Ta Em OpSys Ta Em Protocol
.It 1 Ta "Driver"     Ta "FNOBL" Ta "I----"
.It 2 Ta "SPPP"       Ta "FNO--" Ta "-PCF-"
.It 3 Ta "P2P"        Ta "---B-" Ta "-PCF-"
.It 4 Ta "GenHDLC"    Ta "----L" Ta "IPCFE"
.It 5 Ta "SyncPPP"    Ta "----L" Ta "-PC--"
.It 6 Ta "Netgraph"   Ta "F----" Ta "IPCFE"
.El
.Bd -unfilled
OpSys: FreeBSD NetBSD OpenBSD BSD/OS Linux.
Protocol: IPinHDLC PPP CiscoHDLC FrmRly EthInHDLC.
.Ed
.It Fl y
Disable SPPP/SyncPPP keep-alive packets,
.It Fl Y
Enable SPPP/SyncPPP keep-alive packets.
.It Fl ?\&
Print help (usage message).
.El
.\"
.Ss Parameters for T1E1 cards
.\"
The following parameters apply to the T1E1 card type:
.Bl -tag -width "-W addr data"
.It Fl "a" Sm Cm y | a | b Sm
Stop sending alarm signal (see table below).
.It Fl "A" Sm Cm y | a | b Sm
Start sending alarm signal.
.Pp
.Bl -column "y" "Yellow Alarm" -compact
.It y Ta "Yellow Alarm" Ta "varies with framing"
.It a Ta "Red Alarm"    Ta "unframed all ones; aka AIS"
.It b Ta "Blue Alarm"   Ta "unframed all ones"
.El
.Pp
Red alarm, also known as AIS (Alarm Indication Signal),
and Blue alarm are identical in T1.
.It Fl B Ar number
Send a Bit Oriented Protocol (BOP) message with code
.Ar number .
BOP codes are six bits.
.It Fl c Ar number
Set cable length to
.Ar number
meters (default: 10 meters).
This is used to set receiver sensitivity
and transmitter line build-out.
.It Fl d
Print the status of the on-board T1 DSU/CSU; see the
.Sx EXAMPLES
section.
.It Fl e Ar number
Set the framing format to
.Ar number .
.Pp
.Bl -column "99" -compact
.It  9 Ta "T1-SF/AMI"
.It 27 Ta "T1-ESF/B8ZS (default)"
.It  0 Ta "E1-FAS"
.It  8 Ta "E1-FAS+CRC"
.It 16 Ta "E1-FAS+CAS"
.It 24 Ta "E1-FAS+CRC+CAS"
.It 32 Ta "E1-NO-framing"
.El
.It Fl E Ar number
Enable 64Kb time slots (TSs) for the T1E1 card.
The
.Ar number
argument is a 32-bit hex number (default 0xFFFFFFFF).
The LSB is TS0 and the MSB is TS31.
TS0 and TS25-31 are ignored in T1 mode.
TS0 and TS16 are determined by the framing format in E1 mode.
.It Fl f
Read framer registers.
Print the 512 8-bit registers in the framer chip.
.It Fl F Ar addr Ar data
Write framer register.
Write
.Ar data
into register
.Ar addr .
.It Fl g Ar number
Set receiver gain range to
.Ar number .
.Pp
.Bl -column "0x00" "Medium" -compact
.It 0x24 Ta "Short"  Ta "0 to 20 dB of equalized gain"
.It 0x2C Ta "Medium" Ta "0 to 30 dB of equalized gain"
.It 0x34 Ta "Long"   Ta "0 to 40 dB of equalized gain"
.It 0x3F Ta "Extend" Ta "0 to 64 dB of equalized gain (wide open)"
.It 0xFF Ta "Auto"   Ta "auto-set based on cable length (default)"
.El
.Pp
This sets the level at which
.Em Loss-Of-Signal
is declared.
.It Fl i
Send a
.Em CSU loopback deactivate
inband command (T1 only).
.It Fl I
Send a
.Em CSU loopback activate
inband command (T1 only).
.It Fl l
Send a
.Em line loopback deactivate
BOP message (T1-ESF only).
.It Fl L
Send a
.Em line loopback activate
BOP message (T1-ESF only).
.It Fl p
Send a
.Em payload loopback deactivate
BOP message (T1-ESF only).
.It Fl P
Send a
.Em payload loopback activate
BOP message (T1-ESF only).
.It Fl s
Print the status of the on-board DSU/CSU; see the
.Sx EXAMPLES
section.
.It Fl t
Stop sending test pattern (see table below).
.It Fl T Ar number
Start sending test pattern
.Ar number .
.Pp
.Bl -column "99" -compact
.It  0 Ta "unframed X^11+X^9+1"
.It  1 Ta "unframed X^15+X^14+1"
.It  2 Ta "unframed X^20+X^17+1"
.It  3 Ta "unframed X^23+X^18+1"
.It  4 Ta "unframed X^11+X^9+1  with 7ZS"
.It  5 Ta "unframed X^15+X^14+1 with 7ZS"
.It  6 Ta "unframed X^20+X^17+1 with 14ZS (QRSS)"
.It  7 Ta "unframed X^23+X^18+1 with 14ZS"
.It  8 Ta "  framed X^11+X^9+1"
.It  9 Ta "  framed X^15+X^14+1"
.It 10 Ta "  framed X^20+X^17+1"
.It 11 Ta "  framed X^23+X^18+1"
.It 12 Ta "  framed X^11+X^9+1  with 7ZS"
.It 13 Ta "  framed X^15+X^14+1 with 7ZS"
.It 14 Ta "  framed X^20+X^17+1 with 14ZS (QRSS)"
.It 15 Ta "  framed X^23+X^18+1 with 14ZS"
.El
.It Fl u Ar number
Set transmit pulse shape to
.Ar number .
.Pp
.Bl -column "255" -compact
.It   0 Ta "T1 DSX 0 to 40 meters"
.It   2 Ta "T1 DSX 40 to 80 meters"
.It   4 Ta "T1 DSX 80 to 120 meters"
.It   6 Ta "T1 DSX 120 to 160 meters"
.It   8 Ta "T1 DSX 160 to 200 meters"
.It  10 Ta "E1 75-ohm coax pair"
.It  12 Ta "E1 120-ohm twisted pairs"
.It  14 Ta "T1 CSU 200 to 2000 meters; set LBO"
.It 255 Ta "auto-set based on cable length and framing format (default)"
.El
.It Fl U Ar number
Set transmit line build-out to
.Ar number .
.Pp
.Bl -column "255" "22.5 dB" -compact
.It   0 Ta "0 dB"    Ta "FCC option A"
.It  16 Ta "7.5 dB"  Ta "FCC option B"
.It  32 Ta "15 dB"   Ta "FCC option C"
.It  48 Ta "22.5 dB" Ta "final span"
.It 255 Ta "auto-set based on cable length (default)"
.El
.Pp
This is only applicable if the pulse shape is T1-CSU.
.It Fl x
Disable transmitter outputs.
.It Fl X
Enable transmitter outputs.
.El
.\"
.Ss Parameters for T3 cards
.\"
The following parameters apply to the T3 card type:
.Bl -tag -width "-W addr data"
.It Fl "a" Sm Cm y | a | b | i Sm
Stop sending alarm signal (see table below).
.It Fl "A" Sm Cm y | a | b | i Sm
Start sending alarm signal.
.Pp
.Bl -column "y" "Yellow Alarm" -compact
.It y Ta "Yellow Alarm" Ta "X-bits set to 0"
.It a Ta "Red Alarm"    Ta "framed 1010... aka AIS"
.It b Ta "Blue Alarm"   Ta "unframed all-ones"
.It i Ta "Idle signal"  Ta "framed 11001100..."
.El
.It Fl B Ar number
Send a Far End Alarm and Control (FEAC) message with code
.Ar number .
FEAC codes are six bits.
.It Fl c Ar number
Set cable length to
.Ar number
meters (default: 10 meters).
This is used to set receiver sensitivity
and transmitter line build-out.
.It Fl d
Print the status of the on-board T3 DSU; see the
.Sx EXAMPLES
section.
.It Fl e Ar number
Set the framing format to
.Ar number .
.Pp
.Bl -column "100" -compact
.It 100 Ta "T3-C-bit parity"
.It 101 Ta "T3-M13 format"
.El
.It Fl f
Read framer registers.
Print the 22 8-bit registers in the framer chip.
.It Fl F Ar addr Ar data
Write framer register.
Write
.Ar data
into register
.Ar addr .
.It Fl l
Send a
.Em line loopback deactivate
BOP message.
.It Fl L
Send a
.Em line loopback activate
BOP message.
.It Fl s
Print the status of the on-board T3 DSU; see the
.Sx EXAMPLES
section.
.It Fl S Ar number
Set payload scrambler polynominal to
.Ar number .
.Pp
.Bl -column "9" -compact
.It 1 Ta "payload scrambler disabled"
.It 2 Ta "X^43+1: DigitalLink and Kentrox"
.It 3 Ta "X^20+X^17+1 w/28ZS: Larscom"
.El
.Pp
Payload scrambler polynomials are not standardized.
.It Fl V Ar number
Set transmit frequency offset to
.Ar number .
Some T3 cards can offset the transmitter frequency from 44.736 MHz.
.Ar Number
is in the range (0..4095); 2048 is zero offset; step size is about 3 Hz.
A
.Ar number
is written to a Digital-Analog Converter (DAC) which connects
to a Voltage Controlled Crystal Oscillator (VCXO).
.El
.\"
.Ss Event Counters
.\"
The device driver counts many interesting events such as
packets in and out, errors and discards.
The table below lists the event counters and describes what they count.
.Bl -tag -width "Tx fifo underruns"
.It Va "Rx bytes"
Bytes received in packets with good ending status.
.It Va "Tx bytes"
Bytes transmitted in packets with good ending status.
.It Va "Rx packets"
Packets received with good ending status.
.It Va "Tx packets"
Packets transmitted with good ending status.
.It Va "Rx errors"
Packets received with bad ending status.
.It Va "Tx errors"
Packets transmitted with bad ending status.
.It Va "Rx drops"
Packets received but discarded by software because
the input queue was full or the link was down.
.It Va "Rx missed"
Packets that were missed by hardware because
the receiver was enabled but had no DMA descriptors.
.It Va "Tx drops"
Packets presented for transmission but discarded by software because
the output queue was full or the link was down.
.It Va "Rx fifo overruns"
Packets that started to arrive, but were aborted because
the card was unable to DMA data to memory fast enough
to prevent the receiver fifo from overflowing.
This is reported in the ending status of DMA descriptors.
.It Va "Rx overruns"
Rx Fifo overruns reported by the Tulip chip in the Status CSR.
The driver stops the receiver and restarts it to work around
a potential hardware hangup.
.It Va "Tx fifo underruns"
Packets that started to transmit but were aborted because
the card was unable to DMA data from memory fast enough
to prevent the transmitter fifo from underflowing.
This is reported in the ending status of DMA descriptors.
.It Va "Tx underruns"
Tx Fifo underruns reported by the Tulip chip in the Status CSR.
The driver increases the transmitter threshold,
requiring more bytes to be in the fifo before the transmitter is started.
.It Va "Rx FDL pkts"
Packets received on the T1 Facility Data Link.
.It Va "Rx CRC"
Cyclic Redundancy Checksum errors detected by the CRC-6 in
T1 Extended SuperFrames (ESF) or the CRC-4 in E1 frames.
.It Va "Rx line code"
Line Coding Violation errors:
Alternate Mark Inversion (AMI) errors for T1-SF,
Bipolar 8-Zero Substitution (B8ZS) errors for T1-ESF, or
High Density Bipolar with 3-Zero Substitution (HDB3) errors for E1 or
Bipolar 3-Zero Substitution (B3ZS) errors for T3.
.It Va "Rx F-bits"
T1 or T3 bit errors in the frame alignment signal.
.It Va "Rx FEBE"
Far End Block Errors:
T1 or T3 bit errors detected by the device at the far end of the link.
.It Va "Rx P-parity"
T3 bit errors detected by the hop-by-hop parity mechanism.
.It Va "Rx C-parity"
T3 bit errors detected by the end-to-end parity mechanism.
.It Va "Rx M-bits"
T3 bit errors in the multi-frame alignment signal.
.El
.Pp
If driver debug mode is enabled, more event counters are displayed.
.Bl -tag -width "Tx fifo underruns"
.It Va "Rx no bufs"
Failure to allocate a replacement packet buffer
for an incoming packet.
The buffer allocation is retried later.
.It Va "Tx no descs"
Failure to allocate a DMA descriptor
for an outgoing packet.
The descriptor allocation is retried later.
.It Va "Lock watch"
The watchdog routine conflicted with an IOCTL syscall.
.It Va "Lock intr"
A CPU tried to enter the interrupt handler
while another CPU was already inside.
The second CPU simply walks away.
.It Va "Spare1-4"
Nameless events of interest to the device driver maintainer.
.El
.\"
.Ss Transmit Speed
.\"
The hardware counts transmit clocks divided by 2048.
The software computes
.Dq Tx speed
from this (see
.Sx EXAMPLES
below).
The transmit clock is the bit rate of the circuit divided by two if the
circuit is idle and divided by four if the circuit is carrying a packet.
So an empty circuit reports a Tx speed equal to its bit rate,
and a full circuit reports a Tx speed equal to half its bit rate.
.Pp
This
.Dq bit rate
does not include circuit-level overhead bits
(such as T1 or T3 frame bits) but does include HDLC stuff bits.
An idle T1 circuit with a raw bit rate of 1544000 and a
bit-rate-minus-overhead of 1536000 will report a
.Dq Tx speed
of ((1536000 bitand 4095) plus or minus 4096).
Sometimes it will even get the correct answer of 1536000, and
if the link is fully loaded it will report about 768000 bits/sec.
.Pp
It is not a perfect bit rate meter (the circuit must be idle),
but it is a useful circuit utilization meter if you know the
circuit bit rate and do some arithmetic.
Software recalculates Tx speed once a second;
the measurement period has some jitter.
.\"
.Sh EXAMPLES
.\"
When
.Dq Li lmc0
is a T1E1 card,
.Dq Li lmcconfig lmc0
generates the following output:
.Bd -literal -offset indent
Card name:              lmc0
Card type:              T1E1 (lmc1200)
Link status:            Up
Tx Speed:               1536000
Line Prot/Pkg:          PPP/P2P
CRC length:             16 bits
Tx Clk src:             Modem Rx Clk (loop timed)
Format-Frame/Code:      T1-ESF/B8ZS
TimeSlots [31-0]:       0x01FFFFFE
Cable length:           10 meters
Current time:           Wed Jan  4 05:35:10 2006
Cntrs reset:            Fri Dec 16 19:23:45 2005
Rx bytes:               176308259
Tx bytes:               35194717
Rx packets:             383162
Tx packets:             357792
.Ed
.Pp
When
.Dq Li lmc0
is a T1E1 card,
.Dq Li lmcconfig lmc0 -1 -d
generates the following output:
.Bd -literal -offset indent
Format-Frame/Code:      T1-ESF/B8ZS
TimeSlots [31-0]:       0x01FFFFFE
Tx Clk src:             Modem Rx Clk (loop timed)
Tx Speed:               1536000
Tx pulse shape:         T1-DSX: 0 to 40 meters
Tx outputs:             Enabled
Line impedance:         100 ohms
Max line loss:          20.0 dB
Cur line loss:           0.0 dB
Invert data:            No
Line    loop:           No
Payload loop:           No
Framer  loop:           No
Analog  loop:           No
Tx AIS:                 No
Rx AIS:                 No
Tx BOP RAI:             No
Rx BOP RAI:             No
Rx LOS analog:          No
Rx LOS digital:         No
Rx LOF:                 No
Tx QRS:                 No
Rx QRS:                 No
LCV errors:             0
CRC errors:             0
Frame errors:           0
Sev Err Frms:           0
Change of Frm align:    0
Loss of Frame events:   0
SNMP Near-end performance data:
 LCV=0 LOS=0 FE=0 CRC=0 AIS=0 SEF=0 OOF=0  RAI=0
ANSI Far-end performance reports:
 SEQ=0 CRC=0 SE=0 FE=0 LV=0 SL=0 LB=0
 SEQ=1 CRC=0 SE=0 FE=0 LV=0 SL=0 LB=0
 SEQ=2 CRC=0 SE=0 FE=0 LV=0 SL=0 LB=0
 SEQ=3 CRC=0 SE=0 FE=0 LV=0 SL=0 LB=0
.Ed
.\"
.Sh DIAGNOSTICS
.\"
Messages indicating the specified interface does not exist, or
the user is not privileged and tried to alter an interface's configuration.
.\"
.Sh SEE ALSO
.\"
.Xr ioctl 2 ,
.Xr lmc 4 ,
.if \n[fbsd] .Xr netgraph 4 ,
.Xr ifconfig 8 ,
.Xr ifnet 9
.\"
.Sh HISTORY
.\"
This is a total rewrite of the program
.Nm lmcctl
by
.An Michael Graff ,
.An Rob Braun
and
.An Andrew Stanley-Jones .
.\"
.Sh AUTHORS
.\"
.An David Boggs Aq boggs@boggs.palo-alto.ca.us
