# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013 Free Software Foundation, Inc.
# This Makefile.am is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.
VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = tversion$(EXEEXT) tinternals$(EXEEXT) tinits$(EXEEXT) \
	tisqrt$(EXEEXT) tsgn$(EXEEXT) tcheck$(EXEEXT) tisnan$(EXEEXT) \
	texceptions$(EXEEXT) tset_exp$(EXEEXT) tset$(EXEEXT) \
	mpf_compat$(EXEEXT) mpfr_compat$(EXEEXT) reuse$(EXEEXT) \
	tabs$(EXEEXT) tacos$(EXEEXT) tacosh$(EXEEXT) tadd$(EXEEXT) \
	tadd1sp$(EXEEXT) tadd_d$(EXEEXT) tadd_ui$(EXEEXT) \
	tagm$(EXEEXT) tai$(EXEEXT) tasin$(EXEEXT) tasinh$(EXEEXT) \
	tatan$(EXEEXT) tatanh$(EXEEXT) taway$(EXEEXT) \
	tbuildopt$(EXEEXT) tcan_round$(EXEEXT) tcbrt$(EXEEXT) \
	tcmp$(EXEEXT) tcmp2$(EXEEXT) tcmp_d$(EXEEXT) tcmp_ld$(EXEEXT) \
	tcmp_ui$(EXEEXT) tcmpabs$(EXEEXT) tcomparisons$(EXEEXT) \
	tconst_catalan$(EXEEXT) tconst_euler$(EXEEXT) \
	tconst_log2$(EXEEXT) tconst_pi$(EXEEXT) tcopysign$(EXEEXT) \
	tcos$(EXEEXT) tcosh$(EXEEXT) tcot$(EXEEXT) tcoth$(EXEEXT) \
	tcsc$(EXEEXT) tcsch$(EXEEXT) td_div$(EXEEXT) td_sub$(EXEEXT) \
	tdigamma$(EXEEXT) tdim$(EXEEXT) tdiv$(EXEEXT) tdiv_d$(EXEEXT) \
	tdiv_ui$(EXEEXT) teint$(EXEEXT) teq$(EXEEXT) terf$(EXEEXT) \
	texp$(EXEEXT) texp10$(EXEEXT) texp2$(EXEEXT) texpm1$(EXEEXT) \
	tfactorial$(EXEEXT) tfits$(EXEEXT) tfma$(EXEEXT) \
	tfmod$(EXEEXT) tfms$(EXEEXT) tfprintf$(EXEEXT) tfrac$(EXEEXT) \
	tfrexp$(EXEEXT) tgamma$(EXEEXT) tget_flt$(EXEEXT) \
	tget_d$(EXEEXT) tget_d_2exp$(EXEEXT) tget_f$(EXEEXT) \
	tget_ld_2exp$(EXEEXT) tget_set_d64$(EXEEXT) tget_sj$(EXEEXT) \
	tget_str$(EXEEXT) tget_z$(EXEEXT) tgmpop$(EXEEXT) \
	tgrandom$(EXEEXT) thyperbolic$(EXEEXT) thypot$(EXEEXT) \
	tinp_str$(EXEEXT) tj0$(EXEEXT) tj1$(EXEEXT) tjn$(EXEEXT) \
	tl2b$(EXEEXT) tlgamma$(EXEEXT) tli2$(EXEEXT) tlngamma$(EXEEXT) \
	tlog$(EXEEXT) tlog10$(EXEEXT) tlog1p$(EXEEXT) tlog2$(EXEEXT) \
	tmin_prec$(EXEEXT) tminmax$(EXEEXT) tmodf$(EXEEXT) \
	tmul$(EXEEXT) tmul_2exp$(EXEEXT) tmul_d$(EXEEXT) \
	tmul_ui$(EXEEXT) tnext$(EXEEXT) tout_str$(EXEEXT) \
	toutimpl$(EXEEXT) tpow$(EXEEXT) tpow3$(EXEEXT) \
	tpow_all$(EXEEXT) tpow_z$(EXEEXT) tprintf$(EXEEXT) \
	trandom$(EXEEXT) trec_sqrt$(EXEEXT) tremquo$(EXEEXT) \
	trint$(EXEEXT) troot$(EXEEXT) tround_prec$(EXEEXT) \
	tsec$(EXEEXT) tsech$(EXEEXT) tset_d$(EXEEXT) tset_f$(EXEEXT) \
	tset_ld$(EXEEXT) tset_q$(EXEEXT) tset_si$(EXEEXT) \
	tset_sj$(EXEEXT) tset_str$(EXEEXT) tset_z$(EXEEXT) \
	tset_z_exp$(EXEEXT) tsi_op$(EXEEXT) tsin$(EXEEXT) \
	tsin_cos$(EXEEXT) tsinh$(EXEEXT) tsinh_cosh$(EXEEXT) \
	tsprintf$(EXEEXT) tsqr$(EXEEXT) tsqrt$(EXEEXT) \
	tsqrt_ui$(EXEEXT) tstckintc$(EXEEXT) tstdint$(EXEEXT) \
	tstrtofr$(EXEEXT) tsub$(EXEEXT) tsub1sp$(EXEEXT) \
	tsub_d$(EXEEXT) tsub_ui$(EXEEXT) tsubnormal$(EXEEXT) \
	tsum$(EXEEXT) tswap$(EXEEXT) ttan$(EXEEXT) ttanh$(EXEEXT) \
	ttrunc$(EXEEXT) tui_div$(EXEEXT) tui_pow$(EXEEXT) \
	tui_sub$(EXEEXT) turandom$(EXEEXT) tvalist$(EXEEXT) \
	ty0$(EXEEXT) ty1$(EXEEXT) tyn$(EXEEXT) tzeta$(EXEEXT) \
	tzeta_ui$(EXEEXT) tversion$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/size_max.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
libfrtests_la_LIBADD =
am_libfrtests_la_OBJECTS = memory.lo rnd_mode.lo tests.lo cmp_str.lo \
	random2.lo
libfrtests_la_OBJECTS = $(am_libfrtests_la_OBJECTS)
mpf_compat_SOURCES = mpf_compat.c
mpf_compat_OBJECTS = mpf_compat.$(OBJEXT)
mpf_compat_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
mpf_compat_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
mpfr_compat_SOURCES = mpfr_compat.c
mpfr_compat_OBJECTS = mpfr_compat.$(OBJEXT)
mpfr_compat_LDADD = $(LDADD)
mpfr_compat_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
reuse_SOURCES = reuse.c
reuse_OBJECTS = reuse.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tabs_SOURCES = tabs.c
tabs_OBJECTS = tabs.$(OBJEXT)
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tacos_SOURCES = tacos.c
tacos_OBJECTS = tacos.$(OBJEXT)
tacos_LDADD = $(LDADD)
tacos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tacosh_SOURCES = tacosh.c
tacosh_OBJECTS = tacosh.$(OBJEXT)
tacosh_LDADD = $(LDADD)
tacosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tadd_SOURCES = tadd.c
tadd_OBJECTS = tadd.$(OBJEXT)
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tadd1sp_SOURCES = tadd1sp.c
tadd1sp_OBJECTS = tadd1sp.$(OBJEXT)
tadd1sp_LDADD = $(LDADD)
tadd1sp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tadd_d_SOURCES = tadd_d.c
tadd_d_OBJECTS = tadd_d.$(OBJEXT)
tadd_d_LDADD = $(LDADD)
tadd_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tadd_ui_SOURCES = tadd_ui.c
tadd_ui_OBJECTS = tadd_ui.$(OBJEXT)
tadd_ui_LDADD = $(LDADD)
tadd_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tagm_SOURCES = tagm.c
tagm_OBJECTS = tagm.$(OBJEXT)
tagm_LDADD = $(LDADD)
tagm_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tai_SOURCES = tai.c
tai_OBJECTS = tai.$(OBJEXT)
tai_LDADD = $(LDADD)
tai_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tasin_SOURCES = tasin.c
tasin_OBJECTS = tasin.$(OBJEXT)
tasin_LDADD = $(LDADD)
tasin_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tasinh_SOURCES = tasinh.c
tasinh_OBJECTS = tasinh.$(OBJEXT)
tasinh_LDADD = $(LDADD)
tasinh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tatan_SOURCES = tatan.c
tatan_OBJECTS = tatan.$(OBJEXT)
tatan_LDADD = $(LDADD)
tatan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tatanh_SOURCES = tatanh.c
tatanh_OBJECTS = tatanh.$(OBJEXT)
tatanh_LDADD = $(LDADD)
tatanh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
taway_SOURCES = taway.c
taway_OBJECTS = taway.$(OBJEXT)
taway_LDADD = $(LDADD)
taway_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tbuildopt_SOURCES = tbuildopt.c
tbuildopt_OBJECTS = tbuildopt.$(OBJEXT)
tbuildopt_LDADD = $(LDADD)
tbuildopt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcan_round_SOURCES = tcan_round.c
tcan_round_OBJECTS = tcan_round.$(OBJEXT)
tcan_round_LDADD = $(LDADD)
tcan_round_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcbrt_SOURCES = tcbrt.c
tcbrt_OBJECTS = tcbrt.$(OBJEXT)
tcbrt_LDADD = $(LDADD)
tcbrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcheck_SOURCES = tcheck.c
tcheck_OBJECTS = tcheck.$(OBJEXT)
tcheck_LDADD = $(LDADD)
tcheck_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcmp_SOURCES = tcmp.c
tcmp_OBJECTS = tcmp.$(OBJEXT)
tcmp_LDADD = $(LDADD)
tcmp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcmp2_SOURCES = tcmp2.c
tcmp2_OBJECTS = tcmp2.$(OBJEXT)
tcmp2_LDADD = $(LDADD)
tcmp2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcmp_d_SOURCES = tcmp_d.c
tcmp_d_OBJECTS = tcmp_d.$(OBJEXT)
tcmp_d_LDADD = $(LDADD)
tcmp_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcmp_ld_SOURCES = tcmp_ld.c
tcmp_ld_OBJECTS = tcmp_ld.$(OBJEXT)
tcmp_ld_LDADD = $(LDADD)
tcmp_ld_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcmp_ui_SOURCES = tcmp_ui.c
tcmp_ui_OBJECTS = tcmp_ui.$(OBJEXT)
tcmp_ui_LDADD = $(LDADD)
tcmp_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcmpabs_SOURCES = tcmpabs.c
tcmpabs_OBJECTS = tcmpabs.$(OBJEXT)
tcmpabs_LDADD = $(LDADD)
tcmpabs_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcomparisons_SOURCES = tcomparisons.c
tcomparisons_OBJECTS = tcomparisons.$(OBJEXT)
tcomparisons_LDADD = $(LDADD)
tcomparisons_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tconst_catalan_SOURCES = tconst_catalan.c
tconst_catalan_OBJECTS = tconst_catalan.$(OBJEXT)
tconst_catalan_LDADD = $(LDADD)
tconst_catalan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tconst_euler_SOURCES = tconst_euler.c
tconst_euler_OBJECTS = tconst_euler.$(OBJEXT)
tconst_euler_LDADD = $(LDADD)
tconst_euler_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tconst_log2_SOURCES = tconst_log2.c
tconst_log2_OBJECTS = tconst_log2.$(OBJEXT)
tconst_log2_LDADD = $(LDADD)
tconst_log2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tconst_pi_SOURCES = tconst_pi.c
tconst_pi_OBJECTS = tconst_pi.$(OBJEXT)
tconst_pi_LDADD = $(LDADD)
tconst_pi_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcopysign_SOURCES = tcopysign.c
tcopysign_OBJECTS = tcopysign.$(OBJEXT)
tcopysign_LDADD = $(LDADD)
tcopysign_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcos_SOURCES = tcos.c
tcos_OBJECTS = tcos.$(OBJEXT)
tcos_LDADD = $(LDADD)
tcos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcosh_SOURCES = tcosh.c
tcosh_OBJECTS = tcosh.$(OBJEXT)
tcosh_LDADD = $(LDADD)
tcosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcot_SOURCES = tcot.c
tcot_OBJECTS = tcot.$(OBJEXT)
tcot_LDADD = $(LDADD)
tcot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcoth_SOURCES = tcoth.c
tcoth_OBJECTS = tcoth.$(OBJEXT)
tcoth_LDADD = $(LDADD)
tcoth_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcsc_SOURCES = tcsc.c
tcsc_OBJECTS = tcsc.$(OBJEXT)
tcsc_LDADD = $(LDADD)
tcsc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tcsch_SOURCES = tcsch.c
tcsch_OBJECTS = tcsch.$(OBJEXT)
tcsch_LDADD = $(LDADD)
tcsch_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
td_div_SOURCES = td_div.c
td_div_OBJECTS = td_div.$(OBJEXT)
td_div_LDADD = $(LDADD)
td_div_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
td_sub_SOURCES = td_sub.c
td_sub_OBJECTS = td_sub.$(OBJEXT)
td_sub_LDADD = $(LDADD)
td_sub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tdigamma_SOURCES = tdigamma.c
tdigamma_OBJECTS = tdigamma.$(OBJEXT)
tdigamma_LDADD = $(LDADD)
tdigamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tdim_SOURCES = tdim.c
tdim_OBJECTS = tdim.$(OBJEXT)
tdim_LDADD = $(LDADD)
tdim_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS = tdiv.$(OBJEXT)
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tdiv_d_SOURCES = tdiv_d.c
tdiv_d_OBJECTS = tdiv_d.$(OBJEXT)
tdiv_d_LDADD = $(LDADD)
tdiv_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tdiv_ui_SOURCES = tdiv_ui.c
tdiv_ui_OBJECTS = tdiv_ui.$(OBJEXT)
tdiv_ui_LDADD = $(LDADD)
tdiv_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
teint_SOURCES = teint.c
teint_OBJECTS = teint.$(OBJEXT)
teint_LDADD = $(LDADD)
teint_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
teq_SOURCES = teq.c
teq_OBJECTS = teq.$(OBJEXT)
teq_LDADD = $(LDADD)
teq_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
terf_SOURCES = terf.c
terf_OBJECTS = terf.$(OBJEXT)
terf_LDADD = $(LDADD)
terf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
texceptions_SOURCES = texceptions.c
texceptions_OBJECTS = texceptions.$(OBJEXT)
texceptions_LDADD = $(LDADD)
texceptions_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
texp_SOURCES = texp.c
texp_OBJECTS = texp.$(OBJEXT)
texp_LDADD = $(LDADD)
texp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
texp10_SOURCES = texp10.c
texp10_OBJECTS = texp10.$(OBJEXT)
texp10_LDADD = $(LDADD)
texp10_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
texp2_SOURCES = texp2.c
texp2_OBJECTS = texp2.$(OBJEXT)
texp2_LDADD = $(LDADD)
texp2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
texpm1_SOURCES = texpm1.c
texpm1_OBJECTS = texpm1.$(OBJEXT)
texpm1_LDADD = $(LDADD)
texpm1_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfactorial_SOURCES = tfactorial.c
tfactorial_OBJECTS = tfactorial.$(OBJEXT)
tfactorial_LDADD = $(LDADD)
tfactorial_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfits_SOURCES = tfits.c
tfits_OBJECTS = tfits.$(OBJEXT)
tfits_LDADD = $(LDADD)
tfits_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfma_SOURCES = tfma.c
tfma_OBJECTS = tfma.$(OBJEXT)
tfma_LDADD = $(LDADD)
tfma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfmod_SOURCES = tfmod.c
tfmod_OBJECTS = tfmod.$(OBJEXT)
tfmod_LDADD = $(LDADD)
tfmod_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfms_SOURCES = tfms.c
tfms_OBJECTS = tfms.$(OBJEXT)
tfms_LDADD = $(LDADD)
tfms_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfprintf_SOURCES = tfprintf.c
tfprintf_OBJECTS = tfprintf.$(OBJEXT)
tfprintf_LDADD = $(LDADD)
tfprintf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfrac_SOURCES = tfrac.c
tfrac_OBJECTS = tfrac.$(OBJEXT)
tfrac_LDADD = $(LDADD)
tfrac_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tfrexp_SOURCES = tfrexp.c
tfrexp_OBJECTS = tfrexp.$(OBJEXT)
tfrexp_LDADD = $(LDADD)
tfrexp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tgamma_SOURCES = tgamma.c
tgamma_OBJECTS = tgamma.$(OBJEXT)
tgamma_LDADD = $(LDADD)
tgamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_d_SOURCES = tget_d.c
tget_d_OBJECTS = tget_d.$(OBJEXT)
tget_d_LDADD = $(LDADD)
tget_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_d_2exp_SOURCES = tget_d_2exp.c
tget_d_2exp_OBJECTS = tget_d_2exp.$(OBJEXT)
tget_d_2exp_LDADD = $(LDADD)
tget_d_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_f_SOURCES = tget_f.c
tget_f_OBJECTS = tget_f.$(OBJEXT)
tget_f_LDADD = $(LDADD)
tget_f_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_flt_SOURCES = tget_flt.c
tget_flt_OBJECTS = tget_flt.$(OBJEXT)
tget_flt_LDADD = $(LDADD)
tget_flt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_ld_2exp_SOURCES = tget_ld_2exp.c
tget_ld_2exp_OBJECTS = tget_ld_2exp.$(OBJEXT)
tget_ld_2exp_LDADD = $(LDADD)
tget_ld_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_set_d64_SOURCES = tget_set_d64.c
tget_set_d64_OBJECTS = tget_set_d64.$(OBJEXT)
tget_set_d64_LDADD = $(LDADD)
tget_set_d64_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_sj_SOURCES = tget_sj.c
tget_sj_OBJECTS = tget_sj.$(OBJEXT)
tget_sj_LDADD = $(LDADD)
tget_sj_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_str_SOURCES = tget_str.c
tget_str_OBJECTS = tget_str.$(OBJEXT)
tget_str_LDADD = $(LDADD)
tget_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tget_z_SOURCES = tget_z.c
tget_z_OBJECTS = tget_z.$(OBJEXT)
tget_z_LDADD = $(LDADD)
tget_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tgmpop_SOURCES = tgmpop.c
tgmpop_OBJECTS = tgmpop.$(OBJEXT)
tgmpop_LDADD = $(LDADD)
tgmpop_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tgrandom_SOURCES = tgrandom.c
tgrandom_OBJECTS = tgrandom.$(OBJEXT)
tgrandom_LDADD = $(LDADD)
tgrandom_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
thyperbolic_SOURCES = thyperbolic.c
thyperbolic_OBJECTS = thyperbolic.$(OBJEXT)
thyperbolic_LDADD = $(LDADD)
thyperbolic_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
thypot_SOURCES = thypot.c
thypot_OBJECTS = thypot.$(OBJEXT)
thypot_LDADD = $(LDADD)
thypot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tinits_SOURCES = tinits.c
tinits_OBJECTS = tinits.$(OBJEXT)
tinits_LDADD = $(LDADD)
tinits_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tinp_str_SOURCES = tinp_str.c
tinp_str_OBJECTS = tinp_str.$(OBJEXT)
tinp_str_LDADD = $(LDADD)
tinp_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tinternals_SOURCES = tinternals.c
tinternals_OBJECTS = tinternals.$(OBJEXT)
tinternals_LDADD = $(LDADD)
tinternals_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tisnan_SOURCES = tisnan.c
tisnan_OBJECTS = tisnan.$(OBJEXT)
tisnan_LDADD = $(LDADD)
tisnan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tisqrt_SOURCES = tisqrt.c
tisqrt_OBJECTS = tisqrt.$(OBJEXT)
tisqrt_LDADD = $(LDADD)
tisqrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tj0_SOURCES = tj0.c
tj0_OBJECTS = tj0.$(OBJEXT)
tj0_LDADD = $(LDADD)
tj0_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tj1_SOURCES = tj1.c
tj1_OBJECTS = tj1.$(OBJEXT)
tj1_LDADD = $(LDADD)
tj1_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tjn_SOURCES = tjn.c
tjn_OBJECTS = tjn.$(OBJEXT)
tjn_LDADD = $(LDADD)
tjn_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tl2b_SOURCES = tl2b.c
tl2b_OBJECTS = tl2b.$(OBJEXT)
tl2b_LDADD = $(LDADD)
tl2b_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tlgamma_SOURCES = tlgamma.c
tlgamma_OBJECTS = tlgamma.$(OBJEXT)
tlgamma_LDADD = $(LDADD)
tlgamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tli2_SOURCES = tli2.c
tli2_OBJECTS = tli2.$(OBJEXT)
tli2_LDADD = $(LDADD)
tli2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tlngamma_SOURCES = tlngamma.c
tlngamma_OBJECTS = tlngamma.$(OBJEXT)
tlngamma_LDADD = $(LDADD)
tlngamma_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tlog_SOURCES = tlog.c
tlog_OBJECTS = tlog.$(OBJEXT)
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tlog10_SOURCES = tlog10.c
tlog10_OBJECTS = tlog10.$(OBJEXT)
tlog10_LDADD = $(LDADD)
tlog10_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tlog1p_SOURCES = tlog1p.c
tlog1p_OBJECTS = tlog1p.$(OBJEXT)
tlog1p_LDADD = $(LDADD)
tlog1p_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS = tlog2.$(OBJEXT)
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tmin_prec_SOURCES = tmin_prec.c
tmin_prec_OBJECTS = tmin_prec.$(OBJEXT)
tmin_prec_LDADD = $(LDADD)
tmin_prec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tminmax_SOURCES = tminmax.c
tminmax_OBJECTS = tminmax.$(OBJEXT)
tminmax_LDADD = $(LDADD)
tminmax_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tmodf_SOURCES = tmodf.c
tmodf_OBJECTS = tmodf.$(OBJEXT)
tmodf_LDADD = $(LDADD)
tmodf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tmul_SOURCES = tmul.c
tmul_OBJECTS = tmul.$(OBJEXT)
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tmul_2exp_SOURCES = tmul_2exp.c
tmul_2exp_OBJECTS = tmul_2exp.$(OBJEXT)
tmul_2exp_LDADD = $(LDADD)
tmul_2exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tmul_d_SOURCES = tmul_d.c
tmul_d_OBJECTS = tmul_d.$(OBJEXT)
tmul_d_LDADD = $(LDADD)
tmul_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tmul_ui_SOURCES = tmul_ui.c
tmul_ui_OBJECTS = tmul_ui.$(OBJEXT)
tmul_ui_LDADD = $(LDADD)
tmul_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tnext_SOURCES = tnext.c
tnext_OBJECTS = tnext.$(OBJEXT)
tnext_LDADD = $(LDADD)
tnext_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tout_str_SOURCES = tout_str.c
tout_str_OBJECTS = tout_str.$(OBJEXT)
tout_str_LDADD = $(LDADD)
tout_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
toutimpl_SOURCES = toutimpl.c
toutimpl_OBJECTS = toutimpl.$(OBJEXT)
toutimpl_LDADD = $(LDADD)
toutimpl_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tpow_SOURCES = tpow.c
tpow_OBJECTS = tpow.$(OBJEXT)
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tpow3_SOURCES = tpow3.c
tpow3_OBJECTS = tpow3.$(OBJEXT)
tpow3_LDADD = $(LDADD)
tpow3_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tpow_all_SOURCES = tpow_all.c
tpow_all_OBJECTS = tpow_all.$(OBJEXT)
tpow_all_LDADD = $(LDADD)
tpow_all_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tpow_z_SOURCES = tpow_z.c
tpow_z_OBJECTS = tpow_z.$(OBJEXT)
tpow_z_LDADD = $(LDADD)
tpow_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tprintf_SOURCES = tprintf.c
tprintf_OBJECTS = tprintf.$(OBJEXT)
tprintf_LDADD = $(LDADD)
tprintf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
trandom_SOURCES = trandom.c
trandom_OBJECTS = trandom.$(OBJEXT)
trandom_LDADD = $(LDADD)
trandom_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
trec_sqrt_SOURCES = trec_sqrt.c
trec_sqrt_OBJECTS = trec_sqrt.$(OBJEXT)
trec_sqrt_LDADD = $(LDADD)
trec_sqrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tremquo_SOURCES = tremquo.c
tremquo_OBJECTS = tremquo.$(OBJEXT)
tremquo_LDADD = $(LDADD)
tremquo_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
trint_SOURCES = trint.c
trint_OBJECTS = trint.$(OBJEXT)
trint_LDADD = $(LDADD)
trint_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
troot_SOURCES = troot.c
troot_OBJECTS = troot.$(OBJEXT)
troot_LDADD = $(LDADD)
troot_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tround_prec_SOURCES = tround_prec.c
tround_prec_OBJECTS = tround_prec.$(OBJEXT)
tround_prec_LDADD = $(LDADD)
tround_prec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsec_SOURCES = tsec.c
tsec_OBJECTS = tsec.$(OBJEXT)
tsec_LDADD = $(LDADD)
tsec_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsech_SOURCES = tsech.c
tsech_OBJECTS = tsech.$(OBJEXT)
tsech_LDADD = $(LDADD)
tsech_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_SOURCES = tset.c
tset_OBJECTS = tset.$(OBJEXT)
tset_LDADD = $(LDADD)
tset_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_d_SOURCES = tset_d.c
tset_d_OBJECTS = tset_d.$(OBJEXT)
tset_d_LDADD = $(LDADD)
tset_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_exp_SOURCES = tset_exp.c
tset_exp_OBJECTS = tset_exp.$(OBJEXT)
tset_exp_LDADD = $(LDADD)
tset_exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_f_SOURCES = tset_f.c
tset_f_OBJECTS = tset_f.$(OBJEXT)
tset_f_LDADD = $(LDADD)
tset_f_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_ld_SOURCES = tset_ld.c
tset_ld_OBJECTS = tset_ld.$(OBJEXT)
tset_ld_LDADD = $(LDADD)
tset_ld_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_q_SOURCES = tset_q.c
tset_q_OBJECTS = tset_q.$(OBJEXT)
tset_q_LDADD = $(LDADD)
tset_q_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_si_SOURCES = tset_si.c
tset_si_OBJECTS = tset_si.$(OBJEXT)
tset_si_LDADD = $(LDADD)
tset_si_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_sj_SOURCES = tset_sj.c
tset_sj_OBJECTS = tset_sj.$(OBJEXT)
tset_sj_LDADD = $(LDADD)
tset_sj_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_str_SOURCES = tset_str.c
tset_str_OBJECTS = tset_str.$(OBJEXT)
tset_str_LDADD = $(LDADD)
tset_str_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_z_SOURCES = tset_z.c
tset_z_OBJECTS = tset_z.$(OBJEXT)
tset_z_LDADD = $(LDADD)
tset_z_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tset_z_exp_SOURCES = tset_z_exp.c
tset_z_exp_OBJECTS = tset_z_exp.$(OBJEXT)
tset_z_exp_LDADD = $(LDADD)
tset_z_exp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsgn_SOURCES = tsgn.c
tsgn_OBJECTS = tsgn.$(OBJEXT)
tsgn_LDADD = $(LDADD)
tsgn_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsi_op_SOURCES = tsi_op.c
tsi_op_OBJECTS = tsi_op.$(OBJEXT)
tsi_op_LDADD = $(LDADD)
tsi_op_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsin_SOURCES = tsin.c
tsin_OBJECTS = tsin.$(OBJEXT)
tsin_LDADD = $(LDADD)
tsin_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsin_cos_SOURCES = tsin_cos.c
tsin_cos_OBJECTS = tsin_cos.$(OBJEXT)
tsin_cos_LDADD = $(LDADD)
tsin_cos_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsinh_SOURCES = tsinh.c
tsinh_OBJECTS = tsinh.$(OBJEXT)
tsinh_LDADD = $(LDADD)
tsinh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsinh_cosh_SOURCES = tsinh_cosh.c
tsinh_cosh_OBJECTS = tsinh_cosh.$(OBJEXT)
tsinh_cosh_LDADD = $(LDADD)
tsinh_cosh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsprintf_SOURCES = tsprintf.c
tsprintf_OBJECTS = tsprintf.$(OBJEXT)
tsprintf_LDADD = $(LDADD)
tsprintf_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsqr_SOURCES = tsqr.c
tsqr_OBJECTS = tsqr.$(OBJEXT)
tsqr_LDADD = $(LDADD)
tsqr_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS = tsqrt.$(OBJEXT)
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsqrt_ui_SOURCES = tsqrt_ui.c
tsqrt_ui_OBJECTS = tsqrt_ui.$(OBJEXT)
tsqrt_ui_LDADD = $(LDADD)
tsqrt_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tstckintc_SOURCES = tstckintc.c
tstckintc_OBJECTS = tstckintc.$(OBJEXT)
tstckintc_LDADD = $(LDADD)
tstckintc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tstdint_SOURCES = tstdint.c
tstdint_OBJECTS = tstdint.$(OBJEXT)
tstdint_LDADD = $(LDADD)
tstdint_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tstrtofr_SOURCES = tstrtofr.c
tstrtofr_OBJECTS = tstrtofr.$(OBJEXT)
tstrtofr_LDADD = $(LDADD)
tstrtofr_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsub_SOURCES = tsub.c
tsub_OBJECTS = tsub.$(OBJEXT)
tsub_LDADD = $(LDADD)
tsub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsub1sp_SOURCES = tsub1sp.c
tsub1sp_OBJECTS = tsub1sp.$(OBJEXT)
tsub1sp_LDADD = $(LDADD)
tsub1sp_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsub_d_SOURCES = tsub_d.c
tsub_d_OBJECTS = tsub_d.$(OBJEXT)
tsub_d_LDADD = $(LDADD)
tsub_d_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsub_ui_SOURCES = tsub_ui.c
tsub_ui_OBJECTS = tsub_ui.$(OBJEXT)
tsub_ui_LDADD = $(LDADD)
tsub_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsubnormal_SOURCES = tsubnormal.c
tsubnormal_OBJECTS = tsubnormal.$(OBJEXT)
tsubnormal_LDADD = $(LDADD)
tsubnormal_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tsum_SOURCES = tsum.c
tsum_OBJECTS = tsum.$(OBJEXT)
tsum_LDADD = $(LDADD)
tsum_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tswap_SOURCES = tswap.c
tswap_OBJECTS = tswap.$(OBJEXT)
tswap_LDADD = $(LDADD)
tswap_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
ttan_SOURCES = ttan.c
ttan_OBJECTS = ttan.$(OBJEXT)
ttan_LDADD = $(LDADD)
ttan_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
ttanh_SOURCES = ttanh.c
ttanh_OBJECTS = ttanh.$(OBJEXT)
ttanh_LDADD = $(LDADD)
ttanh_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
ttrunc_SOURCES = ttrunc.c
ttrunc_OBJECTS = ttrunc.$(OBJEXT)
ttrunc_LDADD = $(LDADD)
ttrunc_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tui_div_SOURCES = tui_div.c
tui_div_OBJECTS = tui_div.$(OBJEXT)
tui_div_LDADD = $(LDADD)
tui_div_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tui_pow_SOURCES = tui_pow.c
tui_pow_OBJECTS = tui_pow.$(OBJEXT)
tui_pow_LDADD = $(LDADD)
tui_pow_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tui_sub_SOURCES = tui_sub.c
tui_sub_OBJECTS = tui_sub.$(OBJEXT)
tui_sub_LDADD = $(LDADD)
tui_sub_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
turandom_SOURCES = turandom.c
turandom_OBJECTS = turandom.$(OBJEXT)
turandom_LDADD = $(LDADD)
turandom_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tvalist_SOURCES = tvalist.c
tvalist_OBJECTS = tvalist.$(OBJEXT)
tvalist_LDADD = $(LDADD)
tvalist_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tversion_SOURCES = tversion.c
tversion_OBJECTS = tversion.$(OBJEXT)
tversion_LDADD = $(LDADD)
tversion_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
ty0_SOURCES = ty0.c
ty0_OBJECTS = ty0.$(OBJEXT)
ty0_LDADD = $(LDADD)
ty0_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
ty1_SOURCES = ty1.c
ty1_OBJECTS = ty1.$(OBJEXT)
ty1_LDADD = $(LDADD)
ty1_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tyn_SOURCES = tyn.c
tyn_OBJECTS = tyn.$(OBJEXT)
tyn_LDADD = $(LDADD)
tyn_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tzeta_SOURCES = tzeta.c
tzeta_OBJECTS = tzeta.$(OBJEXT)
tzeta_LDADD = $(LDADD)
tzeta_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
tzeta_ui_SOURCES = tzeta_ui.c
tzeta_ui_OBJECTS = tzeta_ui.$(OBJEXT)
tzeta_ui_LDADD = $(LDADD)
tzeta_ui_DEPENDENCIES = libfrtests.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmpfr.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libfrtests_la_SOURCES) mpf_compat.c mpfr_compat.c reuse.c \
	tabs.c tacos.c tacosh.c tadd.c tadd1sp.c tadd_d.c tadd_ui.c \
	tagm.c tai.c tasin.c tasinh.c tatan.c tatanh.c taway.c \
	tbuildopt.c tcan_round.c tcbrt.c tcheck.c tcmp.c tcmp2.c \
	tcmp_d.c tcmp_ld.c tcmp_ui.c tcmpabs.c tcomparisons.c \
	tconst_catalan.c tconst_euler.c tconst_log2.c tconst_pi.c \
	tcopysign.c tcos.c tcosh.c tcot.c tcoth.c tcsc.c tcsch.c \
	td_div.c td_sub.c tdigamma.c tdim.c tdiv.c tdiv_d.c tdiv_ui.c \
	teint.c teq.c terf.c texceptions.c texp.c texp10.c texp2.c \
	texpm1.c tfactorial.c tfits.c tfma.c tfmod.c tfms.c tfprintf.c \
	tfrac.c tfrexp.c tgamma.c tget_d.c tget_d_2exp.c tget_f.c \
	tget_flt.c tget_ld_2exp.c tget_set_d64.c tget_sj.c tget_str.c \
	tget_z.c tgmpop.c tgrandom.c thyperbolic.c thypot.c tinits.c \
	tinp_str.c tinternals.c tisnan.c tisqrt.c tj0.c tj1.c tjn.c \
	tl2b.c tlgamma.c tli2.c tlngamma.c tlog.c tlog10.c tlog1p.c \
	tlog2.c tmin_prec.c tminmax.c tmodf.c tmul.c tmul_2exp.c \
	tmul_d.c tmul_ui.c tnext.c tout_str.c toutimpl.c tpow.c \
	tpow3.c tpow_all.c tpow_z.c tprintf.c trandom.c trec_sqrt.c \
	tremquo.c trint.c troot.c tround_prec.c tsec.c tsech.c tset.c \
	tset_d.c tset_exp.c tset_f.c tset_ld.c tset_q.c tset_si.c \
	tset_sj.c tset_str.c tset_z.c tset_z_exp.c tsgn.c tsi_op.c \
	tsin.c tsin_cos.c tsinh.c tsinh_cosh.c tsprintf.c tsqr.c \
	tsqrt.c tsqrt_ui.c tstckintc.c tstdint.c tstrtofr.c tsub.c \
	tsub1sp.c tsub_d.c tsub_ui.c tsubnormal.c tsum.c tswap.c \
	ttan.c ttanh.c ttrunc.c tui_div.c tui_pow.c tui_sub.c \
	turandom.c tvalist.c tversion.c ty0.c ty1.c tyn.c tzeta.c \
	tzeta_ui.c
DIST_SOURCES = $(libfrtests_la_SOURCES) mpf_compat.c mpfr_compat.c \
	reuse.c tabs.c tacos.c tacosh.c tadd.c tadd1sp.c tadd_d.c \
	tadd_ui.c tagm.c tai.c tasin.c tasinh.c tatan.c tatanh.c \
	taway.c tbuildopt.c tcan_round.c tcbrt.c tcheck.c tcmp.c \
	tcmp2.c tcmp_d.c tcmp_ld.c tcmp_ui.c tcmpabs.c tcomparisons.c \
	tconst_catalan.c tconst_euler.c tconst_log2.c tconst_pi.c \
	tcopysign.c tcos.c tcosh.c tcot.c tcoth.c tcsc.c tcsch.c \
	td_div.c td_sub.c tdigamma.c tdim.c tdiv.c tdiv_d.c tdiv_ui.c \
	teint.c teq.c terf.c texceptions.c texp.c texp10.c texp2.c \
	texpm1.c tfactorial.c tfits.c tfma.c tfmod.c tfms.c tfprintf.c \
	tfrac.c tfrexp.c tgamma.c tget_d.c tget_d_2exp.c tget_f.c \
	tget_flt.c tget_ld_2exp.c tget_set_d64.c tget_sj.c tget_str.c \
	tget_z.c tgmpop.c tgrandom.c thyperbolic.c thypot.c tinits.c \
	tinp_str.c tinternals.c tisnan.c tisqrt.c tj0.c tj1.c tjn.c \
	tl2b.c tlgamma.c tli2.c tlngamma.c tlog.c tlog10.c tlog1p.c \
	tlog2.c tmin_prec.c tminmax.c tmodf.c tmul.c tmul_2exp.c \
	tmul_d.c tmul_ui.c tnext.c tout_str.c toutimpl.c tpow.c \
	tpow3.c tpow_all.c tpow_z.c tprintf.c trandom.c trec_sqrt.c \
	tremquo.c trint.c troot.c tround_prec.c tsec.c tsech.c tset.c \
	tset_d.c tset_exp.c tset_f.c tset_ld.c tset_q.c tset_si.c \
	tset_sj.c tset_str.c tset_z.c tset_z_exp.c tsgn.c tsi_op.c \
	tsin.c tsin_cos.c tsinh.c tsinh_cosh.c tsprintf.c tsqr.c \
	tsqrt.c tsqrt_ui.c tstckintc.c tstdint.c tstrtofr.c tsub.c \
	tsub1sp.c tsub_d.c tsub_ui.c tsubnormal.c tsum.c tswap.c \
	ttan.c ttanh.c ttrunc.c tui_div.c tui_pow.c tui_sub.c \
	turandom.c tvalist.c tversion.c ty0.c ty1.c tyn.c tzeta.c \
	tzeta_ui.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATAFILES = @DATAFILES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBMPFR_LDFLAGS = @LIBMPFR_LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPFR_LDFLAGS = @MPFR_LDFLAGS@
MPFR_LIBM = @MPFR_LIBM@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TUNE_LIBS = @TUNE_LIBS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.6 gnu
AM_CPPFLAGS = -DSRCDIR='"$(srcdir)"'
EXTRA_DIST = tgeneric.c tgeneric_ui.c mpf_compat.h inp_str.data tmul.dat
LDADD = libfrtests.la $(MPFR_LIBM) $(top_builddir)/src/libmpfr.la
INCLUDES = -I$(top_srcdir)/src -I$(top_builddir)/src

# LOADLIBES (documented in the "GNU make" manual and equivalent to LDLIBS)
# enables to compile a program foo.c in the test directory by simply doing
# "make foo".
# Warning! This is not guaranteed to work, as libtool is not used. In
# particular, this may not work as expected under GNU/Linux if --with-gmp
# has been used, unless the directory is in your $LD_LIBRARY_PATH.
# Moreover, dependencies are not tracked. Thus you may want to run
# "make tversion" (for instance) just before, to make sure that every
# dependency has been rebuilt.
LOADLIBES = $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(top_builddir)/tests/.libs/libfrtests.a $(top_builddir)/src/.libs/libmpfr.a $(LIBS) $(MPFR_LIBM)
check_LTLIBRARIES = libfrtests.la
libfrtests_la_SOURCES = mpfr-test.h memory.c rnd_mode.c tests.c cmp_str.c random2.c
TESTS = $(check_PROGRAMS)
TESTS_ENVIRONMENT = MPFR_QUIET=1 $(VALGRIND)

# The -no-install option prevents libtool from generating wrapper scripts
# for the tests.
# This is useful to easily run the test scripts under valgrind or gdb.
# See discussion http://thread.gmane.org/gmane.comp.lib.gnulib.bugs/28033
# http://article.gmane.org/gmane.comp.lib.gnulib.bugs/28140 in particular.
#
# The -L$(top_builddir)/src/.libs option is necessary for some platforms,
# such as HP-UX, when --with-gmp or --with-gmp-lib is used and an old MPFR
# library is already installed in the corresponding lib directory: its
# purpose is to make sure that the local .libs comes first in the library
# search path (otherwise the tests are linked against the old MPFR library
# by the LINK command -- see the generated Makefile). See:
#   https://sympa.inria.fr/sympa/arc/mpfr/2011-10/msg00042.html
#   https://sympa.inria.fr/sympa/arc/mpfr/2011-10/msg00043.html
#   https://sympa.inria.fr/sympa/arc/mpfr/2011-10/msg00044.html
#   https://sympa.inria.fr/sympa/arc/mpfr/2011-10/msg00066.html
#   https://sympa.inria.fr/sympa/arc/mpfr/2011-10/msg00065.html
# and
#   http://debbugs.gnu.org/cgi/bugreport.cgi?bug=9728
#
AM_LDFLAGS = -no-install -L$(top_builddir)/src/.libs
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfrtests.la: $(libfrtests_la_OBJECTS) $(libfrtests_la_DEPENDENCIES) $(EXTRA_libfrtests_la_DEPENDENCIES) 
	$(LINK)  $(libfrtests_la_OBJECTS) $(libfrtests_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
mpf_compat$(EXEEXT): $(mpf_compat_OBJECTS) $(mpf_compat_DEPENDENCIES) $(EXTRA_mpf_compat_DEPENDENCIES) 
	@rm -f mpf_compat$(EXEEXT)
	$(LINK) $(mpf_compat_OBJECTS) $(mpf_compat_LDADD) $(LIBS)
mpfr_compat$(EXEEXT): $(mpfr_compat_OBJECTS) $(mpfr_compat_DEPENDENCIES) $(EXTRA_mpfr_compat_DEPENDENCIES) 
	@rm -f mpfr_compat$(EXEEXT)
	$(LINK) $(mpfr_compat_OBJECTS) $(mpfr_compat_LDADD) $(LIBS)
reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES) $(EXTRA_reuse_DEPENDENCIES) 
	@rm -f reuse$(EXEEXT)
	$(LINK) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)
tabs$(EXEEXT): $(tabs_OBJECTS) $(tabs_DEPENDENCIES) $(EXTRA_tabs_DEPENDENCIES) 
	@rm -f tabs$(EXEEXT)
	$(LINK) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)
tacos$(EXEEXT): $(tacos_OBJECTS) $(tacos_DEPENDENCIES) $(EXTRA_tacos_DEPENDENCIES) 
	@rm -f tacos$(EXEEXT)
	$(LINK) $(tacos_OBJECTS) $(tacos_LDADD) $(LIBS)
tacosh$(EXEEXT): $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES) $(EXTRA_tacosh_DEPENDENCIES) 
	@rm -f tacosh$(EXEEXT)
	$(LINK) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)
tadd$(EXEEXT): $(tadd_OBJECTS) $(tadd_DEPENDENCIES) $(EXTRA_tadd_DEPENDENCIES) 
	@rm -f tadd$(EXEEXT)
	$(LINK) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)
tadd1sp$(EXEEXT): $(tadd1sp_OBJECTS) $(tadd1sp_DEPENDENCIES) $(EXTRA_tadd1sp_DEPENDENCIES) 
	@rm -f tadd1sp$(EXEEXT)
	$(LINK) $(tadd1sp_OBJECTS) $(tadd1sp_LDADD) $(LIBS)
tadd_d$(EXEEXT): $(tadd_d_OBJECTS) $(tadd_d_DEPENDENCIES) $(EXTRA_tadd_d_DEPENDENCIES) 
	@rm -f tadd_d$(EXEEXT)
	$(LINK) $(tadd_d_OBJECTS) $(tadd_d_LDADD) $(LIBS)
tadd_ui$(EXEEXT): $(tadd_ui_OBJECTS) $(tadd_ui_DEPENDENCIES) $(EXTRA_tadd_ui_DEPENDENCIES) 
	@rm -f tadd_ui$(EXEEXT)
	$(LINK) $(tadd_ui_OBJECTS) $(tadd_ui_LDADD) $(LIBS)
tagm$(EXEEXT): $(tagm_OBJECTS) $(tagm_DEPENDENCIES) $(EXTRA_tagm_DEPENDENCIES) 
	@rm -f tagm$(EXEEXT)
	$(LINK) $(tagm_OBJECTS) $(tagm_LDADD) $(LIBS)
tai$(EXEEXT): $(tai_OBJECTS) $(tai_DEPENDENCIES) $(EXTRA_tai_DEPENDENCIES) 
	@rm -f tai$(EXEEXT)
	$(LINK) $(tai_OBJECTS) $(tai_LDADD) $(LIBS)
tasin$(EXEEXT): $(tasin_OBJECTS) $(tasin_DEPENDENCIES) $(EXTRA_tasin_DEPENDENCIES) 
	@rm -f tasin$(EXEEXT)
	$(LINK) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)
tasinh$(EXEEXT): $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES) $(EXTRA_tasinh_DEPENDENCIES) 
	@rm -f tasinh$(EXEEXT)
	$(LINK) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)
tatan$(EXEEXT): $(tatan_OBJECTS) $(tatan_DEPENDENCIES) $(EXTRA_tatan_DEPENDENCIES) 
	@rm -f tatan$(EXEEXT)
	$(LINK) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)
tatanh$(EXEEXT): $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES) $(EXTRA_tatanh_DEPENDENCIES) 
	@rm -f tatanh$(EXEEXT)
	$(LINK) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)
taway$(EXEEXT): $(taway_OBJECTS) $(taway_DEPENDENCIES) $(EXTRA_taway_DEPENDENCIES) 
	@rm -f taway$(EXEEXT)
	$(LINK) $(taway_OBJECTS) $(taway_LDADD) $(LIBS)
tbuildopt$(EXEEXT): $(tbuildopt_OBJECTS) $(tbuildopt_DEPENDENCIES) $(EXTRA_tbuildopt_DEPENDENCIES) 
	@rm -f tbuildopt$(EXEEXT)
	$(LINK) $(tbuildopt_OBJECTS) $(tbuildopt_LDADD) $(LIBS)
tcan_round$(EXEEXT): $(tcan_round_OBJECTS) $(tcan_round_DEPENDENCIES) $(EXTRA_tcan_round_DEPENDENCIES) 
	@rm -f tcan_round$(EXEEXT)
	$(LINK) $(tcan_round_OBJECTS) $(tcan_round_LDADD) $(LIBS)
tcbrt$(EXEEXT): $(tcbrt_OBJECTS) $(tcbrt_DEPENDENCIES) $(EXTRA_tcbrt_DEPENDENCIES) 
	@rm -f tcbrt$(EXEEXT)
	$(LINK) $(tcbrt_OBJECTS) $(tcbrt_LDADD) $(LIBS)
tcheck$(EXEEXT): $(tcheck_OBJECTS) $(tcheck_DEPENDENCIES) $(EXTRA_tcheck_DEPENDENCIES) 
	@rm -f tcheck$(EXEEXT)
	$(LINK) $(tcheck_OBJECTS) $(tcheck_LDADD) $(LIBS)
tcmp$(EXEEXT): $(tcmp_OBJECTS) $(tcmp_DEPENDENCIES) $(EXTRA_tcmp_DEPENDENCIES) 
	@rm -f tcmp$(EXEEXT)
	$(LINK) $(tcmp_OBJECTS) $(tcmp_LDADD) $(LIBS)
tcmp2$(EXEEXT): $(tcmp2_OBJECTS) $(tcmp2_DEPENDENCIES) $(EXTRA_tcmp2_DEPENDENCIES) 
	@rm -f tcmp2$(EXEEXT)
	$(LINK) $(tcmp2_OBJECTS) $(tcmp2_LDADD) $(LIBS)
tcmp_d$(EXEEXT): $(tcmp_d_OBJECTS) $(tcmp_d_DEPENDENCIES) $(EXTRA_tcmp_d_DEPENDENCIES) 
	@rm -f tcmp_d$(EXEEXT)
	$(LINK) $(tcmp_d_OBJECTS) $(tcmp_d_LDADD) $(LIBS)
tcmp_ld$(EXEEXT): $(tcmp_ld_OBJECTS) $(tcmp_ld_DEPENDENCIES) $(EXTRA_tcmp_ld_DEPENDENCIES) 
	@rm -f tcmp_ld$(EXEEXT)
	$(LINK) $(tcmp_ld_OBJECTS) $(tcmp_ld_LDADD) $(LIBS)
tcmp_ui$(EXEEXT): $(tcmp_ui_OBJECTS) $(tcmp_ui_DEPENDENCIES) $(EXTRA_tcmp_ui_DEPENDENCIES) 
	@rm -f tcmp_ui$(EXEEXT)
	$(LINK) $(tcmp_ui_OBJECTS) $(tcmp_ui_LDADD) $(LIBS)
tcmpabs$(EXEEXT): $(tcmpabs_OBJECTS) $(tcmpabs_DEPENDENCIES) $(EXTRA_tcmpabs_DEPENDENCIES) 
	@rm -f tcmpabs$(EXEEXT)
	$(LINK) $(tcmpabs_OBJECTS) $(tcmpabs_LDADD) $(LIBS)
tcomparisons$(EXEEXT): $(tcomparisons_OBJECTS) $(tcomparisons_DEPENDENCIES) $(EXTRA_tcomparisons_DEPENDENCIES) 
	@rm -f tcomparisons$(EXEEXT)
	$(LINK) $(tcomparisons_OBJECTS) $(tcomparisons_LDADD) $(LIBS)
tconst_catalan$(EXEEXT): $(tconst_catalan_OBJECTS) $(tconst_catalan_DEPENDENCIES) $(EXTRA_tconst_catalan_DEPENDENCIES) 
	@rm -f tconst_catalan$(EXEEXT)
	$(LINK) $(tconst_catalan_OBJECTS) $(tconst_catalan_LDADD) $(LIBS)
tconst_euler$(EXEEXT): $(tconst_euler_OBJECTS) $(tconst_euler_DEPENDENCIES) $(EXTRA_tconst_euler_DEPENDENCIES) 
	@rm -f tconst_euler$(EXEEXT)
	$(LINK) $(tconst_euler_OBJECTS) $(tconst_euler_LDADD) $(LIBS)
tconst_log2$(EXEEXT): $(tconst_log2_OBJECTS) $(tconst_log2_DEPENDENCIES) $(EXTRA_tconst_log2_DEPENDENCIES) 
	@rm -f tconst_log2$(EXEEXT)
	$(LINK) $(tconst_log2_OBJECTS) $(tconst_log2_LDADD) $(LIBS)
tconst_pi$(EXEEXT): $(tconst_pi_OBJECTS) $(tconst_pi_DEPENDENCIES) $(EXTRA_tconst_pi_DEPENDENCIES) 
	@rm -f tconst_pi$(EXEEXT)
	$(LINK) $(tconst_pi_OBJECTS) $(tconst_pi_LDADD) $(LIBS)
tcopysign$(EXEEXT): $(tcopysign_OBJECTS) $(tcopysign_DEPENDENCIES) $(EXTRA_tcopysign_DEPENDENCIES) 
	@rm -f tcopysign$(EXEEXT)
	$(LINK) $(tcopysign_OBJECTS) $(tcopysign_LDADD) $(LIBS)
tcos$(EXEEXT): $(tcos_OBJECTS) $(tcos_DEPENDENCIES) $(EXTRA_tcos_DEPENDENCIES) 
	@rm -f tcos$(EXEEXT)
	$(LINK) $(tcos_OBJECTS) $(tcos_LDADD) $(LIBS)
tcosh$(EXEEXT): $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES) $(EXTRA_tcosh_DEPENDENCIES) 
	@rm -f tcosh$(EXEEXT)
	$(LINK) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)
tcot$(EXEEXT): $(tcot_OBJECTS) $(tcot_DEPENDENCIES) $(EXTRA_tcot_DEPENDENCIES) 
	@rm -f tcot$(EXEEXT)
	$(LINK) $(tcot_OBJECTS) $(tcot_LDADD) $(LIBS)
tcoth$(EXEEXT): $(tcoth_OBJECTS) $(tcoth_DEPENDENCIES) $(EXTRA_tcoth_DEPENDENCIES) 
	@rm -f tcoth$(EXEEXT)
	$(LINK) $(tcoth_OBJECTS) $(tcoth_LDADD) $(LIBS)
tcsc$(EXEEXT): $(tcsc_OBJECTS) $(tcsc_DEPENDENCIES) $(EXTRA_tcsc_DEPENDENCIES) 
	@rm -f tcsc$(EXEEXT)
	$(LINK) $(tcsc_OBJECTS) $(tcsc_LDADD) $(LIBS)
tcsch$(EXEEXT): $(tcsch_OBJECTS) $(tcsch_DEPENDENCIES) $(EXTRA_tcsch_DEPENDENCIES) 
	@rm -f tcsch$(EXEEXT)
	$(LINK) $(tcsch_OBJECTS) $(tcsch_LDADD) $(LIBS)
td_div$(EXEEXT): $(td_div_OBJECTS) $(td_div_DEPENDENCIES) $(EXTRA_td_div_DEPENDENCIES) 
	@rm -f td_div$(EXEEXT)
	$(LINK) $(td_div_OBJECTS) $(td_div_LDADD) $(LIBS)
td_sub$(EXEEXT): $(td_sub_OBJECTS) $(td_sub_DEPENDENCIES) $(EXTRA_td_sub_DEPENDENCIES) 
	@rm -f td_sub$(EXEEXT)
	$(LINK) $(td_sub_OBJECTS) $(td_sub_LDADD) $(LIBS)
tdigamma$(EXEEXT): $(tdigamma_OBJECTS) $(tdigamma_DEPENDENCIES) $(EXTRA_tdigamma_DEPENDENCIES) 
	@rm -f tdigamma$(EXEEXT)
	$(LINK) $(tdigamma_OBJECTS) $(tdigamma_LDADD) $(LIBS)
tdim$(EXEEXT): $(tdim_OBJECTS) $(tdim_DEPENDENCIES) $(EXTRA_tdim_DEPENDENCIES) 
	@rm -f tdim$(EXEEXT)
	$(LINK) $(tdim_OBJECTS) $(tdim_LDADD) $(LIBS)
tdiv$(EXEEXT): $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES) $(EXTRA_tdiv_DEPENDENCIES) 
	@rm -f tdiv$(EXEEXT)
	$(LINK) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)
tdiv_d$(EXEEXT): $(tdiv_d_OBJECTS) $(tdiv_d_DEPENDENCIES) $(EXTRA_tdiv_d_DEPENDENCIES) 
	@rm -f tdiv_d$(EXEEXT)
	$(LINK) $(tdiv_d_OBJECTS) $(tdiv_d_LDADD) $(LIBS)
tdiv_ui$(EXEEXT): $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES) $(EXTRA_tdiv_ui_DEPENDENCIES) 
	@rm -f tdiv_ui$(EXEEXT)
	$(LINK) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)
teint$(EXEEXT): $(teint_OBJECTS) $(teint_DEPENDENCIES) $(EXTRA_teint_DEPENDENCIES) 
	@rm -f teint$(EXEEXT)
	$(LINK) $(teint_OBJECTS) $(teint_LDADD) $(LIBS)
teq$(EXEEXT): $(teq_OBJECTS) $(teq_DEPENDENCIES) $(EXTRA_teq_DEPENDENCIES) 
	@rm -f teq$(EXEEXT)
	$(LINK) $(teq_OBJECTS) $(teq_LDADD) $(LIBS)
terf$(EXEEXT): $(terf_OBJECTS) $(terf_DEPENDENCIES) $(EXTRA_terf_DEPENDENCIES) 
	@rm -f terf$(EXEEXT)
	$(LINK) $(terf_OBJECTS) $(terf_LDADD) $(LIBS)
texceptions$(EXEEXT): $(texceptions_OBJECTS) $(texceptions_DEPENDENCIES) $(EXTRA_texceptions_DEPENDENCIES) 
	@rm -f texceptions$(EXEEXT)
	$(LINK) $(texceptions_OBJECTS) $(texceptions_LDADD) $(LIBS)
texp$(EXEEXT): $(texp_OBJECTS) $(texp_DEPENDENCIES) $(EXTRA_texp_DEPENDENCIES) 
	@rm -f texp$(EXEEXT)
	$(LINK) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)
texp10$(EXEEXT): $(texp10_OBJECTS) $(texp10_DEPENDENCIES) $(EXTRA_texp10_DEPENDENCIES) 
	@rm -f texp10$(EXEEXT)
	$(LINK) $(texp10_OBJECTS) $(texp10_LDADD) $(LIBS)
texp2$(EXEEXT): $(texp2_OBJECTS) $(texp2_DEPENDENCIES) $(EXTRA_texp2_DEPENDENCIES) 
	@rm -f texp2$(EXEEXT)
	$(LINK) $(texp2_OBJECTS) $(texp2_LDADD) $(LIBS)
texpm1$(EXEEXT): $(texpm1_OBJECTS) $(texpm1_DEPENDENCIES) $(EXTRA_texpm1_DEPENDENCIES) 
	@rm -f texpm1$(EXEEXT)
	$(LINK) $(texpm1_OBJECTS) $(texpm1_LDADD) $(LIBS)
tfactorial$(EXEEXT): $(tfactorial_OBJECTS) $(tfactorial_DEPENDENCIES) $(EXTRA_tfactorial_DEPENDENCIES) 
	@rm -f tfactorial$(EXEEXT)
	$(LINK) $(tfactorial_OBJECTS) $(tfactorial_LDADD) $(LIBS)
tfits$(EXEEXT): $(tfits_OBJECTS) $(tfits_DEPENDENCIES) $(EXTRA_tfits_DEPENDENCIES) 
	@rm -f tfits$(EXEEXT)
	$(LINK) $(tfits_OBJECTS) $(tfits_LDADD) $(LIBS)
tfma$(EXEEXT): $(tfma_OBJECTS) $(tfma_DEPENDENCIES) $(EXTRA_tfma_DEPENDENCIES) 
	@rm -f tfma$(EXEEXT)
	$(LINK) $(tfma_OBJECTS) $(tfma_LDADD) $(LIBS)
tfmod$(EXEEXT): $(tfmod_OBJECTS) $(tfmod_DEPENDENCIES) $(EXTRA_tfmod_DEPENDENCIES) 
	@rm -f tfmod$(EXEEXT)
	$(LINK) $(tfmod_OBJECTS) $(tfmod_LDADD) $(LIBS)
tfms$(EXEEXT): $(tfms_OBJECTS) $(tfms_DEPENDENCIES) $(EXTRA_tfms_DEPENDENCIES) 
	@rm -f tfms$(EXEEXT)
	$(LINK) $(tfms_OBJECTS) $(tfms_LDADD) $(LIBS)
tfprintf$(EXEEXT): $(tfprintf_OBJECTS) $(tfprintf_DEPENDENCIES) $(EXTRA_tfprintf_DEPENDENCIES) 
	@rm -f tfprintf$(EXEEXT)
	$(LINK) $(tfprintf_OBJECTS) $(tfprintf_LDADD) $(LIBS)
tfrac$(EXEEXT): $(tfrac_OBJECTS) $(tfrac_DEPENDENCIES) $(EXTRA_tfrac_DEPENDENCIES) 
	@rm -f tfrac$(EXEEXT)
	$(LINK) $(tfrac_OBJECTS) $(tfrac_LDADD) $(LIBS)
tfrexp$(EXEEXT): $(tfrexp_OBJECTS) $(tfrexp_DEPENDENCIES) $(EXTRA_tfrexp_DEPENDENCIES) 
	@rm -f tfrexp$(EXEEXT)
	$(LINK) $(tfrexp_OBJECTS) $(tfrexp_LDADD) $(LIBS)
tgamma$(EXEEXT): $(tgamma_OBJECTS) $(tgamma_DEPENDENCIES) $(EXTRA_tgamma_DEPENDENCIES) 
	@rm -f tgamma$(EXEEXT)
	$(LINK) $(tgamma_OBJECTS) $(tgamma_LDADD) $(LIBS)
tget_d$(EXEEXT): $(tget_d_OBJECTS) $(tget_d_DEPENDENCIES) $(EXTRA_tget_d_DEPENDENCIES) 
	@rm -f tget_d$(EXEEXT)
	$(LINK) $(tget_d_OBJECTS) $(tget_d_LDADD) $(LIBS)
tget_d_2exp$(EXEEXT): $(tget_d_2exp_OBJECTS) $(tget_d_2exp_DEPENDENCIES) $(EXTRA_tget_d_2exp_DEPENDENCIES) 
	@rm -f tget_d_2exp$(EXEEXT)
	$(LINK) $(tget_d_2exp_OBJECTS) $(tget_d_2exp_LDADD) $(LIBS)
tget_f$(EXEEXT): $(tget_f_OBJECTS) $(tget_f_DEPENDENCIES) $(EXTRA_tget_f_DEPENDENCIES) 
	@rm -f tget_f$(EXEEXT)
	$(LINK) $(tget_f_OBJECTS) $(tget_f_LDADD) $(LIBS)
tget_flt$(EXEEXT): $(tget_flt_OBJECTS) $(tget_flt_DEPENDENCIES) $(EXTRA_tget_flt_DEPENDENCIES) 
	@rm -f tget_flt$(EXEEXT)
	$(LINK) $(tget_flt_OBJECTS) $(tget_flt_LDADD) $(LIBS)
tget_ld_2exp$(EXEEXT): $(tget_ld_2exp_OBJECTS) $(tget_ld_2exp_DEPENDENCIES) $(EXTRA_tget_ld_2exp_DEPENDENCIES) 
	@rm -f tget_ld_2exp$(EXEEXT)
	$(LINK) $(tget_ld_2exp_OBJECTS) $(tget_ld_2exp_LDADD) $(LIBS)
tget_set_d64$(EXEEXT): $(tget_set_d64_OBJECTS) $(tget_set_d64_DEPENDENCIES) $(EXTRA_tget_set_d64_DEPENDENCIES) 
	@rm -f tget_set_d64$(EXEEXT)
	$(LINK) $(tget_set_d64_OBJECTS) $(tget_set_d64_LDADD) $(LIBS)
tget_sj$(EXEEXT): $(tget_sj_OBJECTS) $(tget_sj_DEPENDENCIES) $(EXTRA_tget_sj_DEPENDENCIES) 
	@rm -f tget_sj$(EXEEXT)
	$(LINK) $(tget_sj_OBJECTS) $(tget_sj_LDADD) $(LIBS)
tget_str$(EXEEXT): $(tget_str_OBJECTS) $(tget_str_DEPENDENCIES) $(EXTRA_tget_str_DEPENDENCIES) 
	@rm -f tget_str$(EXEEXT)
	$(LINK) $(tget_str_OBJECTS) $(tget_str_LDADD) $(LIBS)
tget_z$(EXEEXT): $(tget_z_OBJECTS) $(tget_z_DEPENDENCIES) $(EXTRA_tget_z_DEPENDENCIES) 
	@rm -f tget_z$(EXEEXT)
	$(LINK) $(tget_z_OBJECTS) $(tget_z_LDADD) $(LIBS)
tgmpop$(EXEEXT): $(tgmpop_OBJECTS) $(tgmpop_DEPENDENCIES) $(EXTRA_tgmpop_DEPENDENCIES) 
	@rm -f tgmpop$(EXEEXT)
	$(LINK) $(tgmpop_OBJECTS) $(tgmpop_LDADD) $(LIBS)
tgrandom$(EXEEXT): $(tgrandom_OBJECTS) $(tgrandom_DEPENDENCIES) $(EXTRA_tgrandom_DEPENDENCIES) 
	@rm -f tgrandom$(EXEEXT)
	$(LINK) $(tgrandom_OBJECTS) $(tgrandom_LDADD) $(LIBS)
thyperbolic$(EXEEXT): $(thyperbolic_OBJECTS) $(thyperbolic_DEPENDENCIES) $(EXTRA_thyperbolic_DEPENDENCIES) 
	@rm -f thyperbolic$(EXEEXT)
	$(LINK) $(thyperbolic_OBJECTS) $(thyperbolic_LDADD) $(LIBS)
thypot$(EXEEXT): $(thypot_OBJECTS) $(thypot_DEPENDENCIES) $(EXTRA_thypot_DEPENDENCIES) 
	@rm -f thypot$(EXEEXT)
	$(LINK) $(thypot_OBJECTS) $(thypot_LDADD) $(LIBS)
tinits$(EXEEXT): $(tinits_OBJECTS) $(tinits_DEPENDENCIES) $(EXTRA_tinits_DEPENDENCIES) 
	@rm -f tinits$(EXEEXT)
	$(LINK) $(tinits_OBJECTS) $(tinits_LDADD) $(LIBS)
tinp_str$(EXEEXT): $(tinp_str_OBJECTS) $(tinp_str_DEPENDENCIES) $(EXTRA_tinp_str_DEPENDENCIES) 
	@rm -f tinp_str$(EXEEXT)
	$(LINK) $(tinp_str_OBJECTS) $(tinp_str_LDADD) $(LIBS)
tinternals$(EXEEXT): $(tinternals_OBJECTS) $(tinternals_DEPENDENCIES) $(EXTRA_tinternals_DEPENDENCIES) 
	@rm -f tinternals$(EXEEXT)
	$(LINK) $(tinternals_OBJECTS) $(tinternals_LDADD) $(LIBS)
tisnan$(EXEEXT): $(tisnan_OBJECTS) $(tisnan_DEPENDENCIES) $(EXTRA_tisnan_DEPENDENCIES) 
	@rm -f tisnan$(EXEEXT)
	$(LINK) $(tisnan_OBJECTS) $(tisnan_LDADD) $(LIBS)
tisqrt$(EXEEXT): $(tisqrt_OBJECTS) $(tisqrt_DEPENDENCIES) $(EXTRA_tisqrt_DEPENDENCIES) 
	@rm -f tisqrt$(EXEEXT)
	$(LINK) $(tisqrt_OBJECTS) $(tisqrt_LDADD) $(LIBS)
tj0$(EXEEXT): $(tj0_OBJECTS) $(tj0_DEPENDENCIES) $(EXTRA_tj0_DEPENDENCIES) 
	@rm -f tj0$(EXEEXT)
	$(LINK) $(tj0_OBJECTS) $(tj0_LDADD) $(LIBS)
tj1$(EXEEXT): $(tj1_OBJECTS) $(tj1_DEPENDENCIES) $(EXTRA_tj1_DEPENDENCIES) 
	@rm -f tj1$(EXEEXT)
	$(LINK) $(tj1_OBJECTS) $(tj1_LDADD) $(LIBS)
tjn$(EXEEXT): $(tjn_OBJECTS) $(tjn_DEPENDENCIES) $(EXTRA_tjn_DEPENDENCIES) 
	@rm -f tjn$(EXEEXT)
	$(LINK) $(tjn_OBJECTS) $(tjn_LDADD) $(LIBS)
tl2b$(EXEEXT): $(tl2b_OBJECTS) $(tl2b_DEPENDENCIES) $(EXTRA_tl2b_DEPENDENCIES) 
	@rm -f tl2b$(EXEEXT)
	$(LINK) $(tl2b_OBJECTS) $(tl2b_LDADD) $(LIBS)
tlgamma$(EXEEXT): $(tlgamma_OBJECTS) $(tlgamma_DEPENDENCIES) $(EXTRA_tlgamma_DEPENDENCIES) 
	@rm -f tlgamma$(EXEEXT)
	$(LINK) $(tlgamma_OBJECTS) $(tlgamma_LDADD) $(LIBS)
tli2$(EXEEXT): $(tli2_OBJECTS) $(tli2_DEPENDENCIES) $(EXTRA_tli2_DEPENDENCIES) 
	@rm -f tli2$(EXEEXT)
	$(LINK) $(tli2_OBJECTS) $(tli2_LDADD) $(LIBS)
tlngamma$(EXEEXT): $(tlngamma_OBJECTS) $(tlngamma_DEPENDENCIES) $(EXTRA_tlngamma_DEPENDENCIES) 
	@rm -f tlngamma$(EXEEXT)
	$(LINK) $(tlngamma_OBJECTS) $(tlngamma_LDADD) $(LIBS)
tlog$(EXEEXT): $(tlog_OBJECTS) $(tlog_DEPENDENCIES) $(EXTRA_tlog_DEPENDENCIES) 
	@rm -f tlog$(EXEEXT)
	$(LINK) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)
tlog10$(EXEEXT): $(tlog10_OBJECTS) $(tlog10_DEPENDENCIES) $(EXTRA_tlog10_DEPENDENCIES) 
	@rm -f tlog10$(EXEEXT)
	$(LINK) $(tlog10_OBJECTS) $(tlog10_LDADD) $(LIBS)
tlog1p$(EXEEXT): $(tlog1p_OBJECTS) $(tlog1p_DEPENDENCIES) $(EXTRA_tlog1p_DEPENDENCIES) 
	@rm -f tlog1p$(EXEEXT)
	$(LINK) $(tlog1p_OBJECTS) $(tlog1p_LDADD) $(LIBS)
tlog2$(EXEEXT): $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES) $(EXTRA_tlog2_DEPENDENCIES) 
	@rm -f tlog2$(EXEEXT)
	$(LINK) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)
tmin_prec$(EXEEXT): $(tmin_prec_OBJECTS) $(tmin_prec_DEPENDENCIES) $(EXTRA_tmin_prec_DEPENDENCIES) 
	@rm -f tmin_prec$(EXEEXT)
	$(LINK) $(tmin_prec_OBJECTS) $(tmin_prec_LDADD) $(LIBS)
tminmax$(EXEEXT): $(tminmax_OBJECTS) $(tminmax_DEPENDENCIES) $(EXTRA_tminmax_DEPENDENCIES) 
	@rm -f tminmax$(EXEEXT)
	$(LINK) $(tminmax_OBJECTS) $(tminmax_LDADD) $(LIBS)
tmodf$(EXEEXT): $(tmodf_OBJECTS) $(tmodf_DEPENDENCIES) $(EXTRA_tmodf_DEPENDENCIES) 
	@rm -f tmodf$(EXEEXT)
	$(LINK) $(tmodf_OBJECTS) $(tmodf_LDADD) $(LIBS)
tmul$(EXEEXT): $(tmul_OBJECTS) $(tmul_DEPENDENCIES) $(EXTRA_tmul_DEPENDENCIES) 
	@rm -f tmul$(EXEEXT)
	$(LINK) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)
tmul_2exp$(EXEEXT): $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES) $(EXTRA_tmul_2exp_DEPENDENCIES) 
	@rm -f tmul_2exp$(EXEEXT)
	$(LINK) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)
tmul_d$(EXEEXT): $(tmul_d_OBJECTS) $(tmul_d_DEPENDENCIES) $(EXTRA_tmul_d_DEPENDENCIES) 
	@rm -f tmul_d$(EXEEXT)
	$(LINK) $(tmul_d_OBJECTS) $(tmul_d_LDADD) $(LIBS)
tmul_ui$(EXEEXT): $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES) $(EXTRA_tmul_ui_DEPENDENCIES) 
	@rm -f tmul_ui$(EXEEXT)
	$(LINK) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)
tnext$(EXEEXT): $(tnext_OBJECTS) $(tnext_DEPENDENCIES) $(EXTRA_tnext_DEPENDENCIES) 
	@rm -f tnext$(EXEEXT)
	$(LINK) $(tnext_OBJECTS) $(tnext_LDADD) $(LIBS)
tout_str$(EXEEXT): $(tout_str_OBJECTS) $(tout_str_DEPENDENCIES) $(EXTRA_tout_str_DEPENDENCIES) 
	@rm -f tout_str$(EXEEXT)
	$(LINK) $(tout_str_OBJECTS) $(tout_str_LDADD) $(LIBS)
toutimpl$(EXEEXT): $(toutimpl_OBJECTS) $(toutimpl_DEPENDENCIES) $(EXTRA_toutimpl_DEPENDENCIES) 
	@rm -f toutimpl$(EXEEXT)
	$(LINK) $(toutimpl_OBJECTS) $(toutimpl_LDADD) $(LIBS)
tpow$(EXEEXT): $(tpow_OBJECTS) $(tpow_DEPENDENCIES) $(EXTRA_tpow_DEPENDENCIES) 
	@rm -f tpow$(EXEEXT)
	$(LINK) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)
tpow3$(EXEEXT): $(tpow3_OBJECTS) $(tpow3_DEPENDENCIES) $(EXTRA_tpow3_DEPENDENCIES) 
	@rm -f tpow3$(EXEEXT)
	$(LINK) $(tpow3_OBJECTS) $(tpow3_LDADD) $(LIBS)
tpow_all$(EXEEXT): $(tpow_all_OBJECTS) $(tpow_all_DEPENDENCIES) $(EXTRA_tpow_all_DEPENDENCIES) 
	@rm -f tpow_all$(EXEEXT)
	$(LINK) $(tpow_all_OBJECTS) $(tpow_all_LDADD) $(LIBS)
tpow_z$(EXEEXT): $(tpow_z_OBJECTS) $(tpow_z_DEPENDENCIES) $(EXTRA_tpow_z_DEPENDENCIES) 
	@rm -f tpow_z$(EXEEXT)
	$(LINK) $(tpow_z_OBJECTS) $(tpow_z_LDADD) $(LIBS)
tprintf$(EXEEXT): $(tprintf_OBJECTS) $(tprintf_DEPENDENCIES) $(EXTRA_tprintf_DEPENDENCIES) 
	@rm -f tprintf$(EXEEXT)
	$(LINK) $(tprintf_OBJECTS) $(tprintf_LDADD) $(LIBS)
trandom$(EXEEXT): $(trandom_OBJECTS) $(trandom_DEPENDENCIES) $(EXTRA_trandom_DEPENDENCIES) 
	@rm -f trandom$(EXEEXT)
	$(LINK) $(trandom_OBJECTS) $(trandom_LDADD) $(LIBS)
trec_sqrt$(EXEEXT): $(trec_sqrt_OBJECTS) $(trec_sqrt_DEPENDENCIES) $(EXTRA_trec_sqrt_DEPENDENCIES) 
	@rm -f trec_sqrt$(EXEEXT)
	$(LINK) $(trec_sqrt_OBJECTS) $(trec_sqrt_LDADD) $(LIBS)
tremquo$(EXEEXT): $(tremquo_OBJECTS) $(tremquo_DEPENDENCIES) $(EXTRA_tremquo_DEPENDENCIES) 
	@rm -f tremquo$(EXEEXT)
	$(LINK) $(tremquo_OBJECTS) $(tremquo_LDADD) $(LIBS)
trint$(EXEEXT): $(trint_OBJECTS) $(trint_DEPENDENCIES) $(EXTRA_trint_DEPENDENCIES) 
	@rm -f trint$(EXEEXT)
	$(LINK) $(trint_OBJECTS) $(trint_LDADD) $(LIBS)
troot$(EXEEXT): $(troot_OBJECTS) $(troot_DEPENDENCIES) $(EXTRA_troot_DEPENDENCIES) 
	@rm -f troot$(EXEEXT)
	$(LINK) $(troot_OBJECTS) $(troot_LDADD) $(LIBS)
tround_prec$(EXEEXT): $(tround_prec_OBJECTS) $(tround_prec_DEPENDENCIES) $(EXTRA_tround_prec_DEPENDENCIES) 
	@rm -f tround_prec$(EXEEXT)
	$(LINK) $(tround_prec_OBJECTS) $(tround_prec_LDADD) $(LIBS)
tsec$(EXEEXT): $(tsec_OBJECTS) $(tsec_DEPENDENCIES) $(EXTRA_tsec_DEPENDENCIES) 
	@rm -f tsec$(EXEEXT)
	$(LINK) $(tsec_OBJECTS) $(tsec_LDADD) $(LIBS)
tsech$(EXEEXT): $(tsech_OBJECTS) $(tsech_DEPENDENCIES) $(EXTRA_tsech_DEPENDENCIES) 
	@rm -f tsech$(EXEEXT)
	$(LINK) $(tsech_OBJECTS) $(tsech_LDADD) $(LIBS)
tset$(EXEEXT): $(tset_OBJECTS) $(tset_DEPENDENCIES) $(EXTRA_tset_DEPENDENCIES) 
	@rm -f tset$(EXEEXT)
	$(LINK) $(tset_OBJECTS) $(tset_LDADD) $(LIBS)
tset_d$(EXEEXT): $(tset_d_OBJECTS) $(tset_d_DEPENDENCIES) $(EXTRA_tset_d_DEPENDENCIES) 
	@rm -f tset_d$(EXEEXT)
	$(LINK) $(tset_d_OBJECTS) $(tset_d_LDADD) $(LIBS)
tset_exp$(EXEEXT): $(tset_exp_OBJECTS) $(tset_exp_DEPENDENCIES) $(EXTRA_tset_exp_DEPENDENCIES) 
	@rm -f tset_exp$(EXEEXT)
	$(LINK) $(tset_exp_OBJECTS) $(tset_exp_LDADD) $(LIBS)
tset_f$(EXEEXT): $(tset_f_OBJECTS) $(tset_f_DEPENDENCIES) $(EXTRA_tset_f_DEPENDENCIES) 
	@rm -f tset_f$(EXEEXT)
	$(LINK) $(tset_f_OBJECTS) $(tset_f_LDADD) $(LIBS)
tset_ld$(EXEEXT): $(tset_ld_OBJECTS) $(tset_ld_DEPENDENCIES) $(EXTRA_tset_ld_DEPENDENCIES) 
	@rm -f tset_ld$(EXEEXT)
	$(LINK) $(tset_ld_OBJECTS) $(tset_ld_LDADD) $(LIBS)
tset_q$(EXEEXT): $(tset_q_OBJECTS) $(tset_q_DEPENDENCIES) $(EXTRA_tset_q_DEPENDENCIES) 
	@rm -f tset_q$(EXEEXT)
	$(LINK) $(tset_q_OBJECTS) $(tset_q_LDADD) $(LIBS)
tset_si$(EXEEXT): $(tset_si_OBJECTS) $(tset_si_DEPENDENCIES) $(EXTRA_tset_si_DEPENDENCIES) 
	@rm -f tset_si$(EXEEXT)
	$(LINK) $(tset_si_OBJECTS) $(tset_si_LDADD) $(LIBS)
tset_sj$(EXEEXT): $(tset_sj_OBJECTS) $(tset_sj_DEPENDENCIES) $(EXTRA_tset_sj_DEPENDENCIES) 
	@rm -f tset_sj$(EXEEXT)
	$(LINK) $(tset_sj_OBJECTS) $(tset_sj_LDADD) $(LIBS)
tset_str$(EXEEXT): $(tset_str_OBJECTS) $(tset_str_DEPENDENCIES) $(EXTRA_tset_str_DEPENDENCIES) 
	@rm -f tset_str$(EXEEXT)
	$(LINK) $(tset_str_OBJECTS) $(tset_str_LDADD) $(LIBS)
tset_z$(EXEEXT): $(tset_z_OBJECTS) $(tset_z_DEPENDENCIES) $(EXTRA_tset_z_DEPENDENCIES) 
	@rm -f tset_z$(EXEEXT)
	$(LINK) $(tset_z_OBJECTS) $(tset_z_LDADD) $(LIBS)
tset_z_exp$(EXEEXT): $(tset_z_exp_OBJECTS) $(tset_z_exp_DEPENDENCIES) $(EXTRA_tset_z_exp_DEPENDENCIES) 
	@rm -f tset_z_exp$(EXEEXT)
	$(LINK) $(tset_z_exp_OBJECTS) $(tset_z_exp_LDADD) $(LIBS)
tsgn$(EXEEXT): $(tsgn_OBJECTS) $(tsgn_DEPENDENCIES) $(EXTRA_tsgn_DEPENDENCIES) 
	@rm -f tsgn$(EXEEXT)
	$(LINK) $(tsgn_OBJECTS) $(tsgn_LDADD) $(LIBS)
tsi_op$(EXEEXT): $(tsi_op_OBJECTS) $(tsi_op_DEPENDENCIES) $(EXTRA_tsi_op_DEPENDENCIES) 
	@rm -f tsi_op$(EXEEXT)
	$(LINK) $(tsi_op_OBJECTS) $(tsi_op_LDADD) $(LIBS)
tsin$(EXEEXT): $(tsin_OBJECTS) $(tsin_DEPENDENCIES) $(EXTRA_tsin_DEPENDENCIES) 
	@rm -f tsin$(EXEEXT)
	$(LINK) $(tsin_OBJECTS) $(tsin_LDADD) $(LIBS)
tsin_cos$(EXEEXT): $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES) $(EXTRA_tsin_cos_DEPENDENCIES) 
	@rm -f tsin_cos$(EXEEXT)
	$(LINK) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)
tsinh$(EXEEXT): $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES) $(EXTRA_tsinh_DEPENDENCIES) 
	@rm -f tsinh$(EXEEXT)
	$(LINK) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)
tsinh_cosh$(EXEEXT): $(tsinh_cosh_OBJECTS) $(tsinh_cosh_DEPENDENCIES) $(EXTRA_tsinh_cosh_DEPENDENCIES) 
	@rm -f tsinh_cosh$(EXEEXT)
	$(LINK) $(tsinh_cosh_OBJECTS) $(tsinh_cosh_LDADD) $(LIBS)
tsprintf$(EXEEXT): $(tsprintf_OBJECTS) $(tsprintf_DEPENDENCIES) $(EXTRA_tsprintf_DEPENDENCIES) 
	@rm -f tsprintf$(EXEEXT)
	$(LINK) $(tsprintf_OBJECTS) $(tsprintf_LDADD) $(LIBS)
tsqr$(EXEEXT): $(tsqr_OBJECTS) $(tsqr_DEPENDENCIES) $(EXTRA_tsqr_DEPENDENCIES) 
	@rm -f tsqr$(EXEEXT)
	$(LINK) $(tsqr_OBJECTS) $(tsqr_LDADD) $(LIBS)
tsqrt$(EXEEXT): $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES) $(EXTRA_tsqrt_DEPENDENCIES) 
	@rm -f tsqrt$(EXEEXT)
	$(LINK) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)
tsqrt_ui$(EXEEXT): $(tsqrt_ui_OBJECTS) $(tsqrt_ui_DEPENDENCIES) $(EXTRA_tsqrt_ui_DEPENDENCIES) 
	@rm -f tsqrt_ui$(EXEEXT)
	$(LINK) $(tsqrt_ui_OBJECTS) $(tsqrt_ui_LDADD) $(LIBS)
tstckintc$(EXEEXT): $(tstckintc_OBJECTS) $(tstckintc_DEPENDENCIES) $(EXTRA_tstckintc_DEPENDENCIES) 
	@rm -f tstckintc$(EXEEXT)
	$(LINK) $(tstckintc_OBJECTS) $(tstckintc_LDADD) $(LIBS)
tstdint$(EXEEXT): $(tstdint_OBJECTS) $(tstdint_DEPENDENCIES) $(EXTRA_tstdint_DEPENDENCIES) 
	@rm -f tstdint$(EXEEXT)
	$(LINK) $(tstdint_OBJECTS) $(tstdint_LDADD) $(LIBS)
tstrtofr$(EXEEXT): $(tstrtofr_OBJECTS) $(tstrtofr_DEPENDENCIES) $(EXTRA_tstrtofr_DEPENDENCIES) 
	@rm -f tstrtofr$(EXEEXT)
	$(LINK) $(tstrtofr_OBJECTS) $(tstrtofr_LDADD) $(LIBS)
tsub$(EXEEXT): $(tsub_OBJECTS) $(tsub_DEPENDENCIES) $(EXTRA_tsub_DEPENDENCIES) 
	@rm -f tsub$(EXEEXT)
	$(LINK) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)
tsub1sp$(EXEEXT): $(tsub1sp_OBJECTS) $(tsub1sp_DEPENDENCIES) $(EXTRA_tsub1sp_DEPENDENCIES) 
	@rm -f tsub1sp$(EXEEXT)
	$(LINK) $(tsub1sp_OBJECTS) $(tsub1sp_LDADD) $(LIBS)
tsub_d$(EXEEXT): $(tsub_d_OBJECTS) $(tsub_d_DEPENDENCIES) $(EXTRA_tsub_d_DEPENDENCIES) 
	@rm -f tsub_d$(EXEEXT)
	$(LINK) $(tsub_d_OBJECTS) $(tsub_d_LDADD) $(LIBS)
tsub_ui$(EXEEXT): $(tsub_ui_OBJECTS) $(tsub_ui_DEPENDENCIES) $(EXTRA_tsub_ui_DEPENDENCIES) 
	@rm -f tsub_ui$(EXEEXT)
	$(LINK) $(tsub_ui_OBJECTS) $(tsub_ui_LDADD) $(LIBS)
tsubnormal$(EXEEXT): $(tsubnormal_OBJECTS) $(tsubnormal_DEPENDENCIES) $(EXTRA_tsubnormal_DEPENDENCIES) 
	@rm -f tsubnormal$(EXEEXT)
	$(LINK) $(tsubnormal_OBJECTS) $(tsubnormal_LDADD) $(LIBS)
tsum$(EXEEXT): $(tsum_OBJECTS) $(tsum_DEPENDENCIES) $(EXTRA_tsum_DEPENDENCIES) 
	@rm -f tsum$(EXEEXT)
	$(LINK) $(tsum_OBJECTS) $(tsum_LDADD) $(LIBS)
tswap$(EXEEXT): $(tswap_OBJECTS) $(tswap_DEPENDENCIES) $(EXTRA_tswap_DEPENDENCIES) 
	@rm -f tswap$(EXEEXT)
	$(LINK) $(tswap_OBJECTS) $(tswap_LDADD) $(LIBS)
ttan$(EXEEXT): $(ttan_OBJECTS) $(ttan_DEPENDENCIES) $(EXTRA_ttan_DEPENDENCIES) 
	@rm -f ttan$(EXEEXT)
	$(LINK) $(ttan_OBJECTS) $(ttan_LDADD) $(LIBS)
ttanh$(EXEEXT): $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES) $(EXTRA_ttanh_DEPENDENCIES) 
	@rm -f ttanh$(EXEEXT)
	$(LINK) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)
ttrunc$(EXEEXT): $(ttrunc_OBJECTS) $(ttrunc_DEPENDENCIES) $(EXTRA_ttrunc_DEPENDENCIES) 
	@rm -f ttrunc$(EXEEXT)
	$(LINK) $(ttrunc_OBJECTS) $(ttrunc_LDADD) $(LIBS)
tui_div$(EXEEXT): $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES) $(EXTRA_tui_div_DEPENDENCIES) 
	@rm -f tui_div$(EXEEXT)
	$(LINK) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)
tui_pow$(EXEEXT): $(tui_pow_OBJECTS) $(tui_pow_DEPENDENCIES) $(EXTRA_tui_pow_DEPENDENCIES) 
	@rm -f tui_pow$(EXEEXT)
	$(LINK) $(tui_pow_OBJECTS) $(tui_pow_LDADD) $(LIBS)
tui_sub$(EXEEXT): $(tui_sub_OBJECTS) $(tui_sub_DEPENDENCIES) $(EXTRA_tui_sub_DEPENDENCIES) 
	@rm -f tui_sub$(EXEEXT)
	$(LINK) $(tui_sub_OBJECTS) $(tui_sub_LDADD) $(LIBS)
turandom$(EXEEXT): $(turandom_OBJECTS) $(turandom_DEPENDENCIES) $(EXTRA_turandom_DEPENDENCIES) 
	@rm -f turandom$(EXEEXT)
	$(LINK) $(turandom_OBJECTS) $(turandom_LDADD) $(LIBS)
tvalist$(EXEEXT): $(tvalist_OBJECTS) $(tvalist_DEPENDENCIES) $(EXTRA_tvalist_DEPENDENCIES) 
	@rm -f tvalist$(EXEEXT)
	$(LINK) $(tvalist_OBJECTS) $(tvalist_LDADD) $(LIBS)
tversion$(EXEEXT): $(tversion_OBJECTS) $(tversion_DEPENDENCIES) $(EXTRA_tversion_DEPENDENCIES) 
	@rm -f tversion$(EXEEXT)
	$(LINK) $(tversion_OBJECTS) $(tversion_LDADD) $(LIBS)
ty0$(EXEEXT): $(ty0_OBJECTS) $(ty0_DEPENDENCIES) $(EXTRA_ty0_DEPENDENCIES) 
	@rm -f ty0$(EXEEXT)
	$(LINK) $(ty0_OBJECTS) $(ty0_LDADD) $(LIBS)
ty1$(EXEEXT): $(ty1_OBJECTS) $(ty1_DEPENDENCIES) $(EXTRA_ty1_DEPENDENCIES) 
	@rm -f ty1$(EXEEXT)
	$(LINK) $(ty1_OBJECTS) $(ty1_LDADD) $(LIBS)
tyn$(EXEEXT): $(tyn_OBJECTS) $(tyn_DEPENDENCIES) $(EXTRA_tyn_DEPENDENCIES) 
	@rm -f tyn$(EXEEXT)
	$(LINK) $(tyn_OBJECTS) $(tyn_LDADD) $(LIBS)
tzeta$(EXEEXT): $(tzeta_OBJECTS) $(tzeta_DEPENDENCIES) $(EXTRA_tzeta_DEPENDENCIES) 
	@rm -f tzeta$(EXEEXT)
	$(LINK) $(tzeta_OBJECTS) $(tzeta_LDADD) $(LIBS)
tzeta_ui$(EXEEXT): $(tzeta_ui_OBJECTS) $(tzeta_ui_DEPENDENCIES) $(EXTRA_tzeta_ui_DEPENDENCIES) 
	@rm -f tzeta_ui$(EXEEXT)
	$(LINK) $(tzeta_ui_OBJECTS) $(tzeta_ui_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmp_str.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpf_compat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpfr_compat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reuse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rnd_mode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacosh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd1sp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tai.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasinh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatanh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taway.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tbuildopt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcan_round.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcbrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_ld.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmp_ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmpabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcomparisons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_catalan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_euler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_log2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconst_pi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcopysign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcosh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcoth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcsc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcsch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/td_div.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/td_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdigamma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/teq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texceptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp10.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texpm1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfactorial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfmod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfprintf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfrac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfrexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgamma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_d_2exp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_flt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_ld_2exp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_set_d64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_sj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_z.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgmpop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgrandom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thyperbolic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thypot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinp_str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinternals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tisnan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tisqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tj0.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tj1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tjn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tl2b.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlgamma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tli2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlngamma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog10.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog1p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmin_prec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tminmax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmodf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_2exp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tout_str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toutimpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_all.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_z.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprintf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trandom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trec_sqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tremquo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/troot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tround_prec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsech.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_exp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_f.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_ld.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_q.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_si.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_sj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_z.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_z_exp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsgn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsi_op.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin_cos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsinh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsinh_cosh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsprintf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt_ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstckintc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstdint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstrtofr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub1sp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub_d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub_ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsubnormal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tswap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttanh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttrunc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_div.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_pow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/turandom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tvalist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ty0.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ty1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tyn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tzeta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tzeta_ui.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


$(top_builddir)/src/libmpfr.la:
	cd $(top_builddir)/src && $(MAKE) $(AM_MAKEFLAGS) libmpfr.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
