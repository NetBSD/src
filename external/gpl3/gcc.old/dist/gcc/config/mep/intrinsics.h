

/* DO NOT EDIT: This file is automatically generated by CGEN.
   Any changes you make will be discarded when it is next regenerated.
*/

/* GCC defines these internally, as follows... 
#if __MEP_CONFIG_CP_DATA_BUS_WIDTH == 64
  typedef long long cp_data_bus_int;
#else
  typedef long cp_data_bus_int;
#endif
typedef          char  cp_v8qi  __attribute__((vector_size(8)));
typedef unsigned char  cp_v8uqi __attribute__((vector_size(8)));
typedef          short cp_v4hi  __attribute__((vector_size(8)));
typedef unsigned short cp_v4uhi __attribute__((vector_size(8)));
typedef          int   cp_v2si  __attribute__((vector_size(8)));
typedef unsigned int   cp_v2usi __attribute__((vector_size(8)));
*/


// default
void mep_cpfmadila1_h (cp_v4hi, cp_v4hi, long, long); // volatile
void mep_cpfmadiua1_h (cp_v4hi, cp_v4hi, long, long); // volatile
void mep_cpfmadia1_b (cp_v8qi, cp_v8qi, long, long); // volatile
void mep_cpfmadia1u_b (cp_v8uqi, cp_v8uqi, long, long); // volatile
void mep_cpfmulila1_h (cp_v4hi, cp_v4hi, long, long); // volatile
void mep_cpfmuliua1_h (cp_v4hi, cp_v4hi, long, long); // volatile
void mep_cpfmulia1_b (cp_v8qi, cp_v8qi, long, long); // volatile
void mep_cpfmulia1u_b (cp_v8uqi, cp_v8uqi, long, long); // volatile
void mep_cpamadila1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpamadiua1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpamadia1_b (cp_v8qi, cp_v8qi, long); // volatile
void mep_cpamadia1u_b (cp_v8uqi, cp_v8uqi, long); // volatile
void mep_cpamulila1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpamuliua1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpamulia1_b (cp_v8qi, cp_v8qi, long); // volatile
void mep_cpamulia1u_b (cp_v8uqi, cp_v8uqi, long); // volatile
void mep_cpfmadila1s1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmadiua1s1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmadia1s1_b (cp_v8qi, cp_v8qi, long); // volatile
void mep_cpfmadia1s1u_b (cp_v8uqi, cp_v8uqi, long); // volatile
void mep_cpfmulila1s1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmuliua1s1_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmulia1s1_b (cp_v8qi, cp_v8qi, long); // volatile
void mep_cpfmulia1s1u_b (cp_v8uqi, cp_v8uqi, long); // volatile
void mep_cpfmadila1s0_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmadiua1s0_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmadia1s0_b (cp_v8qi, cp_v8qi, long); // volatile
void mep_cpfmadia1s0u_b (cp_v8uqi, cp_v8uqi, long); // volatile
void mep_cpfmulila1s0_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmuliua1s0_h (cp_v4hi, cp_v4hi, long); // volatile
void mep_cpfmulia1s0_b (cp_v8qi, cp_v8qi, long); // volatile
void mep_cpfmulia1s0u_b (cp_v8uqi, cp_v8uqi, long); // volatile
void mep_cpacswp ();                    // volatile
void mep_cpaccpa1 ();                   // volatile
void mep_cpacsuma1 ();                  // volatile
void mep_c1nop ();                      // volatile
void mep_cpfacla0s1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfacua0s1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfaca0s1_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpfaca0s1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpfsftbla0s1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfsftbua0s1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfsftba0s1_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpfsftba0s1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpfacla0s0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfacua0s0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfaca0s0_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpfaca0s0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpfsftbla0s0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfsftbua0s0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpfsftba0s0_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpfsftba0s0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpsllia0 (long);               // volatile
void mep_cpsraia0 (long);               // volatile
void mep_cpsrlia0 (long);               // volatile
void mep_cpslla0 (cp_data_bus_int);     // volatile
void mep_cpsraa0 (cp_data_bus_int);     // volatile
void mep_cpsrla0 (cp_data_bus_int);     // volatile
void mep_cpaccpa0 ();                   // volatile
void mep_cpacsuma0 ();                  // volatile
cp_v2si mep_cpmovhla0_w ();             // volatile
cp_v2si mep_cpmovhua0_w ();             // volatile
cp_v2si mep_cppackla0_w ();             // volatile
cp_v2si mep_cppackua0_w ();             // volatile
cp_v4hi mep_cppackla0_h ();             // volatile
cp_v4hi mep_cppackua0_h ();             // volatile
cp_v8qi mep_cppacka0_b ();              // volatile
cp_v8uqi mep_cppacka0u_b ();            // volatile
cp_v2si mep_cpmovlla0_w ();             // volatile
cp_v2si mep_cpmovlua0_w ();             // volatile
cp_v2si mep_cpmovula0_w ();             // volatile
cp_v2si mep_cpmovuua0_w ();             // volatile
cp_v4hi mep_cpmovla0_h ();              // volatile
cp_v4hi mep_cpmovua0_h ();              // volatile
cp_v8qi mep_cpmova0_b ();               // volatile
void mep_cpsetla0_w (cp_v2si, cp_v2si); // volatile
void mep_cpsetua0_w (cp_v2si, cp_v2si); // volatile
void mep_cpseta0_h (cp_v4hi, cp_v4hi);  // volatile
void mep_cpsadla0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsadua0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsada0_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpsada0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpabsla0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpabsua0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpabsa0_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpabsa0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpsubacla0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsubacua0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsubaca0_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpsubaca0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpsubla0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsubua0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsuba0_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpsuba0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpaddacla0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpaddacua0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpaddaca0_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpaddaca0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpaddla0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpaddua0_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpadda0_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpadda0u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_c0nop ();                      // volatile
void mep_cpsmsbslla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmsbslua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmsbslla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsmsbslua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsmadslla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmadslua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmadslla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsmadslua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmulslla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmulslua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmulslla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmulslua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsmsbla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmsbua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmsbla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsmsbua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsmadla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmadua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsmadla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsmadua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmsbla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmsbua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmsbla1u_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpmsbua1u_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpmsbla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmsbua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmadla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmadua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmadla1u_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpmadua1u_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpmadla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmadua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmada1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpmada1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpmulla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmulua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpmulla1u_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpmulua1u_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpmulla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmulua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpmula1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpmula1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpssda1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpssda1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpssqa1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpssqa1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpsllia1 (long);               // volatile
void mep_cpsraia1 (long);               // volatile
void mep_cpsrlia1 (long);               // volatile
void mep_cpslla1 (cp_data_bus_int);     // volatile
void mep_cpsraa1 (cp_data_bus_int);     // volatile
void mep_cpsrla1 (cp_data_bus_int);     // volatile
cp_v2si mep_cpmovhla1_w ();             // volatile
cp_v2si mep_cpmovhua1_w ();             // volatile
cp_v2si mep_cppackla1_w ();             // volatile
cp_v2si mep_cppackua1_w ();             // volatile
cp_v4hi mep_cppackla1_h ();             // volatile
cp_v4hi mep_cppackua1_h ();             // volatile
cp_v8qi mep_cppacka1_b ();              // volatile
cp_v8uqi mep_cppacka1u_b ();            // volatile
cp_v2si mep_cpmovlla1_w ();             // volatile
cp_v2si mep_cpmovlua1_w ();             // volatile
cp_v2si mep_cpmovula1_w ();             // volatile
cp_v2si mep_cpmovuua1_w ();             // volatile
cp_v4hi mep_cpmovla1_h ();              // volatile
cp_v4hi mep_cpmovua1_h ();              // volatile
cp_v8qi mep_cpmova1_b ();               // volatile
void mep_cpsetla1_w (cp_v2si, cp_v2si); // volatile
void mep_cpsetua1_w (cp_v2si, cp_v2si); // volatile
void mep_cpseta1_h (cp_v4hi, cp_v4hi);  // volatile
void mep_cpsadla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsadua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsada1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpsada1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpabsla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpabsua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpabsa1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpabsa1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpsubacla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsubacua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsubaca1_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpsubaca1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpsubla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsubua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpsuba1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpsuba1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpaddacla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpaddacua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpaddaca1_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpaddaca1u_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpaddla1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpaddua1_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpadda1_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpadda1u_b (cp_v8uqi, cp_v8uqi); // volatile
cp_data_bus_int mep_cdmovi (long);
cp_data_bus_int mep_cdmoviu (long);
cp_v2si mep_cpmovi_w (long);
cp_v2usi mep_cpmoviu_w (long);
cp_v4hi mep_cpmovi_h (long);
cp_v4uhi mep_cpmoviu_h (long);
cp_v8qi mep_cpmovi_b (long);
cp_data_bus_int mep_cdclipi3 (cp_data_bus_int, long);
cp_data_bus_int mep_cdclipiu3 (cp_data_bus_int, long);
cp_v2si mep_cpclipi3_w (cp_v2si, long);
cp_v2si mep_cpclipiu3_w (cp_v2si, long);
cp_v2si mep_cpslai3_w (cp_v2si, long);  // volatile
cp_v4hi mep_cpslai3_h (cp_v4hi, long);  // volatile
cp_data_bus_int mep_cdslli3 (cp_data_bus_int, long);
cp_v2si mep_cpslli3_w (cp_v2si, long);
cp_v4hi mep_cpslli3_h (cp_v4hi, long);
cp_v8qi mep_cpslli3_b (cp_v8qi, long);
cp_data_bus_int mep_cdsrai3 (cp_data_bus_int, long);
cp_v2si mep_cpsrai3_w (cp_v2si, long);
cp_v4hi mep_cpsrai3_h (cp_v4hi, long);
cp_v8qi mep_cpsrai3_b (cp_v8qi, long);
cp_data_bus_int mep_cdsrli3 (cp_data_bus_int, long);
cp_v2si mep_cpsrli3_w (cp_v2si, long);
cp_v4hi mep_cpsrli3_h (cp_v4hi, long);
cp_v8qi mep_cpsrli3_b (cp_v8qi, long);
void mep_cpocmpge_w (cp_v2si, cp_v2si); // volatile
void mep_cpocmpgeu_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpocmpge_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpocmpge_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpocmpgeu_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpocmpgt_w (cp_v2si, cp_v2si); // volatile
void mep_cpocmpgtu_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpocmpgt_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpocmpgt_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpocmpgtu_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpocmpne_w (cp_v2si, cp_v2si); // volatile
void mep_cpocmpne_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpocmpne_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpocmpeq_w (cp_v2si, cp_v2si); // volatile
void mep_cpocmpeq_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpocmpeq_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpacmpge_w (cp_v2si, cp_v2si); // volatile
void mep_cpacmpgeu_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpacmpge_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpacmpge_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpacmpgeu_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpacmpgt_w (cp_v2si, cp_v2si); // volatile
void mep_cpacmpgtu_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpacmpgt_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpacmpgt_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpacmpgtu_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpacmpne_w (cp_v2si, cp_v2si); // volatile
void mep_cpacmpne_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpacmpne_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpacmpeq_w (cp_v2si, cp_v2si); // volatile
void mep_cpacmpeq_h (cp_v4hi, cp_v4hi); // volatile
void mep_cpacmpeq_b (cp_v8qi, cp_v8qi); // volatile
void mep_cpcmpge_w (cp_v2si, cp_v2si);  // volatile
void mep_cpcmpgeu_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpcmpge_h (cp_v4hi, cp_v4hi);  // volatile
void mep_cpcmpge_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpcmpgeu_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpcmpgt_w (cp_v2si, cp_v2si);  // volatile
void mep_cpcmpgtu_w (cp_v2usi, cp_v2usi); // volatile
void mep_cpcmpgt_h (cp_v4hi, cp_v4hi);  // volatile
void mep_cpcmpgt_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpcmpgtu_b (cp_v8uqi, cp_v8uqi); // volatile
void mep_cpcmpne_w (cp_v2si, cp_v2si);  // volatile
void mep_cpcmpne_h (cp_v4hi, cp_v4hi);  // volatile
void mep_cpcmpne_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpcmpeq_w (cp_v2si, cp_v2si);  // volatile
void mep_cpcmpeq_h (cp_v4hi, cp_v4hi);  // volatile
void mep_cpcmpeq_b (cp_v8qi, cp_v8qi);  // volatile
void mep_cpcmpeqz_b (cp_v8qi, cp_v8qi); // volatile
cp_data_bus_int mep_cdcastw (cp_data_bus_int);
cp_data_bus_int mep_cdcastuw (cp_data_bus_int);
cp_v2si mep_cpcasth_w (cp_v2si);
cp_v2si mep_cpcastuh_w (cp_v2si);
cp_v2si mep_cpcastb_w (cp_v2si);
cp_v2si mep_cpcastub_w (cp_v2si);
cp_v4hi mep_cpcastb_h (cp_v4hi);
cp_v4hi mep_cpcastub_h (cp_v4hi);
cp_v4hi mep_cpextl_h (cp_v4hi);
cp_v4uhi mep_cpextlu_h (cp_v4uhi);
cp_v8qi mep_cpextl_b (cp_v8qi);
cp_v8uqi mep_cpextlu_b (cp_v8uqi);
cp_v4uhi mep_cpextu_h (cp_v4uhi);
cp_v4uhi mep_cpextuu_h (cp_v4uhi);
cp_v8uqi mep_cpextu_b (cp_v8uqi);
cp_v8uqi mep_cpextuu_b (cp_v8uqi);
cp_v2si mep_cpbcast_w (cp_v2si);
cp_v4hi mep_cpbcast_h (cp_v4hi);
cp_v8qi mep_cpbcast_b (cp_v8qi);
void mep_cpccadd_b (cp_v8qi*);          // volatile
cp_v2si mep_cphadd_w (cp_v2si);
cp_v4hi mep_cphadd_h (cp_v4hi);
cp_v8qi mep_cphadd_b (cp_v8qi);
cp_v8uqi mep_cphaddu_b (cp_v8uqi);
cp_v2si mep_cpnorm_w (cp_v2si);
cp_v4hi mep_cpnorm_h (cp_v4hi);
cp_v2si mep_cpldz_w (cp_v2si);
cp_v4hi mep_cpldz_h (cp_v4hi);
cp_v2si mep_cpabsz_w (cp_v2si);
cp_v4hi mep_cpabsz_h (cp_v4hi);
cp_v8qi mep_cpabsz_b (cp_v8qi);
void mep_cpmovtocc (cp_data_bus_int);   // volatile
void mep_cpmovtocsar1 (cp_data_bus_int); // volatile
void mep_cpmovtocsar0 (cp_data_bus_int); // volatile
cp_data_bus_int mep_cpmovfrcc ();       // volatile
cp_data_bus_int mep_cpmovfrcsar1 ();    // volatile
cp_data_bus_int mep_cpmovfrcsar0 ();    // volatile
cp_v2si mep_cpmin3_w (cp_v2si, cp_v2si);
cp_v2si mep_cpminu3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpmin3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpmin3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpminu3_b (cp_v8qi, cp_v8qi);
cp_v2si mep_cpmax3_w (cp_v2si, cp_v2si);
cp_v2si mep_cpmaxu3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpmax3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpmax3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpmaxu3_b (cp_v8qi, cp_v8qi);
cp_v4hi mep_cpabs3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpabs3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpabsu3_b (cp_v8qi, cp_v8qi);
cp_v2si mep_cpaddsr3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpaddsr3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpaddsr3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpaddsru3_b (cp_v8qi, cp_v8qi);
cp_v2si mep_cpave3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpave3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpave3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpaveu3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextlsub3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextlsubu3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextusub3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextusubu3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextladd3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextladdu3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextuadd3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpextuaddu3_b (cp_v8qi, cp_v8qi);
cp_v2si mep_cpssub3_w (cp_v2si, cp_v2si); // volatile
cp_v4hi mep_cpssub3_h (cp_v4hi, cp_v4hi); // volatile
cp_v2si mep_cpsadd3_w (cp_v2si, cp_v2si); // volatile
cp_v4hi mep_cpsadd3_h (cp_v4hi, cp_v4hi); // volatile
cp_v2si mep_cpsla3_w (cp_v2si, cp_v2si); // volatile
cp_v4hi mep_cpsla3_h (cp_v4hi, cp_v4hi); // volatile
cp_data_bus_int mep_cdsll3 (cp_data_bus_int, cp_data_bus_int);
cp_v2si mep_cpssll3_w (cp_v2si, cp_v2si);
cp_v2si mep_cpsll3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpssll3_h (cp_v4hi, cp_v4hi);
cp_v4hi mep_cpsll3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpssll3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpsll3_b (cp_v8qi, cp_v8qi);
cp_data_bus_int mep_cdsra3 (cp_data_bus_int, cp_data_bus_int);
cp_v2si mep_cpssra3_w (cp_v2si, cp_v2si);
cp_v2si mep_cpsra3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpssra3_h (cp_v4hi, cp_v4hi);
cp_v4hi mep_cpsra3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpssra3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpsra3_b (cp_v8qi, cp_v8qi);
cp_data_bus_int mep_cdsrl3 (cp_data_bus_int, cp_data_bus_int);
cp_v2si mep_cpssrl3_w (cp_v2si, cp_v2si);
cp_v2si mep_cpsrl3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpssrl3_h (cp_v4hi, cp_v4hi);
cp_v4hi mep_cpsrl3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpssrl3_b (cp_v8qi, cp_v8qi);
cp_v8qi mep_cpsrl3_b (cp_v8qi, cp_v8qi);
cp_v4hi mep_cppack_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cppack_b (cp_v8qi, cp_v8qi);
cp_v8uqi mep_cppacku_b (cp_v8uqi, cp_v8uqi);
cp_v2si mep_cpunpackl_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpunpackl_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpunpackl_b (cp_v8qi, cp_v8qi);
cp_v2usi mep_cpunpacku_w (cp_v2usi, cp_v2usi);
cp_v4uhi mep_cpunpacku_h (cp_v4uhi, cp_v4uhi);
cp_v8uqi mep_cpunpacku_b (cp_v8uqi, cp_v8uqi);
cp_data_bus_int mep_cpfsftbs1 (cp_data_bus_int, cp_data_bus_int); // volatile
cp_data_bus_int mep_cpfsftbs0 (cp_data_bus_int, cp_data_bus_int); // volatile
cp_data_bus_int mep_cpfsftbi (cp_data_bus_int, cp_data_bus_int, long);
cp_data_bus_int mep_cpsel (cp_data_bus_int, cp_data_bus_int); // volatile
cp_vector mep_cpxor3 (cp_vector, cp_vector);
cp_vector mep_cpnor3 (cp_vector, cp_vector);
cp_vector mep_cpor3 (cp_vector, cp_vector);
cp_vector mep_cpand3 (cp_vector, cp_vector);
cp_data_bus_int mep_cdsub3 (cp_data_bus_int, cp_data_bus_int);
cp_v2si mep_cpsub3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpsub3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpsub3_b (cp_v8qi, cp_v8qi);
cp_data_bus_int mep_cdadd3 (cp_data_bus_int, cp_data_bus_int);
cp_v2si mep_cpadd3_w (cp_v2si, cp_v2si);
cp_v4hi mep_cpadd3_h (cp_v4hi, cp_v4hi);
cp_v8qi mep_cpadd3_b (cp_v8qi, cp_v8qi);
void mep_bsrv (void *);
void mep_jsrv (long);
void mep_synccp ();                     // volatile
void mep_bcpaf (long, void *);
void mep_bcpat (long, void *);
void mep_bcpne (long, void *);
void mep_bcpeq (long, void *);
void mep_lmcpm1 (cp_data_bus_int*, long **, long);
void mep_smcpm1 (cp_data_bus_int, long **, long);
void mep_lwcpm1 (cp_data_bus_int*, long **, long);
void mep_swcpm1 (cp_data_bus_int, long **, long);
void mep_lhcpm1 (cp_data_bus_int*, long **, long);
void mep_shcpm1 (cp_data_bus_int, long **, long);
void mep_lbcpm1 (cp_data_bus_int*, long **, long);
void mep_sbcpm1 (cp_data_bus_int, long **, long);
void mep_lmcpm0 (cp_data_bus_int*, long **, long);
void mep_smcpm0 (cp_data_bus_int, long **, long);
void mep_lwcpm0 (cp_data_bus_int*, long **, long);
void mep_swcpm0 (cp_data_bus_int, long **, long);
void mep_lhcpm0 (cp_data_bus_int*, long **, long);
void mep_shcpm0 (cp_data_bus_int, long **, long);
void mep_lbcpm0 (cp_data_bus_int*, long **, long);
void mep_sbcpm0 (cp_data_bus_int, long **, long);
void mep_lmcpa (cp_data_bus_int*, long **, long);
void mep_smcpa (cp_data_bus_int, long **, long);
void mep_lwcpa (cp_data_bus_int*, long **, long);
void mep_swcpa (cp_data_bus_int, long **, long);
void mep_lhcpa (cp_data_bus_int*, long **, long);
void mep_shcpa (cp_data_bus_int, long **, long);
void mep_lbcpa (cp_data_bus_int*, long **, long);
void mep_sbcpa (cp_data_bus_int, long **, long);
void mep_lmcp16 (cp_data_bus_int*, long, long *);
void mep_smcp16 (cp_data_bus_int, long, long *); // volatile
void mep_lwcp16 (cp_data_bus_int*, long, long *);
void mep_swcp16 (cp_data_bus_int, long, long *);
void mep_lmcpi (cp_data_bus_int*, long **);
void mep_smcpi (cp_data_bus_int, long **);
void mep_lwcpi (cp_data_bus_int*, long **);
void mep_swcpi (cp_data_bus_int, long **);
void mep_lmcp (cp_data_bus_int*, long *);
void mep_smcp (cp_data_bus_int, long *); // volatile
void mep_lwcp (cp_data_bus_int*, long *);
void mep_swcp (cp_data_bus_int, long *);
void mep_ssubu (long*, long);
void mep_saddu (long*, long);
void mep_ssub (long*, long);
void mep_sadd (long*, long);
void mep_clipu (long*, long);
void mep_clip (long*, long);
void mep_maxu (long*, long);
void mep_minu (long*, long);
void mep_max (long*, long);
void mep_min (long*, long);
void mep_ave (long*, long);
void mep_abs (long*, long);
void mep_ldz (long*, long);
void mep_dbreak ();                     // volatile
void mep_dret ();
void mep_divu (long, long);
void mep_div (long, long);
void mep_maddru (long*, long);
void mep_maddr (long*, long);
void mep_maddu (long, long);
void mep_madd (long, long);
void mep_mulru (long*, long);
void mep_mulr (long*, long);
void mep_mulu (long, long);
void mep_mul (long, long);
void mep_cache (long, long *);          // volatile
void mep_tas (long*, long *);
void mep_btstm (long*, long *, long);
void mep_bnotm (long *, long);
void mep_bclrm (long *, long);
void mep_bsetm (long *, long);
void mep_ldcb (long*, long);            // volatile
void mep_stcb (long, long);             // volatile
void mep_syncm ();                      // volatile
void mep_break ();                      // volatile
void mep_swi (long);                    // volatile
void mep_sleep ();                      // volatile
void mep_halt ();                       // volatile
void mep_reti ();
void mep_ei ();                         // volatile
void mep_di ();                         // volatile
void mep_ldc (long*, long);             // volatile
void mep_ldc_lo (long*);
void mep_ldc_hi (long*);
void mep_ldc_lp (long*);
void mep_stc (long, long);              // volatile
void mep_stc_lo (long);
void mep_stc_hi (long);
void mep_stc_lp (long);
void mep_erepeat (void *);
void mep_repeat (long, void *);
void mep_ret ();
void mep_jsr (long);
void mep_jmp24 (void *);
void mep_jmp (long);
void mep_bsr24 (void *);
void mep_bsr12 (void *);
void mep_bne (long, long, void *);
void mep_beq (long, long, void *);
void mep_bgei (long, long, void *);
void mep_blti (long, long, void *);
void mep_bnei (long, long, void *);
void mep_beqi (long, long, void *);
void mep_bnez (long, void *);
void mep_beqz (long, void *);
void mep_bra (void *);
void mep_fsft (long*, long);            // volatile
void mep_sll3 (long*, long, long);
void mep_slli (long*, long);
void mep_srli (long*, long);
void mep_srai (long*, long);
void mep_sll (long*, long);
void mep_srl (long*, long);
void mep_sra (long*, long);
void mep_xor3 (long*, long, long);
void mep_and3 (long*, long, long);
void mep_or3 (long*, long, long);
void mep_nor (long*, long);
void mep_xor (long*, long);
void mep_and (long*, long);
void mep_or (long*, long);
void mep_sltu3x (long*, long, long);
void mep_slt3x (long*, long, long);
void mep_add3x (long*, long, long);
void mep_sl2ad3 (long*, long, long);
void mep_sl1ad3 (long*, long, long);
void mep_sltu3i (long*, long, long);
void mep_slt3i (long*, long, long);
void mep_sltu3 (long*, long, long);
void mep_slt3 (long*, long, long);
void mep_neg (long*, long);
void mep_sbvck3 (long*, long, long);
void mep_sub (long*, long);
void mep_advck3 (long*, long, long);
void mep_add3i (long*, long);
void mep_add (long*, long);
void mep_add3 (long*, long, long);
void mep_movh (long*, long);
void mep_movu16 (long*, long);
void mep_movu24 (long*, long);
void mep_movi16 (long*, long);
void mep_movi8 (long*, long);
void mep_mov (long*, long);
void mep_ssarb (long, long);            // volatile
void mep_extuh (long*);
void mep_extub (long*);
void mep_exth (long*);
void mep_extb (long*);
void mep_lw24 (long*, long);
void mep_sw24 (long, long);
void mep_lhu16 (long*, long, long *);
void mep_lbu16 (long*, long, long *);
void mep_lw16 (long*, long, long *);
void mep_lh16 (long*, long, long *);
void mep_lb16 (long*, long, long *);
void mep_sw16 (long, long, long *);
void mep_sh16 (long, long, long *);
void mep_sb16 (long, long, long *);
void mep_lhu_tp (long*, long);
void mep_lbu_tp (long*, long);
void mep_lw_tp (long*, long);
void mep_lh_tp (long*, long);
void mep_lb_tp (long*, long);
void mep_sw_tp (long, long);
void mep_sh_tp (long, long);
void mep_sb_tp (long, long);
void mep_lw_sp (long*, long);
void mep_sw_sp (long, long);
void mep_lhu (long*, long *);
void mep_lbu (long*, long *);
void mep_lw (long*, long *);
void mep_lh (long*, long *);
void mep_lb (long*, long *);
void mep_sw (long, long *);
void mep_sh (long, long *);
void mep_sb (long, long *);
void mep_dsp1 (long*, long);            // volatile
void mep_dsp0 (long);                   // volatile
void mep_dsp (long*, long, long);       // volatile
void mep_uci (long*, long, long);       // volatile
void mep_lhucpm1 (cp_data_bus_int*, long **, long);
void mep_lbucpm1 (cp_data_bus_int*, long **, long);
void mep_lhucpm0 (cp_data_bus_int*, long **, long);
void mep_lbucpm0 (cp_data_bus_int*, long **, long);
void mep_lhucpa (cp_data_bus_int*, long **, long);
void mep_lbucpa (cp_data_bus_int*, long **, long);
void mep_lhucp (cp_data_bus_int*, long, long *);
void mep_lhcp (cp_data_bus_int*, long, long *);
void mep_shcp (cp_data_bus_int, long, long *);
void mep_lbucp (cp_data_bus_int*, long, long *);
void mep_lbcp (cp_data_bus_int*, long, long *);
void mep_sbcp (cp_data_bus_int, long, long *);
void mep_casw3 (long*, long, long);     // volatile
void mep_cash3 (long*, long, long);     // volatile
void mep_casb3 (long*, long, long);     // volatile
void mep_prefd (long, long, long *);    // volatile
void mep_pref (long, long *);           // volatile
void mep_ldcb_r (long*, long *);        // volatile
void mep_stcb_r (long, long *);         // volatile
void mep_cmovh2 (long*, cp_data_bus_int);
void mep_cmovh1 (cp_data_bus_int*, long);
void mep_cmovc2 (long*, long);          // volatile
void mep_cmovc1 (long, long);           // volatile
void mep_cmov2 (long*, cp_data_bus_int);
void mep_cmov1 (cp_data_bus_int*, long);
cp_data_bus_int mep_cpmov (cp_data_bus_int);
