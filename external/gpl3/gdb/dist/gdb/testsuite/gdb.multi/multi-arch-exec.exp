# Copyright 2009-2014 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test multi-exec / multi-process features that work for all configurations,
# even ones that cannot run multiple processes simultaneously.

set testfile "multi-arch-exec"

# The plain remote target can't do multiple inferiors.
if [target_info exists use_gdb_stub] {
    return
}

# The 64-bit compile may succeed for i386-linux, but gdb won't be able
# to load the file.
if [istarget "i?86-*linux*"] {
    return
}

# Can't use standard_testfile, we want executables with specialized
# names.
set exec1 "multi-arch-exec"
set srcfile1 multi-arch-exec.c
set binfile1 [standard_output_file ${exec1}]

set exec2 "multi-arch-exec-hello"
set srcfile2 hello.c
set binfile2 [standard_output_file ${exec2}]

# Build two executables, one for each arch.

if [istarget "s390*-*-*"] {
    set march1 "-m64"
    set march2 "-m31"
} else {
    set march1 "-m64"
    set march2 "-m32"
}

set dirname [relative_filename [pwd] [file dirname $binfile2]]
if { [prepare_for_testing ${testfile}.exp ${exec1} "${srcfile1}" \
	  [list debug nowarnings \
	       additional_flags=${march1} \
	       additional_flags=-DBASEDIR=\"$dirname\"]] } {
    return -1
}

if { [prepare_for_testing ${testfile}.exp ${exec2} "${srcfile2}" \
	  [list debug nowarnings additional_flags=${march2}]] } {
    return -1
}

clean_restart ${exec1}
if ![runto_main] then {
    fail "Couldn't run to main"
    return -1
}

# Test that GDB updates the target description / arch successfuly
# after the exec.
gdb_test "continue" "Breakpoint 1, main.*" "continue across exec that changes architecture"
