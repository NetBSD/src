# Copyright 2023-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test DAP logging breakpoints.

require allow_dap_tests

load_lib dap-support.exp

standard_testfile

if {[build_executable ${testfile}.exp $testfile] == -1} {
    return
}

if {[dap_initialize] == ""} {
    return
}

set line [gdb_get_line_number "HERE"]
set obj [dap_check_request_and_response "set breakpoint" \
	     setBreakpoints \
	     [format {o source [o path [%s]] \
			  breakpoints [a [o line [i %d] \
					      logMessage [s "got {global_variable} - {local} = {global_variable - local}"]]]} \
		  [list s $srcfile] $line]]
set fn_bpno [dap_get_breakpoint_number $obj]

dap_check_request_and_response "configurationDone" configurationDone

if {[dap_launch $testfile] == ""} {
    return
}
dap_wait_for_event_and_check "inferior started" thread "body reason" started

dap_wait_for_event_and_check "logging output" output \
    {body category} console \
    {body output} "got 23 - 23 = 0"

# Check that the breakpoint did not cause a stop.
dap_wait_for_event_and_check "inferior exited" exited

dap_shutdown
