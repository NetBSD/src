# Copyright 2008-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

# This file is part of the GDB testsuite.  It tests reverse stepping
# out of recursive functions.

require supports_reverse

standard_testfile

if { [prepare_for_testing "failed to prepare" $testfile $srcfile] } {
    return -1
}

runto_main

if [supports_process_record] {
    # Activate process record/replay
    gdb_test_no_output "record" "turn on process record"
}

set end_of_program [gdb_get_line_number "END OF MAIN" "$srcfile"]
gdb_breakpoint $end_of_program
gdb_continue_to_breakpoint ".*$srcfile/$end_of_program.*"

## test if GDB can reverse over a recursive program
gdb_test "reverse-next" ".*int j = foo.*" "Skipping recursion from outside"
## setup and next over a recursion for inside a recursive call
repeat_cmd_until "reverse-step" ".*" ".*foo .x=4.*"
gdb_test "reverse-next" ".*return foo.*" "Skipping recursion from inside"
gdb_test "reverse-next" ".*foo .x=5.*" "print frame when stepping out"
gdb_test "reverse-next" ".*bar .x=5.*" "stepping into a different function"
gdb_test "reverse-next" "main .. at .*" "stepping back to main"
