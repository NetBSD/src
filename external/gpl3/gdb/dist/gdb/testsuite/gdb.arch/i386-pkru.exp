# Copyright 2015-2017 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

standard_testfile

if { ![istarget i?86-*-*] && ![istarget x86_64-*-* ] } {
    unsupported "skipping x86 PKEYS tests."
    return
}

set comp_flags "-I${srcdir}/../nat/"

if { [prepare_for_testing "failed to prepare" ${testfile} ${srcfile} \
     [list debug additional_flags=${comp_flags}]] } {
    untested "failed to compile x86 PKEYS test.
    return -1
}

if ![runto_main] {
    untested "could not run to main"
    return -1
}

set supports_pkru 0
set test "probe PKRU support"
gdb_test_multiple "print have_pkru()" $test {
    -re ".. = 1\r\n$gdb_prompt $" {
        pass $test
        set supports_pkru 1
    }
    -re ".. = 0\r\n$gdb_prompt $" {
        pass $test
    }
}

if { !$supports_pkru } {
    unsupported "processor does not support protection key feature."
    return
}

# Test pkru register at startup
# set test_string "0"

gdb_test "print \$pkru" "= 0" "pkru register"

# Read values from pseudo registers.
gdb_breakpoint [ gdb_get_line_number "break here 1" ]
gdb_continue_to_breakpoint "break here 1" ".*break here 1.*"

gdb_test "info register pkru" ".*pkru.*0x12345678.*" "read pkru register"
gdb_test "print /x \$pkru = 0x44444444" "= 0x44444444" "set pkru value"
gdb_test "info register pkru" ".*pkru.*0x44444444.*" "read value after setting value"

gdb_breakpoint [ gdb_get_line_number "break here 2" ]
gdb_continue_to_breakpoint "break here 2" ".*break here 2.*"

gdb_test "print /x rd_value" "= 0x44444444" "variable after reading pkru"
