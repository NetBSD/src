# Copyright 2021-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This tests GDB's ability to use the RISC-V prologue scanner in order to
# unwind through a function that uses the 'ld' instruction in its prologue.

if {![istarget "riscv64-*-*"]} {
    verbose "Skipping ${gdb_test_file_name}."
    return
}

standard_testfile riscv64-unwind-prologue-with-ld-lw.c \
		  riscv64-unwind-prologue-with-ld-lw-foo.s
if {[prepare_for_testing "failed to prepare" $testfile \
			 "$srcfile $srcfile2"  nodebug]} {
    return -1
}

if {![runto_main]} {
    return 0
}

gdb_breakpoint "bar"
gdb_continue_to_breakpoint "bar"
gdb_test "bt" \
    [multi_line \
         "#0\[ \t\]*$hex in bar \\\(\\\)" \
         "#1\[ \t\]*$hex in foo \\\(\\\)" \
         "#2\[ \t\]*$hex in main \\\(\\\)"] \
    "Backtrace to the main frame"
gdb_test "finish" "foo \\\(\\\)" "finish bar"
gdb_test "finish" "main \\\(\\\)" "finish foo"
