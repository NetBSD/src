# Copyright 2005-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Regression test for a bug where GDB would misbehave (most likely
# crash) if you ran the "nosharelibrary" command, continued execution,
# and then the program hit the shared library event breakpoint.  GDB
# would deference a dangling solib event probe pointer.

standard_testfile

if {[prepare_for_testing "failed to prepare" $testfile $srcfile debug]} {
    return -1
}

if {$use_gdb_stub && [target_info exists gdb,do_reload_on_run]} {
    # This is the path taken by gdbserver "target remote" boards.
    if { [gdb_reload] != 0 } {
	untested "could not run to initial instruction"
	return
    }
    pass "stopped at entry"
} else {
    if { [gdb_starti_cmd] < 0 } {
	untested "could not run to initial instruction"
	return
    }
    gdb_test "" "Program stopped.*" "stopped at entry"
}

# The program should stop at the first instruction, before the shared
# library event breakpoint is first hit.  On systems where probes are
# present in the dynamic linker, such as GNU/Linux, discarding all
# shared libraries discards such probes too.  The probes-based
# interface can no longer be used.
gdb_test_no_output "nosharedlibrary"

# Continue to main(), past the solib event.
gdb_breakpoint main
gdb_continue_to_breakpoint "main"
