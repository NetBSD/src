# Copyright 2017-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


standard_testfile

if {[prepare_for_testing "failed to prepare" $testfile $srcfile debug]} {
    return -1
}

# Define a stop hook that outputs the value of 'x'

gdb_test_multiple "define hook-stop" "hook-stop" {
    -re "Type commands for definition of \"hook-stop\".\r\nEnd with a line saying just \"end\".\r\n>$" {
	gdb_test "print x\nend" "" "hook-stop"
    }
}

if { [gdb_starti_cmd] < 0 } {
    untested starti
    return -1
}

# The program should stop at the first instruction, so the constructor
# should not have run yet and 'x' should be 0.

gdb_test_sequence "" "starti" {
    "Program stopped."
    "\\$1 = 0"
}

# Continue to the start of main().  The constructor should have run so
# 'x' should be 1.

gdb_breakpoint main
gdb_test_sequence "continue" "" {
    "\\$2 = 1"
    "Breakpoint \[^\r\n\]*main \\(\\) at \[^\r\n\]*starti.c"
}
