# Copyright 2016-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test anonymous block-data statements.

# A name for BLOCK DATA in Fortran is optional.  BLOCK DATA is used
# for one-time initialization of non-pointer variables in named common
# blocks.  GDB used to crash with 'Intel ifort'-generated code, which
# outputs nameless DW_TAG_module, unlike with gfortran which just
# doesn't emit DW_TAG_module in this case.

if { [skip_fortran_tests] } { return -1 }

standard_testfile .f
load_lib "fortran.exp"

if {[prepare_for_testing $testfile.exp $testfile $srcfile {debug f90}]} {
    return -1
}

if {![fortran_runto_main]} {
    return -1
}

with_test_prefix "default values" {
    gdb_test "print doub1" "= 1\.11\\d+"
    gdb_test "print doub2" "= 2\.22\\d+"
    gdb_test "print char1" "= 'abcdef'"
    gdb_test "print char2" "= 'ghijkl'"
}

gdb_breakpoint [gdb_get_line_number "! BP_BEFORE_SUB"]
gdb_continue_to_breakpoint "! BP_BEFORE_SUB" ".*! BP_BEFORE_SUB.*"

with_test_prefix "before sub" {
    gdb_test "print doub1" "= 11\.11\\d+"
    gdb_test "print doub2" "= 22\.22\\d+"
    gdb_test "print char1" "= 'ABCDEF'"
    gdb_test "print char2" "= 'GHIJKL'"
}

gdb_breakpoint [gdb_get_line_number "! BP_SUB"]
gdb_continue_to_breakpoint "! BP_SUB" ".*! BP_SUB.*"

with_test_prefix "in sub" {
    gdb_test "print doub1" "= 11\.11\\d+"
    gdb_test "print doub2" "= 22\.22\\d+"
    gdb_test "print char1" "= 'ABCDEF'"
    gdb_test "print char2" "= 'GHIJKL'"
}
