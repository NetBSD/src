# Copyright 2022-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

if { [skip_ada_tests] } { return -1 }

standard_ada_testfile p

foreach_with_prefix scenario {all minimal} {
    set flags [list debug additional_flags=-fgnat-encodings=$scenario]

    if {[gdb_compile_ada "${srcfile}" "${binfile}-${scenario}" executable {debug}] != ""} {
	return -1
    }

    clean_restart ${testfile}-${scenario}

    set bp_location [gdb_get_line_number "START" ${testdir}/p.adb]
    runto "p.adb:$bp_location"

    gdb_test "ptype simple_type" \
	[string_to_regexp "type = array (<>, <>) of integer"]
    gdb_test "ptype nested_type" \
	[string_to_regexp "type = array (<>, <>) of pack.ca_simple_type"]

    gdb_test "ptype simple" \
	[string_to_regexp "type = array (1 .. 3, 5 .. 6) of integer"]
    gdb_test "ptype nested" \
	[string_to_regexp "type = array (1 .. 3, 5 .. 6) of pack.ca_simple_type"]

    gdb_test "print simple" \
	[string_to_regexp " = ((5 => 1, 2), (5 => 3, 4), (5 => 5, 6))"]
    gdb_test "print nested" \
	[string_to_regexp " = ((5 => (1, 2), (3, 4)), (5 => (5, 6), (7, 8)), (5 => (9, 10), (11, 12)))"]
}
