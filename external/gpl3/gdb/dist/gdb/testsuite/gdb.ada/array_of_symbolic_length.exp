# Copyright 2021-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

if { [skip_ada_tests] } { return -1 }

standard_ada_testfile foo

foreach_with_prefix scenario {all minimal} {
    set flags [list debug additional_flags=-fgnat-encodings=$scenario]

    if {[gdb_compile_ada "${srcfile}" "${binfile}-${scenario}" executable $flags] != ""} {
	return -1
    }

    clean_restart ${testfile}-${scenario}

    set bp_location [gdb_get_line_number "BREAK" ${testdir}/foo.adb]
    runto "foo.adb:$bp_location"

    set test "print my_value"
    gdb_test_multiple "$test" $test {
	-re " = \\(23, 23, 23, 23, 23, 23, 23\\).*$gdb_prompt $" {
	    pass $test
	}
	-re " = \\(\\).*$gdb_prompt $" {
	    if {$scenario == "minimal"} {
		setup_kfail "minimal encodings" *-*-*
	    }
	    fail $test
	}
    }

    set test "print rt"
    gdb_test_multiple "$test" $test {
	-re " = \\(a => \\(\\(a1 => \\(4, 4\\), a2 => \\(8, 8\\)\\), \\(a1 => \\(4, 4\\), a2 => \\(8, 8\\)\\)\\)\\).*$gdb_prompt $" {
	    pass $test
	}
	-re " = \\(a => \\(\\)\\).*$gdb_prompt $" {
	    if {$scenario == "minimal"} {
		setup_kfail "minimal encodings" *-*-*
	    }
	    fail $test
	}
    }
}
