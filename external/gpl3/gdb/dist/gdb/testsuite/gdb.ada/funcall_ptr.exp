# Copyright 2017-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

if { [skip_ada_tests] } { return -1 }

standard_ada_testfile foo

if {[gdb_compile_ada "$srcfile" "$binfile" executable [list debug]] != "" } {
  return -1
}

clean_restart ${testfile}

set bp_location [gdb_get_line_number "BREAK" ${testdir}/foo.adb]
runto "foo.adb:$bp_location"

gdb_test "print pck.ga" " = \\(access integer\\) 0x0" \
         "Check that initial value of GA is null"

gdb_test_no_output "call pck.p(0x1234)"

# Check that argument 'A' was passed correctly in the call to Pck.P
# above. We check that, by printing GA global variable.
# The GA global variable is set with the value of parameter 'A' inside p
# procedure hence should be 0x1234 after the call above.

gdb_test "print pck.ga" " = \\(access integer\\) 0x1234" \
         "Check that value of GA is 0x1234"
