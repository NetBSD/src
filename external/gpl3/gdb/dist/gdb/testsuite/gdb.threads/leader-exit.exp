# Copyright (C) 2007-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if [target_info exists gdb,nointerrupts] {
    verbose "Skipping leader-exit.exp because of nointerrupts."
    return
}

# Exit of the thread group leader should not break GDB.

standard_testfile
set executable ${testfile}

if {[gdb_compile_pthreads "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
    return -1
}

clean_restart ${executable}

if ![runto_main] {
    return -1
}

gdb_breakpoint [gdb_get_line_number "break-here"]
gdb_continue_to_breakpoint "break-here" ".* break-here .*"

gdb_test "info threads" \
	 "\r\n\[ \t\]*Id\[ \t\]+Target\[ \t\]+Id\[ \t\]+Frame\[ \t\]*\r\n\\* 2 *Thread \[^\r\n\]* at \[^\r\n\]*" \
	 "single thread has been left"

# Test that ctrl-c works even if the leader has exited.

set test "continue for ctrl-c"
gdb_test_multiple "continue" $test {
    -re "Continuing" {
	pass $test
    }
}

sleep 1

send_gdb "\003"

set test "caught interrupt"
gdb_test_multiple "" $test {
    -re "Thread .* received signal SIGINT.*$gdb_prompt $" {
	pass $test
    }
}
