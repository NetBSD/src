# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2016-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Skip this test if target does not support recording.

if { ![supports_process_record] } {
    untested "skipping recording tests"
    return -1
}

load_lib gdb-python.exp

standard_testfile

if [prepare_for_testing "failed to prepare" $testfile $srcfile] { return -1 }

# Skip this test if python is disabled.

if { [skip_python_tests] } {
    untested "skipping python tests"
    return -1
}

if {![runto_main]} {
    return -1
}

with_test_prefix "no or double record" {
    gdb_test "python print(gdb.current_recording())" "None"

    gdb_test_no_output "python gdb.start_recording(\"full\")"
    gdb_test "python gdb.start_recording(\"full\")" \
	".*gdb\.error: The process is already being recorded\..*" \
	"already recording"

    gdb_test_no_output "python gdb.stop_recording()" "first"
    gdb_test "python gdb.stop_recording()" \
	".*gdb\.error: No recording is currently active\..*" "second"
}

with_test_prefix "preopened record full" {
    gdb_test_no_output "record full"
    gdb_test "python print(gdb.current_recording().method)" "full"
    gdb_test "python print(gdb.current_recording().format)" "full"
    gdb_test_no_output "python gdb.stop_recording()"
}
