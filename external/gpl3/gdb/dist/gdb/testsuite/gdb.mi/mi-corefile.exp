# Copyright 2022-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test loading and unloading a core file.

load_lib mi-support.exp
set MIFLAGS "-i=mi"

if {![isnative]} {
    return
}

standard_testfile

if {[build_executable $testfile.exp $testfile $srcfile debug] == -1} {
    untested "failed to compile"
    return -1
}

set corefile [core_find $binfile {}]
if {$corefile == ""} {
    return 0
}

if [mi_gdb_start] {
    return
}

# Test loading and unloading a core file.

proc test_core_file {} {
    mi_delete_breakpoints
    mi_gdb_reinitialize_dir $::srcdir/$::subdir
    mi_gdb_load ${::binfile}

    # This also tests that MI emits paired =thread-created and
    # =thread-exited notifications when loading and unloading the
    # core.  At some point, GDB emitted =thread-created notifications,
    # but not =thread-exited notifications.

    mi_gdb_test \
	"-target-select core $::corefile" \
	[multi_line \
	     "=thread-group-started,id=\"i1\",.*" \
	     "=thread-created,id=\"1\",group-id=\"i1\"" \
	     ".*\\^connected,frame=.*"] \
	"-target-select core \$corefile"

    mi_gdb_test \
	"-target-detach" \
	[multi_line \
	     "=thread-exited,id=\"1\",group-id=\"i1\"" \
	     "=thread-group-exited,id=\"i1\"" \
	     ".*\\^done"]
}

test_core_file
