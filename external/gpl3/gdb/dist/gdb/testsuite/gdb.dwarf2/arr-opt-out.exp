# Copyright 2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test that an array whose bounds are optimized out is itself marked
# as optimized out.

load_lib dwarf.exp
load_lib gdb-python.exp

# This test can only be run on targets which support DWARF-2 and use gas.
require dwarf2_support

standard_testfile .c -dw.S

# Make some DWARF for the test.
set asm_file [standard_output_file $srcfile2]
Dwarf::assemble $asm_file {
    cu {} {
	DW_TAG_compile_unit {
	    {DW_AT_language @DW_LANG_Ada95}
	    {DW_AT_name	    foo.adb}
	    {DW_AT_comp_dir /tmp}
	} {
	    declare_labels integer_label array_label \
		low_bound_label high_bound_label

	    integer_label: DW_TAG_base_type {
		{DW_AT_byte_size 4 DW_FORM_sdata}
		{DW_AT_encoding	 @DW_ATE_signed}
		{DW_AT_name	 integer}
	    }

	    # Note that the bounds don't have a location -- they are
	    # optimized out.  This mimics what it is seen sometimes in
	    # the wild with optimized Ada code.
	    low_bound_label: DW_TAG_variable {
		{DW_AT_name pck__table___L}
		{DW_AT_type :$integer_label}
		{DW_AT_declaration 1 flag}
	    }
	    high_bound_label: DW_TAG_variable {
		{DW_AT_name pck__table___U}
		{DW_AT_type :$integer_label}
		{DW_AT_declaration 1 flag}
	    }

	    array_label: DW_TAG_array_type {
		{DW_AT_name pck__table}
		{DW_AT_type :$integer_label}
	    } {
		DW_TAG_subrange_type {
		    {DW_AT_type	       :$integer_label}
		    {DW_AT_lower_bound :$low_bound_label}
		    {DW_AT_upper_bound :$high_bound_label}
		}
	    }

	    DW_TAG_variable {
		{DW_AT_name the_table}
		{DW_AT_type :$array_label}
		{DW_AT_location {
		    DW_OP_addr [gdb_target_symbol global_array]
		} SPECIAL_expr}
		{DW_AT_external 1 flag}
	    }
	}
    }
}

if {[prepare_for_testing "failed to prepare" ${testfile} \
	 [list $srcfile $asm_file] {nodebug}]} {
    return -1
}

gdb_test_no_output "set language ada"

gdb_test "print the_table" " = <optimized out>"

# The same but in Python.
if {[allow_python_tests]} {
    gdb_test "python print(gdb.parse_and_eval('the_table').is_optimized_out)" \
	True
}
