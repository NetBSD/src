# Copyright 2022-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test generic printing of subrange values.

load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2 and use gas.
if {![dwarf2_support]} {
    return 0
}

standard_testfile main.c -dw.S

# Make some DWARF for the test.
set asm_file [standard_output_file $srcfile2]
Dwarf::assemble $asm_file {
    cu {} {
	compile_unit {{language @DW_LANG_C}} {
	    declare_labels integer_label enum_label subrange_label

            integer_label: DW_TAG_base_type {
                {DW_AT_byte_size 4 DW_FORM_sdata}
                {DW_AT_encoding  @DW_ATE_signed}
                {DW_AT_name      integer}
            }

	    enum_label: DW_TAG_enumeration_type {
		{DW_AT_name E}
		{DW_AT_type :$integer_label}
	    } {
		DW_TAG_enumerator {
		    {DW_AT_name ONE}
		    {DW_AT_const_value 1 DW_FORM_sdata}
		}
		DW_TAG_enumerator {
		    {DW_AT_name TWO}
		    {DW_AT_const_value 2 DW_FORM_sdata}
		}
		DW_TAG_enumerator {
		    {DW_AT_name THREE}
		    {DW_AT_const_value 3 DW_FORM_sdata}
		}
	    }

	    subrange_label: DW_TAG_subrange_type {
		{lower_bound 1 DW_FORM_sdata}
		{upper_bound 2 DW_FORM_sdata}
		{type :$enum_label}
	    }

	    DW_TAG_variable {
		{name rangeval}
		{type :$subrange_label}
		{const_value 2 DW_FORM_udata}
	    }
	}
    }
}

if { [prepare_for_testing "failed to prepare" ${testfile} \
	  [list $srcfile $asm_file] {nodebug}] } {
    return -1
}

gdb_test "print rangeval" " = TWO"
