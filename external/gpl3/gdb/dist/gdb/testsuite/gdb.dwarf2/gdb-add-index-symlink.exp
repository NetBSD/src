# Copyright 2021-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2.
if {![dwarf2_support]} {
    return 0
}

standard_testfile main.c

# First check whether we can actually handle the non-symlink case.
with_test_prefix non-symlink {
    if { [prepare_for_testing "failed to prepare" "${testfile}" \
	      [list ${srcfile}]] } {
	return -1
    }

    require {ensure_gdb_index $binfile} != -1
}

# Regenerate exec without index.
if { [prepare_for_testing "failed to prepare" "${testfile}" \
	  [list ${srcfile}]] } {
    return -1
}

set symlink [file dirname $binfile]/symlink

if { ![file exists $symlink] } {
    file link -symbolic $symlink $binfile
}

if { [ensure_gdb_index $symlink] == -1 } {
    fail "Unable to call gdb-add-index with a symlink to a symfile"
    return -1
}

# Ok, we have a copy of $binfile with an index.
# Restart gdb and verify the index was used.

clean_restart $symlink
gdb_test "mt print objfiles ${testfile}" \
    "(gdb_index|debug_names).*" \
    "index used"
