# Copyright 2020-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Check that GDB can find the variables in a lexical block with a
# DW_FORM_rnglistx DW_AT_ranges field.  This test is intended for DWARF-5,
# compiled with clang++.

standard_testfile .cc

# This test is intended for targets which support DWARF-5.
# Since we pass an explicit -gdwarf-5 to the compiler,
# we let that be the test of whether the target supports it.

if { [prepare_for_testing "failed to prepare" "${testfile}" \
          $srcfile {debug c++ additional_flags=-gdwarf-5 \
                        additional_flags=-O0}] } {
    return -1
}

if ![runto_main] {
    return -1
}

gdb_breakpoint [gdb_get_line_number "break-here"]
gdb_continue_to_breakpoint "break-here" ".* break-here .*"

gdb_test "print curr" "\\\(node \\\*\\\) $hex <node_array>"
gdb_test "print *curr" "= {id = 35, left = $hex <node_array\\+$decimal>, right = $hex <node_array\\+$decimal>, visited = false}"
