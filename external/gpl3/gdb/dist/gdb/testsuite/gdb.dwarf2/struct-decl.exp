# Copyright 2022-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Check that the DWARF reader works when a DW_AT_specification refers
# into a type hierarchy that is marked as a declaration.

load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2 and use gas.
if {![dwarf2_support]} {
    return 0
}

standard_testfile main.c -debug.S

# Set up the DWARF for the test.
set asm_file [standard_output_file $srcfile2]
Dwarf::assemble $asm_file {
    global srcfile

    cu {} {
	DW_TAG_compile_unit {
	    {DW_AT_language @DW_LANG_C_plus_plus}
	    {DW_AT_name     $srcfile}
	    {DW_AT_comp_dir /tmp}

	} {
	    declare_labels origin

	    # The new indexer was ignoring types that were marked as
	    # declarations, even if they could contain methods --
	    # which meant that if a method referred back to them via a
	    # specification, it would get the wrong name.
	    DW_TAG_structure_type {
		{DW_AT_byte_size 8 DW_FORM_sdata}
		{DW_AT_encoding  @DW_ATE_signed}
		{DW_AT_name the_type}
		{DW_AT_declaration 1 DW_FORM_flag_present}
	    } {
		origin: DW_TAG_subprogram {
		    {DW_AT_name "method"}
		    {DW_AT_declaration 1 DW_FORM_flag_present}
		}
	    }

	    # The low and high PC are phony: we just need an address
	    # range that is valid in the program, so we use the main
	    # function's range.
	    DW_TAG_subprogram {
		{DW_AT_specification :$origin}
		{MACRO_AT_range main}
	    }
	}
    }
}

if {[prepare_for_testing "failed to prepare" ${testfile} \
	 [list $srcfile $asm_file] {nodebug}]} {
    return -1
}

gdb_breakpoint "the_type::method" message
