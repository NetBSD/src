# Copyright 2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Check that an empty file name in the .debug_line section doesn't cause
# problems.

load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2 and use gas.
if {![dwarf2_support]} {
    return 0
}

# The .c files use __attribute__.
if ![is_c_compiler_gcc] {
    return 0
}

standard_testfile main.c -dw.S

set asm_file [standard_output_file $srcfile2]
Dwarf::assemble $asm_file {
    declare_labels Llines
    global srcdir subdir srcfile

    cu { version 5 } {
	compile_unit {
	    {language @DW_LANG_C}
	    {name $srcfile}
	    {stmt_list $Llines DW_FORM_sec_offset}
	} {
	    subprogram {
		{external 1 flag}
		{MACRO_AT_func {main}}
	    }
	}
    }

    lines {version 5} Llines {
	include_dir "${srcdir}/${subdir}"
	file_name "" 1
    }
}

if { [build_executable "failed to prepare" ${testfile} \
	  [list $srcfile $asm_file] {nodebug}] } {
    return -1
}

clean_restart

# If there's an ERROR during gdb_load, the assert will produce an UNRESOLVED
# rather than a FAIL.
gdb_assert { [gdb_load $binfile] == 0 }

# But this will produce an actual FAIL, which is more visible than
# ERROR/UNRESOLVED.
gdb_assert { [info exists gdb_spawn_id] }
