# Copyright 2014-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test nameless, artificial classes that may be output by the compiler.
# PR c++/16597

load_lib dwarf.exp

# Do not run in environments which do not support C++.
if {[skip_cplus_tests]} {
    return
}

# This test can only be run on x86-like targets which support DWARF.
if {![dwarf2_support]} {
    return 0
}

if {![istarget "x86_64-*-*"] || ![is_lp64_target]} {
    return 0
}

standard_testfile .S
set csrcfile "${testfile}.cc"

if {[prepare_for_testing "failed to prepare" $testfile $srcfile {nodebug}]} {
    return -1
}

if {![runto_main]} {
    return -1
}

# Set a breakpoint in the lambda in A::doit ().  */
set line [gdb_get_line_number "set breakpoint here" $csrcfile]
gdb_breakpoint $line
gdb_continue_to_breakpoint "continue to breakpoint at line $line"

# Any output is accepted as valid as long as gdb does not segfault.
gdb_test "print a_" ".*"
