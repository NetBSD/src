# Copyright 2012-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Tests for linespec errors with C++.
# Derived from gdb.linespec/ls-errs.exp.

if {[skip_cplus_tests]} {
    return
}

standard_testfile .cc
set exefile $testfile

if {[prepare_for_testing "failed to prepare" $exefile $srcfile {debug c++}]} {
    return -1
}

if {![runto_main]} {
    return 0
}

# Run to a location in the file.
set bp_location [gdb_get_line_number "set breakpoint here"]

gdb_test "break $srcfile:$bp_location" \
    "Breakpoint.*at.* file .*$srcfile, line $bp_location\\." \
    "breakpoint line number in file"

gdb_continue_to_breakpoint "$bp_location"

# Try to access a variable using scope that is a non-existent filename
# with a Windows-style logical drive in the name.
set nonexistent_file C:/does/not/exist.cc
gdb_test "print '$nonexistent_file'::var" \
	 ".*No symbol \"$nonexistent_file\" in current context.*" \
	 "print var from \"$nonexistent_file\""
