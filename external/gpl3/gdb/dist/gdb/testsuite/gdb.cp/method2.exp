# Copyright 2007-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is part of the gdb testsuite

# This tests setting a break in an ambiguous c++ method with
# current_language set to c.

if { [skip_cplus_tests] } { continue }

standard_testfile .cc

if  {[prepare_for_testing "failed to prepare" $testfile $srcfile {debug c++}]} {
     return -1
}

if {![runto_main]} {
    perror "couldn't run to breakpoint"
    continue
}

proc test_break { lang } {
    global gdb_prompt

    gdb_test "set lang $lang" \
	"" \
	"setting language $lang"

    # Menu items should be alphabetical
    set ovlds [lsort {"" "int" "A*"}]
    set items {"cancel" "all"}
    foreach ovld $ovlds {
        lappend items "A::method($ovld)"
    }
    set menu_items {}
    set idx 0
    foreach item $items {
        lappend menu_items ".$idx. .*[string_to_regexp $item]"
        incr idx
    }
    set expect [join $menu_items {.*[\r\n]*}]
    gdb_test_multiple "break A::method" "breaking in method ($lang)" {
        -re $expect {
	    gdb_test "0" \
		"canceled" \
		"breaking in method ($lang)"
	}
    }
}

# We want in this test to double-check the contents of the multiple-choice
# menu that's printed when a breakpoint location is ambiguous.  So we need
# to set multiple-symbols to "ask" first.
gdb_test_no_output "set multiple-symbols ask"

test_break "c"
test_break "c++"

gdb_continue_to_end "continue to end"
