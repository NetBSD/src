# Copyright 2006-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Tests for rvalue reference parameters of types and their subtypes in GDB,
# based on gdb.cp/ref-params.exp.

if {[skip_cplus_tests]} { continue }

standard_testfile .cc

if {[prepare_for_testing $testfile.exp $testfile $srcfile \
    {debug c++ additional_flags="-std=gnu++11"}] == 1} {
    return -1
}

proc gdb_start_again {text prefix} {
    global binfile
    global srcfile

    with_test_prefix $prefix {
	clean_restart $binfile

	runto ${srcfile}:[gdb_get_line_number $text]
    }
}

set t "print value of f1 on (Child&&) in main"
gdb_start_again "marker1 here" $t
gdb_test "print f1(static_cast<Child&&>(Q))" ".* = 40.*" $t

set t "print value of f2 on (Child&&) in main" 
gdb_start_again "marker1 here" $t
gdb_test "print f2(static_cast<Child&&>(Q))" ".* = 40.*" $t

set t "print value of Child&& in f2"
gdb_start_again "marker2 here" $t
gdb_test "print C" ".*id = 42.*" $t

gdb_test "print f1 (static_cast<Child&&> (C))" ".* = 42.*" \
    "print value of f1 on Child&& in f2"

set t "print value of Parent&& in f1"
gdb_start_again "marker3 here" $t
gdb_test "print R" ".*id = 41.*" $t

set t "print f1(static_cast<MultiChild&&>(MQ))"
gdb_start_again "breakpoint MQ here" $t
gdb_test $t ".* = 53"

set t "print mf1(static_cast<MultiChild&&>(MQ))"
gdb_start_again "breakpoint MQ here" $t
gdb_test $t ".* = 106"

set t "print mf2(static_cast<MultiChild&&>(MQ))"
gdb_start_again "breakpoint MQ here" $t
gdb_test $t ".* = 106"
