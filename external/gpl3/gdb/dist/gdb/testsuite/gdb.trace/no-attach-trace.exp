# This testcase is part of GDB, the GNU debugger.

# Copyright 2015-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test that trying to trace without a process attached fails properly.

load_lib trace-support.exp

standard_testfile

if {[prepare_for_testing "failed to prepare" $testfile $srcfile debug]} {
    return -1
}

# Start GDB, but don't run so that we have no process attached.
# Effectively, this tests targets that can do tracing and where GDB
# can start programs ("run"), such as e.g., extended-remote gdbserver.
clean_restart $testfile

if { ![gdb_target_supports_trace] } then {
    unsupported "current target does not support trace"
    return 1
}

gdb_test "trace main" \
    "Tracepoint \[0-9\] at.* file .*$srcfile, line.*" \
    "set tracepoint on main"

gdb_test "tstart" "Target returns error code.*\."

with_test_prefix "after tstart" {
    if ![runto_main] {
	fail "can't run to main, target may have died unexpectedly"
	return -1
    }
}
