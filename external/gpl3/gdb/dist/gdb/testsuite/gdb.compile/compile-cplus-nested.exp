# Copyright 2015-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Nested type tests for GDB's C++ compile feature.

load_lib compile-support.exp

standard_testfile .cc

if {[skip_cplus_tests]} {
    untested "skipping C++ tests"
    return
}

if {[prepare_for_testing $testfile $testfile $srcfile \
	 {debug nowarnings c++}]} {
    return -1
}

if {![runto_main]} {
    return -1
}

gdb_breakpoint [gdb_get_line_number "break here" $srcfile]
gdb_continue_to_breakpoint "testing location"

if {[skip_compile_feature_untested "var = 0"]} {
    return -1
}

CompileExpression::new "var"
CompileExpression::test "i1.a_" 2
CompileExpression::test "i2.a_" 3
CompileExpression::test "A::Inner1 *i1p = &i1; var = i1p->a_;" 2 -explicit
CompileExpression::test "A::Inner1::Inner2 *i2p = &i2; var = i2p->a_;" 3 \
    -explicit
CompileExpression::test "A::Inner1 &r1 = i1; var = r1.a_;" 2 -explicit
CompileExpression::test "A::Inner1::Inner2 &r2 = i2; var = r2.a_;" 3 -explicit
