# sh testcase for mov.w @($imm4x2, $rm), r0 -*- Asm -*-
# mach: all
# as: -isa=shcompact
# ld: -m shelf32

	.include "compact/testutils.inc"

	start
	mov #30, r1
	shll8 r1

	# Build up a distinctive bit pattern.
	mov #1, r0
	shll8 r0
	add #12, r0

	# Preserve r0.
	mov r0, r3

	# Store something first.
	mov.w r0, @(12, r1)

check:
	# Read it back.
	mov.w @(12, r1), r0
	shll16 r0
	shll16 r3
	cmp/eq r0, r3
	bf wrong

okay:
	pass
wrong:
	fail
	
