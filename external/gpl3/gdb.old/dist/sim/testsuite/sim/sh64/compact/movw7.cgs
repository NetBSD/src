# sh testcase for mov.w @${rm}+, $rn -*- Asm -*-
# mach: all
# as: -isa=shcompact
# ld: -m shelf32

	.include "compact/testutils.inc"

	start
	mov #30, r0
	shll8 r0
	# Preserve address.
	mov r0, r7

	# Store something first.
	# Build up a distinctive bit pattern.
	mov #1, r2
	shll8 r2
	add #12, r2
	mov.w r2, @r0
check:
	# Read it back.
	mov.w @r0+, r3
	cmp/eq r2, r3
	bf wrong

inc:	
	# Ensure address is post-incremented.
	add #2, r7
	cmp/eq r0, r7
	bf wrong
	
okay:	
	pass
wrong:
	fail
	
