# sh testcase for mov.l @($imm4x4, $rm), $rn -*- Asm -*-
# mach: all
# as: -isa=shcompact
# ld: -m shelf32

	.include "compact/testutils.inc"

	start
	mov #30, r0
	shll8 r0
	# Build up a distinctive bit pattern.
	mov #1, r2
	shll8 r2
	add #12, r2
	shll8 r2
	add #85, r2
	shll8 r2
	add #170, r2
	# Store something first.
	mov.l r2, @(12, r0)

check:
	# Read it back.
	mov.l @(12, r0), r1
	cmp/eq r2, r1
	bf wrong
	
okay:
	pass
wrong:
	fail
	
