# sh testcase for mov.w @($imm8x2, gbr), r0 -*- Asm -*-
# mach: all
# as: -isa=shcompact
# ld: -m shelf32

	.include "compact/testutils.inc"

	start
	mov #30, r0
	shll8 r0
	ldc r0, gbr

	# Store something first.
	# Build up a distinctive bit pattern.
	mov #1, r0
	shll8 r0
	add #12, r0
	# Preserve r0.
	mov r0, r7
	mov.w r0, @(12, gbr)

check:	
	# Load it back.
	mov.w @(12, gbr), r0
	shll16 r0
	shll16 r7
	cmp/eq r0, r7
	bf wrong

okay:
	pass
wrong:
	fail
