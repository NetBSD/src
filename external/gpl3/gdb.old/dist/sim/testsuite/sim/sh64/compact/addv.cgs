# sh testcase for addv $rm, $rn -*- Asm -*-
# mach: all
# as: -isa=shcompact
# ld: -m shelf32

	.include "compact/testutils.inc"

	start
zero:
	mov #0, r0
	mov #0, r1
	addv r0, r1
	# Assert !T and #0.
	bt wrong
	assert r1, #0

one:
	mov #0, r0
	mov #1, r1
	addv r0, r1
	# Assert !T and #1.
	bt wrong
	assert r1, #1

large:
	# Produce MAXINT in R0.
	mov #0, r0
	not r0, r0
	shlr r0

	# Put #3 into R1.
	mov #3, r1

	# Add them and overflow.
	addv r0, r1

	# Assert T and overflowed value.
	bf wrong
	mov #1, r7
	rotr r7
	add #2, r7
	cmp/eq r1, r7
	bf wrong

okay:
	pass
wrong:
	fail
