# frv testcase for cmmulhu $GRi,$GRj,$GRk,$CCi,$cond
# mach: all

	.include "testutils.inc"

	start

	.global cmmulhu
cmmulhu:
	set_spr_immed	0x1b1b,cccr

	set_fr_iimmed  	3,2,fr7		; multiply small numbers
	set_fr_iimmed  	2,3,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,1
	test_accg_immed 	0,accg0
	test_acc_immed 	6,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	6,acc1

	set_fr_iimmed  	1,2,fr7		; multiply by 1
	set_fr_iimmed  	2,1,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,1
	test_accg_immed 	0,accg0
	test_acc_immed 	2,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	2,acc1

	set_fr_iimmed  	0,2,fr7		; multiply by 0
	set_fr_iimmed  	2,0,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,1
	test_accg_immed 	0,accg0
	test_acc_immed 	0,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	0,acc1

	set_fr_iimmed 	0x3fff,2,fr7	; 15 bit result
	set_fr_iimmed  	2,0x3fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,1
	test_accg_immed 	0,accg0
	test_acc_limmed	0x0000,0x7ffe,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0x0000,0x7ffe,acc1

	set_fr_iimmed  	0x4000,2,fr7	; 16 bit result
	set_fr_iimmed  	2,0x4000,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,1
	test_accg_immed 	0,accg0
	test_acc_limmed	0x0000,0x8000,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0x0000,0x8000,acc1

	set_fr_iimmed  	0x8000,2,fr7	; 17 bit result
	set_fr_iimmed  	2,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,1
	test_accg_immed 	0,accg0
	test_acc_immed 	0x00010000,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	0x00010000,acc1

	set_fr_iimmed  	0x7fff,0x7fff,fr7	; max positive result
	set_fr_iimmed  	0x7fff,0x7fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,1
	test_accg_immed 	0,accg0
	test_acc_immed 	0x3fff0001,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	0x3fff0001,acc1

	set_fr_iimmed  	0x8000,0x8000,fr7	; max positive result
	set_fr_iimmed  	0x8000,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,1
	test_accg_immed 	0,accg0
	test_acc_limmed	0x4000,0x0000,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0x4000,0x0000,acc1

	set_fr_iimmed  	0xffff,0xffff,fr7	; max positive result
	set_fr_iimmed  	0xffff,0xffff,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,1
	test_accg_immed 	0,accg0
	test_acc_limmed	0xfffe,0x0001,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0xfffe,0x0001,acc1

	set_fr_iimmed  	3,2,fr7		; multiply small numbers
	set_fr_iimmed  	2,3,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,0
	test_accg_immed 	0,accg0
	test_acc_immed 	6,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	6,acc1

	set_fr_iimmed  	1,2,fr7		; multiply by 1
	set_fr_iimmed  	2,1,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,0
	test_accg_immed 	0,accg0
	test_acc_immed 	2,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	2,acc1

	set_fr_iimmed  	0,2,fr7		; multiply by 0
	set_fr_iimmed  	2,0,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,0
	test_accg_immed 	0,accg0
	test_acc_immed 	0,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	0,acc1

	set_fr_iimmed 	0x3fff,2,fr7	; 15 bit result
	set_fr_iimmed  	2,0x3fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,0
	test_accg_immed 	0,accg0
	test_acc_limmed	0x0000,0x7ffe,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0x0000,0x7ffe,acc1

	set_fr_iimmed  	0x4000,2,fr7	; 16 bit result
	set_fr_iimmed  	2,0x4000,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,0
	test_accg_immed 	0,accg0
	test_acc_limmed	0x0000,0x8000,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0x0000,0x8000,acc1

	set_fr_iimmed  	0x8000,2,fr7	; 17 bit result
	set_fr_iimmed  	2,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,0
	test_accg_immed 	0,accg0
	test_acc_immed 	0x00010000,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	0x00010000,acc1

	set_fr_iimmed  	0x7fff,0x7fff,fr7	; max positive result
	set_fr_iimmed  	0x7fff,0x7fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,0
	test_accg_immed 	0,accg0
	test_acc_immed 	0x3fff0001,acc0
	test_accg_immed 	0,accg1
	test_acc_immed 	0x3fff0001,acc1

	set_fr_iimmed  	0x8000,0x8000,fr7	; max positive result
	set_fr_iimmed  	0x8000,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,0
	test_accg_immed 	0,accg0
	test_acc_limmed	0x4000,0x0000,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0x4000,0x0000,acc1

	set_fr_iimmed  	0xffff,0xffff,fr7	; max positive result
	set_fr_iimmed  	0xffff,0xffff,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,0
	test_accg_immed 	0,accg0
	test_acc_limmed	0xfffe,0x0001,acc0
	test_accg_immed 	0,accg1
	test_acc_limmed	0xfffe,0x0001,acc1

	set_accg_immed 	0x00000011,accg0
	set_acc_immed 	0x11111111,acc0
	set_accg_immed 	0x00000022,accg1
	set_acc_immed 	0x22222222,acc1
	set_fr_iimmed  	3,2,fr7		; multiply small numbers
	set_fr_iimmed  	2,3,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	1,2,fr7		; multiply by 1
	set_fr_iimmed  	2,1,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0,2,fr7		; multiply by 0
	set_fr_iimmed  	2,0,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed 	0x3fff,2,fr7	; 15 bit result
	set_fr_iimmed  	2,0x3fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc0,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x4000,2,fr7	; 16 bit result
	set_fr_iimmed  	2,0x4000,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,2,fr7	; 17 bit result
	set_fr_iimmed  	2,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x7fff,0x7fff,fr7	; max positive result
	set_fr_iimmed  	0x7fff,0x7fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,0x8000,fr7	; max positive result
	set_fr_iimmed  	0x8000,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0xffff,0xffff,fr7	; max positive result
	set_fr_iimmed  	0xffff,0xffff,fr8
	cmmulhu      	fr7,fr8,acc0,cc4,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_accg_immed 	0x00000011,accg0
	set_acc_immed 	0x11111111,acc0
	set_accg_immed 	0x00000022,accg1
	set_acc_immed 	0x22222222,acc1
	set_fr_iimmed  	3,2,fr7		; multiply small numbers
	set_fr_iimmed  	2,3,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	1,2,fr7		; multiply by 1
	set_fr_iimmed  	2,1,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0,2,fr7		; multiply by 0
	set_fr_iimmed  	2,0,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed 	0x3fff,2,fr7	; 15 bit result
	set_fr_iimmed  	2,0x3fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc1,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x4000,2,fr7	; 16 bit result
	set_fr_iimmed  	2,0x4000,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,2,fr7	; 17 bit result
	set_fr_iimmed  	2,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x7fff,0x7fff,fr7	; max positive result
	set_fr_iimmed  	0x7fff,0x7fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,0x8000,fr7	; max positive result
	set_fr_iimmed  	0x8000,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0xffff,0xffff,fr7	; max positive result
	set_fr_iimmed  	0xffff,0xffff,fr8
	cmmulhu      	fr7,fr8,acc0,cc5,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_accg_immed 	0x00000011,accg0
	set_acc_immed 	0x11111111,acc0
	set_accg_immed 	0x00000022,accg1
	set_acc_immed 	0x22222222,acc1
	set_fr_iimmed  	3,2,fr7		; multiply small numbers
	set_fr_iimmed  	2,3,fr8
	cmmulhu      	fr7,fr8,acc0,cc2,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	1,2,fr7		; multiply by 1
	set_fr_iimmed  	2,1,fr8
	cmmulhu      	fr7,fr8,acc0,cc2,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0,2,fr7		; multiply by 0
	set_fr_iimmed  	2,0,fr8
	cmmulhu      	fr7,fr8,acc0,cc2,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed 	0x3fff,2,fr7	; 15 bit result
	set_fr_iimmed  	2,0x3fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc2,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x4000,2,fr7	; 16 bit result
	set_fr_iimmed  	2,0x4000,fr8
	cmmulhu      	fr7,fr8,acc0,cc6,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,2,fr7	; 17 bit result
	set_fr_iimmed  	2,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc6,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x7fff,0x7fff,fr7	; max positive result
	set_fr_iimmed  	0x7fff,0x7fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc6,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,0x8000,fr7	; max positive result
	set_fr_iimmed  	0x8000,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc6,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0xffff,0xffff,fr7	; max positive result
	set_fr_iimmed  	0xffff,0xffff,fr8
	cmmulhu      	fr7,fr8,acc0,cc6,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_accg_immed 	0x00000011,accg0
	set_acc_immed 	0x11111111,acc0
	set_accg_immed 	0x00000022,accg1
	set_acc_immed 	0x22222222,acc1
	set_fr_iimmed  	3,2,fr7		; multiply small numbers
	set_fr_iimmed  	2,3,fr8
	cmmulhu      	fr7,fr8,acc0,cc3,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	1,2,fr7		; multiply by 1
	set_fr_iimmed  	2,1,fr8
	cmmulhu      	fr7,fr8,acc0,cc3,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0,2,fr7		; multiply by 0
	set_fr_iimmed  	2,0,fr8
	cmmulhu      	fr7,fr8,acc0,cc3,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed 	0x3fff,2,fr7	; 15 bit result
	set_fr_iimmed  	2,0x3fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc3,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x4000,2,fr7	; 16 bit result
	set_fr_iimmed  	2,0x4000,fr8
	cmmulhu      	fr7,fr8,acc0,cc7,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,2,fr7	; 17 bit result
	set_fr_iimmed  	2,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc7,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x7fff,0x7fff,fr7	; max positive result
	set_fr_iimmed  	0x7fff,0x7fff,fr8
	cmmulhu      	fr7,fr8,acc0,cc7,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0x8000,0x8000,fr7	; max positive result
	set_fr_iimmed  	0x8000,0x8000,fr8
	cmmulhu      	fr7,fr8,acc0,cc7,0
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	set_fr_iimmed  	0xffff,0xffff,fr7	; max positive result
	set_fr_iimmed  	0xffff,0xffff,fr8
	cmmulhu      	fr7,fr8,acc0,cc7,1
	test_accg_immed 	0x00000011,accg0
	test_acc_immed 	0x11111111,acc0
	test_accg_immed 	0x00000022,accg1
	test_acc_immed 	0x22222222,acc1

	pass
