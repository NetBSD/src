# frv parallel testcase for stqc $CPRk,@($GRi,$GRj)
# mach: frv
# as(frv): -mcpu=frv

	.include "testutils.inc"

	start

	.global stqc
stqc:
	set_mem_limmed	0xbeef,0xdead,sp
	inc_gr_immed	-4,sp
	set_mem_limmed	0xdead,0xbeef,sp
	inc_gr_immed	-4,sp
	set_mem_limmed	0xdead,0xdead,sp
	inc_gr_immed	-4,sp
	set_mem_limmed	0xbeef,0xbeef,sp
	set_gr_immed	0,gr7
	set_cpr_limmed	0xbeef,0xdead,cpr8
	set_cpr_limmed	0xdead,0xbeef,cpr9
	set_cpr_limmed	0xdead,0xdead,cpr10
	set_cpr_limmed	0xbeef,0xbeef,cpr11
	stqc		cpr8,@(sp,gr7)		; non parallel
	test_mem_limmed	0xbeef,0xdead,sp
	inc_gr_immed	4,sp
	test_mem_limmed	0xdead,0xbeef,sp
	inc_gr_immed	4,sp
	test_mem_limmed	0xdead,0xdead,sp
	inc_gr_immed	4,sp
	test_mem_limmed	0xbeef,0xbeef,sp

	set_mem_limmed	0xbeef,0xdead,sp
	inc_gr_immed	-4,sp
	set_mem_limmed	0xdead,0xbeef,sp
	inc_gr_immed	-4,sp
	set_mem_limmed	0xdead,0xdead,sp
	inc_gr_immed	-4,sp
	set_mem_limmed	0xbeef,0xbeef,sp
	set_gr_immed	0,gr7
	set_cpr_limmed	0xbeef,0xdead,cpr8
	set_cpr_limmed	0xdead,0xbeef,cpr9
	set_cpr_limmed	0xdead,0xdead,cpr10
	set_cpr_limmed	0xbeef,0xbeef,cpr11
	stqc.p		cpr8,@(sp,gr7)		; parallel
	addi		sp,4,sp
	subi		sp,4,sp
	ldqc		@(sp,gr7),cpr12
	test_mem_limmed	0xbeef,0xdead,sp	; memory is set
	inc_gr_immed	4,sp
	test_mem_limmed	0xdead,0xbeef,sp
	inc_gr_immed	4,sp
	test_mem_limmed	0xdead,0xdead,sp
	inc_gr_immed	4,sp
	test_mem_limmed	0xbeef,0xbeef,sp
	test_cpr_limmed	0xbeef,0xdead,cpr12
	test_cpr_limmed	0xdead,0xbeef,cpr13
	test_cpr_limmed	0xdead,0xdead,cpr14
	test_cpr_limmed	0xbeef,0xbeef,cpr15

	pass
