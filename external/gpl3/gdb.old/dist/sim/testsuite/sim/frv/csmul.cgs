# frv testcase for csmul $GRi,$GRj,$GRk,$CCi,$cond
# mach: all

	.include "testutils.inc"

	start

	.global csmul
csmul:
	set_spr_immed	0x1b1b,cccr

	; Positive operands
	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	6,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_immed   	2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x3fff,0xffff,gr7	; 31 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_limmed	0x7fff,0xfffe,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	4,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	1,gr8
	test_gr_limmed	0x0000,0x0000,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max positive result
	set_gr_limmed	0x7fff,0xffff,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed 	0x3fff,0xffff,gr8
	test_gr_immed  	0x00000001,gr9

	; Mixed operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	-1,gr8
	test_gr_immed  	-6,gr9

	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	-1,gr8
	test_gr_immed  	-6,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	-1,gr8
	test_gr_immed  	-2,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	-1,gr8
	test_gr_immed  	-2,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed  	0x2000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0xbfff,0xfffe,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	set_gr_limmed	0x4000,0x0001,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0x7fff,0xfffe,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0x0000,0x0000,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max negative result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed	0xc000,0x0000,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	; Negative operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	6,gr9

	set_gr_immed   	-1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	-1,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_limmed	0xc000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_limmed	0x7fff,0xfffe,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	0,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_immed  	1,gr8
	test_gr_immed  	0x00000000,gr9

	set_gr_limmed	0x8000,0x0001,gr7	; almost max positive result
	set_gr_limmed	0x8000,0x0001,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed	0x3fff,0xffff,gr8
	test_gr_immed  	0x00000001,gr9


	set_gr_limmed	0x8000,0x0000,gr7	; max positive result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc4,1
	test_gr_limmed	0x4000,0x0000,gr8
	test_gr_immed  	0x00000000,gr9

	; Positive operands
	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	6,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_immed   	2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x3fff,0xffff,gr7	; 31 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_limmed	0x7fff,0xfffe,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	4,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	1,gr8
	test_gr_limmed	0x0000,0x0000,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max positive result
	set_gr_limmed	0x7fff,0xffff,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed 	0x3fff,0xffff,gr8
	test_gr_immed  	0x00000001,gr9

	; Mixed operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	-1,gr8
	test_gr_immed  	-6,gr9

	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	-1,gr8
	test_gr_immed  	-6,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	-1,gr8
	test_gr_immed  	-2,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	-1,gr8
	test_gr_immed  	-2,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed  	0x2000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0xbfff,0xfffe,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	set_gr_limmed	0x4000,0x0001,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0x7fff,0xfffe,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed	0xffff,0xffff,gr8
	test_gr_limmed	0x0000,0x0000,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max negative result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed	0xc000,0x0000,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	; Negative operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	6,gr9

	set_gr_immed   	-1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	-1,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_immed  	2,gr9

	set_gr_limmed	0xc000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_limmed	0x7fff,0xfffe,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	0,gr8
	test_gr_limmed	0x8000,0x0000,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_immed  	1,gr8
	test_gr_immed  	0x00000000,gr9

	set_gr_limmed	0x8000,0x0001,gr7	; almost max positive result
	set_gr_limmed	0x8000,0x0001,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed	0x3fff,0xffff,gr8
	test_gr_immed  	0x00000001,gr9


	set_gr_limmed	0x8000,0x0000,gr7	; max positive result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc5,0
	test_gr_limmed	0x4000,0x0000,gr8
	test_gr_immed  	0x00000000,gr9

	; Positive operands
	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x3fff,0xffff,gr7	; 31 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	4,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max positive result
	set_gr_limmed	0x7fff,0xffff,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_limmed 	0x7fff,0xffff,gr8
	test_gr_immed  	0,gr9

	; Mixed operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed  	0x2000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0001,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed	-4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max negative result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed	0,gr9

	; Negative operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	-1,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-1,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0xc000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_immed  	-4,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x8000,0x0001,gr7	; almost max positive result
	set_gr_limmed	0x8000,0x0001,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_limmed	0x8000,0x0001,gr8
	test_gr_immed  	0,gr9


	set_gr_limmed	0x8000,0x0000,gr7	; max positive result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc4,0
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed  	0,gr9

	; Positive operands
	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x3fff,0xffff,gr7	; 31 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	4,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max positive result
	set_gr_limmed	0x7fff,0xffff,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_limmed 	0x7fff,0xffff,gr8
	test_gr_immed  	0,gr9

	; Mixed operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed  	0x2000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0001,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed	-4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max negative result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed	0,gr9

	; Negative operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	-1,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-1,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0xc000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_immed  	-4,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x8000,0x0001,gr7	; almost max positive result
	set_gr_limmed	0x8000,0x0001,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_limmed	0x8000,0x0001,gr8
	test_gr_immed  	0,gr9


	set_gr_limmed	0x8000,0x0000,gr7	; max positive result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc5,1
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed  	0,gr9

	; Positive operands
	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x3fff,0xffff,gr7	; 31 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	4,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max positive result
	set_gr_limmed	0x7fff,0xffff,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_limmed 	0x7fff,0xffff,gr8
	test_gr_immed  	0,gr9

	; Mixed operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed  	0x2000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0001,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed	-4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max negative result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed	0,gr9

	; Negative operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	-1,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-1,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0xc000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_immed  	-4,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x8000,0x0001,gr7	; almost max positive result
	set_gr_limmed	0x8000,0x0001,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_limmed	0x8000,0x0001,gr8
	test_gr_immed  	0,gr9


	set_gr_limmed	0x8000,0x0000,gr7	; max positive result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc6,0
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed  	0,gr9

	; Positive operands
	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x3fff,0xffff,gr7	; 31 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	4,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max positive result
	set_gr_limmed	0x7fff,0xffff,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_limmed 	0x7fff,0xffff,gr8
	test_gr_immed  	0,gr9

	; Mixed operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	1,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	1,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	0,gr7		; multiply by 0
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 0
	set_gr_immed   	0,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	0,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed  	0x2000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0001,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x4000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed	-4,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0x7fff,0xffff,gr7	; max negative result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed	0,gr9

	; Negative operands
	set_gr_immed   	-3,gr7		; multiply small numbers
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-1,gr7		; multiply by 1
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-2,gr8
	test_gr_immed  	0,gr9

	set_gr_immed   	-2,gr7		; multiply by 1
	set_gr_immed   	-1,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-1,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0xc000,0x0001,gr7	; 31 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 32 bit result
	set_gr_immed   	-2,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-2,gr8
	test_gr_immed	0,gr9

	set_gr_limmed	0xc000,0x0000,gr7	; 33 bit result
	set_gr_immed   	-4,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_immed  	-4,gr8
	test_gr_immed  	0,gr9

	set_gr_limmed	0x8000,0x0001,gr7	; almost max positive result
	set_gr_limmed	0x8000,0x0001,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_limmed	0x8000,0x0001,gr8
	test_gr_immed  	0,gr9


	set_gr_limmed	0x8000,0x0000,gr7	; max positive result
	set_gr_limmed	0x8000,0x0000,gr8
	csmul      	gr7,gr8,gr8,cc7,1
	test_gr_limmed	0x8000,0x0000,gr8
	test_gr_immed  	0,gr9

	pass
