# frv testcase for xor $GRi,$GRj,$GRk
# mach: all

	.include "testutils.inc"

	start

	.global xor
xor:
	set_gr_limmed   0xaaaa,0xaaaa,gr7
	set_gr_limmed   0x5555,0x5555,gr8
	set_icc         0x07,0		; Set mask opposite of expected
	xor      	gr7,gr8,gr8
	test_icc	0 1 1 1 icc0
	test_gr_limmed 	0xffff,0xffff,gr8

	set_gr_immed	0x00000000,gr7
	set_gr_immed	0x00000000,gr8
	set_icc         0x08,0		; Set mask opposite of expected
	xor		gr7,gr8,gr8
	test_icc	1 0 0 0 icc0
	test_gr_immed  	0x00000000,gr8

	set_gr_limmed   0xaaaa,0xaaaa,gr7
	set_gr_limmed   0xaaaa,0xaaaa,gr8
	set_icc         0x0b,0		; Set mask opposite of expected
	xor      	gr7,gr8,gr8
	test_icc	1 0 1 1 icc0
	test_gr_immed  	0x00000000,gr8

	set_gr_limmed   0xdead,0x0000,gr7
	set_gr_limmed   0x0000,0xbeef,gr8
	set_icc         0x05,0		; Set mask opposite of expected
	xor		gr7,gr8,gr8
	test_icc	0 1 0 1 icc0
	test_gr_limmed  0xdead,0xbeef,gr8

	pass
