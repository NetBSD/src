2021-07-01  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (RESERVED_CFLAGS): Delete.
	* configure.ac: Delete sim-reserved-bits.
	* std-config.h (WITH_RESERVED_BITS): Delete.
	* configure: Regenerate.

2021-06-30  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Add -W flags from ../m4/sim_ac_option_warnings.m4.
	Run compile tests against each flag.
	* configure: Regenerate.

2021-06-29  Mike Frysinger  <vapier@gentoo.org>

	* main.c (sim_io_error): Add comment
	* sim_calls.c (sim_io_error): Likewise.  Change "" to " ".
	(error): Likewise.

2021-06-20  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (INLINE_CFLAGS): Change to $(SIM_INLINE).
	* configure.ac: Delete sim-inline logic.
	* configure: Regenerate.

2021-06-19  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Replace ALL_INLINE with ALL_C_INLINE and
	PSIM_INLINE_LOCALS with INLINE_LOCALS.
	* inline.h: Likewise.
	* options.c: Likewise.
	* std-config.h: Likewise.  Include sim-inline.h explicitly.
	(REVEAL_MODULE): Define to H_REVEALS_MODULE.
	(INLINE_MODULE): Define to C_REVEALS_MODULE.
	(PSIM_INLINE_LOCALS): Delete.
	(ALL_INLINE): Delete.
	* configure: Regenerate.

2021-06-19  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in: Move intl vars to ../arch-subdir.mk.in.
	* configure.ac: Delete ZW_GNU_GETTEXT_SISTER_DIR call.
	* config.in, configure: Regenerate.

2021-06-19  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in: Delete toolchain vars.
	* configure.ac: Likewise.
	* configure: Regenerate.

2021-06-19  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (LIBS): Add $(COMMON_LIBS).
	(ZLIB): Use $(zlibdir).
	* configure.ac: Delete AM_ZLIB & AC_PLUGINS calls.
	* aclocal.m4, config.in, configure: Regenerate.

2021-06-18  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (WERROR_CFLAGS): Delete.
	* configure.ac: Delete werror configure option.
	* configure: Regenerate.

2021-06-18  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in: Include ../arch-subdir.mk.

2021-06-18  Mike Frysinger  <vapier@gentoo.org>

	* sim-main.h: Delete sim-signal.h include.

2021-06-17  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (ENDIAN_CFLAGS): Delete.
	* configure.ac: Delete sim-endian.
	* configure: Regenerate.

2021-06-17  Mike Frysinger  <vapier@gentoo.org>

	* igen.c (gen_semantics_h): Rename PAGE_SIZE to MPC860C0_PAGE_SIZE.
	* ppc-instructions: Likewise.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete AC_EXEEXT call.
	* configure: Regenerate.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete sim-assert logic.
	* config.in, configure: Regenerate.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* altivec.igen: Change BIG_ENDIAN to BFD_ENDIAN_BIG.
	* configure.ac: Change LITTLE_ENDIAN, BIG_ENDIAN, & 0 to
	BFD_ENDIAN_LITTLE, BFD_ENDIAN_BIG, & BFD_ENDIAN_UNKNOWN respectively.
	* emul_generic.c: Likewise.
	* options.c (options_byte_order): Likewise.  Change int to bfd_endian.
	* psim.c (current_target_byte_order): Change type to bfd_endian.
	(psim_create): Change LITTLE_ENDIAN & BIG_ENDIAN to BFD_ENDIAN_LITTLE
	& BFD_ENDIAN_BIG respectively.
	* sim-endian-n.h: Likewise.
	* sim-endian.c: Likewise.
	* std-config.h: Include bfd.h.
	(LITTLE_ENDIAN, BIG_ENDIAN): Delete.
	(HOST_BYTE_ORDER): Change to BFD_ENDIAN_BIG & BFD_ENDIAN_LITTLE.
	(WITH_TARGET_BYTE_ORDER): Change to BFD_ENDIAN_UNKNOWN.
	(current_target_byte_order): Change type to bfd_endian.
	(CURRENT_TARGET_BYTE_ORDER): Compare to BFD_ENDIAN_UNKNOWN.
	* vm.c (vm_synchronize_context): Change LITTLE_ENDIAN & BIG_ENDIAN to
	BFD_ENDIAN_LITTLE & BFD_ENDIAN_BIG respectively.
	* configure: Regenerate.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* basics.h (__attribute__): Delete.
	* misc.h (__attribute__): Likewise.
	Include ansidecl.h.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* cpu.h: Include ansidecl.h.
	(cpu_error): Change __attribute__ ((format (printf... to
	ATTRIBUTE_PRINTF_3.
	* device.h (device_error): Change __attribute__ ((format (printf...
	to ATTRIBUTE_PRINTF_2.
	* lf.h: Include ansidecl.h.
	(lf_printf): Change __attribute__ ((format (printf... to
	ATTRIBUTE_PRINTF_2.
	* sim_callbacks.h (sim_io_printf_filtered): Change __attribute__
	((format (printf... to ATTRIBUTE_PRINTF_1.
	* tree.h (tree_parse): Change __attribute__ ((format (printf... to
	ATTRIBUTE_PRINTF_2.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* double.c: Include ansidecls.h.
	* dp-bit.c: Change __attribute__ ((packed)) to ATTRIBUTE_PACKED.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* basics.h (NORETURN): Delete.
	* sim_callbacks.h: Include ansidecl.h.  Change NORETURN to
	ATTRIBUTE_NORETURN.
	* sim_calls.c: Likewise.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* basics.h (UNUSED): Delete.
	* gen-icache.c (print_icache_extraction): Change UNUSED to
	ATTRIBUTE_UNUSED.
	* idecode_expression.h: Likewise.  Include ansidecl.h.
	* inline.h: Likewise.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* basics.h: Delete CONCAT* and XCONCAT* macros.
	* corefile.c: Include symcat.h.
	* idecode_fields.h: Likewise.
	* sim-endian.c: Likewise.
	* vm.c: Likewise.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* device.h (device_add_boolean_property): Rename bool arg to boolean.

2021-06-16  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (HOSTENDIAN_CFLAGS): Delete.
	* configure.ac: Delete sim-hostendian logic.
	* altivec_registers.h (WITH_HOST_BYTE_ORDER): Rename to ...
	(HOST_BYTE_ORDER): ... this.
	* options.c: Likewise.
	* sim-endian.c: Likewise.
	* psim.c (current_host_byte_order): Delete.
	(CURRENT_HOST_BYTE_ORDER): Rename to ...
	(HOST_BYTE_ORDER): ... this.
	* sim-endian-n.h: Likewise.
	* sim-endian.h: Delete all custom endian include & define logic.
	* std-config.h (WITH_HOST_BYTE_ORDER): Delete.
	(LITTLE_ENDIAN): Define fallback.
	(BIG_ENDIAN): Likewise.
	(HOST_BYTE_ORDER): Define based on WORDS_BIGENDIAN.
	(current_host_byte_order, CURRENT_HOST_BYTE_ORDER): Delete.
	* config.in, configure: Regenerate.

2021-06-13  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (COMMON_OBJS_NAMES, +COMMON_OBJS): New variables.
	(LIB_OBJ): Replace version.o with $(COMMON_OBJS).
	(version.c, version.o): Delete rules.

2021-06-12  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in: Add $(EXEEXT) to run and psim.

2021-06-12  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in: Delete ALIGNMENT_CFLAGS.
	* configure.ac: Delete sim-alignment.
	* configure: Regenerate.

2021-06-12  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete calls to ACX_PKGVERSION & ACX_BUGURL.
	* aclocal.m4, config.in, configure: Regenerate.

2021-06-12  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete sim-stdio & sim-trace.
	* debug.h: Define TRACE_* defines.
	* config.in, configure: Regenerate.

2021-06-12  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete AC_STRUCT_*, AC_TYPE_*, AC_CHECK_FUNCS,
	AC_CHECK_HEADERS, and AC_HEADER_DIRENT calls.
	* config.in, configure: Regenerate.

2021-06-12  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete sim-env configure option.
	* defs.h: Include ../config.h.  Undefine PACKAGE* defines.
	* std-config.h (ALL_ENVIRONMENT): Define.
	* config.in, configure: Regenerate.

2021-06-09  Mike Frysinger  <vapier@gentoo.org>

	* basics.h (NULL): Delete.
	* gen-itable.c (NULL): Likewise.
	* gen-model.c (NULL): Likewise.
	* ld-cache.c (NULL): Likewise.
	* ld-decode.c (NULL): Likewise.

2021-05-29  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac (WERROR_CFLAGS): Add -Wno-format for mingw32 hosts.
	* configure: Regenerate.

2021-05-29  Mike Frysinger  <vapier@gentoo.org>

	* emul_generic.c (emul_write_status): Rename errno to err.
	(emul_write2_status): Likewise.
	* emul_generic.h (emul_write_status, emul_write2_status): Likewise.
	* emul_netbsd.c (errno): Delete.
	* emul_unix.c (errno): Delete.

2021-05-29  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (INCLUDES): Add -I../..

2021-05-16  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (gentmap): Pass -DUSE_CONFIG_H.
	* basics.h, debug.c, filter_filename.c, inline.c, sim-endian.c,
	words.h: Replace config.h include with defs.h.
	* defs.h: New file.

2021-05-15  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (WERROR_CFLAGS): Define.
	(STD_CFLAGS): Add $(WERROR_CFLAGS).
	* configure.ac: Add --enable-werror.
	* device.c (device_full_name): Delete full_name variable.
	(device_clean): Delete system variable.
	* emul_chirp.c (chirp_emul_getprop): Cast vars to unsigned long.
	(chirp_emul_seek): Likewise.
	* hw_glue.c (hw_glue_init_address): Use %zu format.
	* hw_ide.c (hw_ide_io_read_buffer): Cast vars to unsigned long.
	(hw_ide_io_write_buffer): Likewise.
	* hw_init.c (update_for_binary_section): Cast vars to unsigned long.
	* hw_phb.c (hw_phb_dma_read_buffer): Likewise.
	(hw_phb_dma_write_buffer): Likewise.
	* hw_shm.c (hw_shm_init_data): Delete d variable.
	(hw_shm_attach_address_callback): Delete shm variable.
	* igen.c (gen_semantics_c): Include tree.h.
	* interrupts.c (alignment_interrupt): Cast vars to unsigned long.
	* ld-insn.c (dump_insn_field): Cast vars to unsigned long.
	* main.c (main): Add const to argv.
	* options.c (print_options): Cast var to int.
	* ppc-instructions: Add %s to format.  Delete shifted variable.  Add
	parenthesis to binary operations.
	* psim.c (find_arg): Add const to return and argv.
	(is_num): Add const to string.
	(psim_options): Add const to return and argv, and p & param.
	(psim_command): Add const to argv, device, and media.
	(psim_stack): Add const to argv and envp.
	* psim.h: Add const to psim_options, psim_command, and psim_stack.
	* tree.c (parse_reg_property): Delete & from sizeof.
	* vm.c (om_virtual_to_real): Const vars to long.
	* vm_n.h (vm_data_map_read_N): Change format to %zu.
	(vm_data_map_write_N): Likewise.
	* configure: Regenerate.

2021-05-14  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in: Update path.
	* gdb-sim.c: Update include path.
	* main.c: Likewise.
	* psim.h: Likewise.
	* sim_calls.c: Likewise.

2021-04-22  Tom Tromey  <tom@tromey.com>

	* mon.c: Update includes.
	* emul_unix.c: Update includes.
	(do_unix_gettimeofday): Update condition.

2021-04-22  Tom Tromey  <tom@tromey.com>

	* Makefile.in (stamp-vals, stamp-map): New targets.
	(targ-vals.h, targ-map.c): Update.
	(clean): Remove files.

2021-04-08  Tom Tromey  <tom@tromey.com>

	* emul_unix.c: Include time.h.

2021-04-08  Simon Marchi  <simon.marchi@polymtl.ca>

	* Makefile.in: Set ASAN_OPTIONS when running igen.

2021-04-03  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (install): Install as run-ppc when not the primary arch.
	(install-strip): Likewise.

2021-03-13  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (BUILD_LDFLAGS): Rename to ...
	(LDFLAGS_FOR_BUILD): ... this.
	(LINK_FOR_BUILD): Change BUILD_LDFLAGS to LDFLAGS_FOR_BUILD.

2021-03-13  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (COMPILE_FOR_BUILD, LINK_FOR_BUILD): Define.
	Change $(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) to
	$(LINK_FOR_BUILD).  Change $(CC_FOR_BUILD) $(BUILD_CFLAGS) to
	$(COMPILE_FOR_BUILD).

2021-03-08  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (gentmap, dgen, igen, tmp-filter, tmp-ld-decode,
	tmp-ld-cache, tmp-ld-insn): Delete $(BUILD_LIBS).

2021-03-07  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (check): Define.

2021-02-13  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Replace sinclude with AC_CONFIG_MACRO_DIRS.
	* aclocal.m4, configure: Regenerate.

2021-02-06  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (STD_CFLAGS): Delete $(HDEFINES) $(TDEFINES).
	(NOWARN_CFLAGS): Likewise.
	(HDEFINES, TDEFINES): Delete.
	* configure.ac: Delete AC_SUBST(HDEFINES) and bfd/configure.host
	sourcing.
	* configure: Regenerate.

2021-01-19  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (version.c): Simplifiy args and call move-if-change.

2021-01-11  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete checks for stdlib.h, string.h,
	strings.h, and time.h.
	* config.in, configure: Regenerate.
	* cpu.c, debug.c, device.c, device_table.c, device_table.h,
	dgen.c, emul_bugapi.c, emul_chirp.c, emul_netbsd.c, emul_unix.c,
	filter.c, hw_com.c, hw_eeprom.c, hw_nvram.c, hw_opic.c, hw_pal.c,
	hw_phb.c, hw_sem.c, hw_shm.c, lf.c, main.c, misc.c, misc.h,
	mon.c, pk_disklabel.c, psim.c, registers.c, sim_calls.c, table.c,
	tree.c: Delete HAVE_ERRNO_H, HAVE_STDLIB_H, HAVE_STRING_H,
	HAVE_STRINGS_H, HAVE_LIMITS_H, HAVE_TIME_H, and strings.h include.
	* hw_nvram.c: Likewise.
	(_hw_nvram_device): Always define host_time as time_t.
	(hw_nvram_update_clock): Delete error fallback.
	* gen-model.c (gen_model_c): Delete HAVE_STDLIB_H output.


2021-01-09  Mike Frysinger  <vapier@gentoo.org>

	* configure: Regenerate.

2021-01-08  Mike Frysinger  <vapier@gentoo.org>

	* sim_calls.c (sim_memory_map): Define.

2021-01-04  Mike Frysinger  <vapier@gentoo.org>

	* gen-icache.c, igen.c: Include stdlib.h.

2021-01-04  Mike Frysinger  <vapier@gentoo.org>

	* acinclude.m4 (ACX_BUGURL): Change http:// to https://.
	* configure: Regenerate.

2020-10-20  Dr. David Alan Gilbert  <dgilbert@redhat.com>

	* emul_netbsd.c (do_sigprocmask): Fix printf format.

2020-07-03  Sebastian Huber  <sebastian.huber@embedded-brains.de>

	* ld-insn.h (last_model, last_model_data, last_model_function,
	last_model_internal, last_model_macro, last_model_static):
	Delete.
	(max_model_fields_len, model_data, model_functions,
	model_internal, model_macros, model_static, models): Declare, but do not
	define.
	* ld-insn.c (last_model, last_model_data, last_model_function,
	last_model_internal, last_model_macro, last_model_static,
	max_model_fields_len, model_data, model_functions,
	model_internal, model_macros, model_static, models): Define.

2020-03-12  Kamil Rytarowski  <n54@gmx.com>

	* emul_netbsd.c (netbsd_signal_names): Sync with NetBSD 9.99.49.

2020-03-12  Kamil Rytarowski  <n54@gmx.com>

	* emul_netbsd.c (netbsd_error_names): Sync with NetBSD 9.99.49.

2019-12-19  Tom Tromey  <tromey@adacore.com>

	PR build/24572:
	* Makefile.in (install-strip): New target.

2019-09-20  Alan Modra  <amodra@gmail.com>

	* emul_generic.c (emul_add_tree_options): Delete old bfd code.

2019-01-26  Tom Tromey  <tom@tromey.com>

	* Makefile.in (version.c): Use sim's create-version.sh.

2018-05-09  Sebastian Rasmussen  <sebras@gmail.com>

	* e500_registers.h: Comment typo fix.
	* ppc-instructions (ppc_insn_mfcr): Likewise.

2017-09-05  John Baldwin  <jhb@FreeBSD.org>

	PR sim/20863
	* sim_calls.c (error): New function.

2017-02-13  Mike Frysinger  <vapier@gentoo.org>

	* cpu.h: Include libiberty.h.
	* emul_bugapi.c (emul_bugapi_instruction_name): Use ARRAY_SIZE.
	* emul_generic.h: Include libiberty.h.
	* emul_netbsd.c (emul_netbsd_syscalls): Use ARRAY_SIZE.
	* emul_unix.c (convert_to_solaris_stat): Likewise.
	(emul_solaris_syscalls): Likewise.
	(emul_linux_syscalls): Likewise.
	* options.c (print_options): Likewise.
	* ppc-instructions: Likewise.

2016-01-10  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac (sim-assert): Call AC_MSG_CHECKING,
	AC_DEFINE_UNQUOTED, and AC_MSG_RESULT
	(sim-env, sim-stdio, sim-trace): Delete.
	* config.in, configure: Regenerate.
	* Make-common.in (ENV_CFLAGS, TRACE_CFLAGS, ASSERT_CFLAGS,
	STDIO_CFLAGS): Delete.
	(CONFIG_CFLAGS): Delete $(ENV_CFLAGS), $(TRACE_CFLAGS),
	$(ASSERT_CFLAGS), and $(STDIO_CFLAGS).
	* std-config.h (WITH_ENVIRONMENT, WITH_TRACE, WITH_ASSERT,
	WITH_STDIO): Delete.

2016-01-10  Mike Frysinger  <vapier@gentoo.org>

	* configure: Regenerate.

2016-01-10  Mike Frysinger  <vapier@gentoo.org>

	* configure: Regenerate.

2016-01-10  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete --enable-sim-regparm and sim_regparm,
	and --enable-sim-stdcall and sim_stdcall.
	* configure: Regenerate.
	* Makefile.in (REGPARM_CFLAGS, STDCALL_CFLAGS): Delete.
	(CONFIG_CFLAGS): Delete $(REGPARM_CFLAGS) and $(STDCALL_CFLAGS).
	* inline.h: Delete REGPARM everywhere.
	* options.c (print_options): Delete WITH_REGPARM and
	WITH_STDCALL.
	* std-config.h (WITH_REGPARM, WITH_STDCALL, REGPARM): Delete.

2016-01-10  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Delete --enable-sim-cflags and sim_cflags.
	* configure: Regenerate.
	* INSTALL: Delete all mention of --enable-sim-cflags.
	* Makefile.in (SIM_CFLAGS): Delete.
	(STD_CFLAGS, NOWARN_CFLAGS): Delete $(SIM_CFLAGS).
	(psim): Likewise.

2016-01-06  Mike Frysinger  <vapier@gentoo.org>

	* sim_calls.c (sim_open): Mark argv const.
	(sim_create_inferior): Mark argv and env const.

2016-01-04  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac (sim-bswap): Delete.
	* configure: Regenerate.
	* INSTALL: Delete --enable-sim-bswap docs.
	* Makefile.in (BSWAP_CFLAGS): Delete.
	(CONFIG_CFLAGS): Delete $(BSWAP_CFLAGS).
	* options.c (print_options): Delete WITH_BSWAP.
	* sim-endian.h (htonl, ntohl): Delete.
	* std-config.h (WITH_BSWAP): Delete.

2016-01-02  Mike Frysinger  <vapier@gentoo.org>

	* main.c (main): Pass SIM_OPEN_STANDALONE to psim_options and
	psim_usage.
	* psim.c (psim_usage): Add new kind arg.  Only show bug URL and
	exit when kind is SIM_OPEN_STANDALONE.
	(psim_options): Add new kind arg.  Pass kind down to all psim_usage
	calls.  Replace error/break calls after psim_usage with return NULL.
	Only exit with version case when kind is SIM_OPEN_STANDALONE.
	* psim.h: Include gdb/remote-sim.h.
	(psim_options): Add new kind arg.
	(psim_usage): Likewise.
	* sim_calls.c (sim_open): Pass kind to psim_options.  Return NULL
	when it returns NULL.

2015-12-29  Kevin Buettner  <kevinb@redhat.com>

	* emul_netbsd.c (fd_closed): New static array.
	(fdbad): New function.
	(do_read, do_write, do_close, do_dup, do_ioctl, do_dup2, do_fcntl)
	(do_fstatfs, do_fstat, do_lseek): Call `fdbad'.
	(emul_netbsd_init): Initialize `fd_closed'.
	* emul_unix.c (fd_closed): New static array.
	(fdbad): New function.
	(do_unix_read, do_unix_write, do_unix_close, do_unix_dup)
	(do_unix_dup2, do_unix_lseek, do_solaris_fstat, do_solaris_ioctl)
	(do_linux_fstat, do_linux_ioctl): Call `fdbad'.
	(emul_solaris_init, emul_linux_init): Initialize `fd_closed'.

2015-12-26  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (TCONFIG_H): Delete.
	(sim-fpu.o): Delete $(TCONFIG_H).
	(tconfig.h): Delete rule.

2015-11-21  Mike Frysinger  <vapier@gentoo.org>

	PR sim/13834
	* Makefile.in (gentmap): Change $< to $(srcdir)/../common/gentmap.c.
	(callback.o): Change $< to $(srcdir)/../common/callback.c.
	(options.o): Change $< to $(srcdir)/options.c.

2015-11-17  Pedro Alves  <palves@redhat.com>

	* debug.h (TRACE, ITRACE, DTRACE, DITRACE, PTRACE): Call
	sim_io_printf_filtered instead of printf_filtered.

2015-06-12  Mike Frysinger  <vapier@gentoo.org>

	* configure: Regenerate.

2015-04-29  Nick Clifton  <nickc@redhat.com>

	PR 18273
	* hw_htab.c (htab_map_binary): Fix overlap check.

2015-04-13  Mike Frysinger  <vapier@gentoo.org>

	* Makefile.in (version.o): Change to using create-version.sh from gdb.
	(create-version.sh): Delete.

2015-03-31  Mike Frysinger  <vapier@gentoo.org>

	* config.in, configure: Regenerate.
	* Makefile.in (INCLUDES): Add $(ZLIBINC).
	(ZLIB, ZLIBINC): Define.
	(BFD_LIB): Add $(ZLIB).

2014-11-23  Joel Sherrill <joel.sherrill@oarcorp.com>

	* ChangeLog, ChangeLog.00, hw_com.c, ld-cache.h, ppc-instructions:
	Change immediatly to immediately.

2014-08-27  Joel Sherrill <joel.sherrill@oarcorp.com>

	* basics.h, device.c, device.h, hw_htab.c, hw_memory.c:
	Correct spelling in comments.

2014-08-19  Alan Modra  <amodra@gmail.com>

	* configure.ac: Invoke AC_PLUGINS.
	* configure: Regenerate.
	* config.in: Regenerate.

2014-03-10  Mike Frysinger  <vapier@gentoo.org>

	* sim_calls.c (sim_do_command): Add const to cmd.

2014-03-05  Mike Frysinger  <vapier@gentoo.org>

	* sim_calls.c (sim_load): Add const to prog.

2014-02-17  Aaro Koskinen  <aaro.koskinen@iki.fi>

	PR gdb/12202
	* Makefile.in (psim): Delete $(LIBS) from dependency.

2013-10-15  Hans-Peter Nilsson  <hp@axis.com>

	* Makefile.in (srcsim): New variable.
	(version.c): Adjust call to $(srccom)/create-version.sh as per change.

2013-06-28  Tom Tromey  <tromey@redhat.com>

	* Make-common.in (version.c): Use version.in, not
	common/version.in.

2013-06-24  Joel Brobecker  <brobecker@adacore.com>

	* Makefile.in (srccom): New variable.
	(version.c): Update rule dependencies, and re-implement using
	sim/common/create-version.sh.

2013-05-03  Hafiz Abid Qadeer  <abidh@codesourcery.com>

	revert:
	2013-04-19  Nathan Froyd  <froydnj@codesourcery.com>
	* ppc-instructions (isel): New instruction.

2013-04-19  Nathan Froyd  <froydnj@codesourcery.com>

	* ppc-instructions (isel): New instruction.

2012-12-19  Joel Brobecker  <brobecker@adacore.com>

	* COPYING: Update to GPL version 3.

2012-06-15  Joel Brobecker  <brobecker@adacore.com>

	* configure: Regenerate.

2012-05-24  Pedro Alves  <palves@redhat.com>

	PR gdb/7205
	* Replace TARGET_SIGNAL_ with GDB_SIGNAL_ throughout.

2012-03-14  Michael Haubenwallner  <michael.haubenwallner@salomon.at>

	* emul_unix.c (st_pad1, st_pad2, st_pad3): Undefine.

2012-01-02  Joel Brobecker  <brobecker@adacore.com>

	* dp-bit.c: Reformat copyright header.

2011-02-11  Ben Golding  <ben_golding@yahoo.co.uk>

	* events.c: add #include <stdlib.h> for free(). Fix PR build/13372.

2011-10-17  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Change include to common/acinclude.m4.

2011-10-17  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac: Change AC_PREREQ to 2.64.  Delete AC_CONFIG_HEADER
	call.  Replace common.m4 include with SIM_AC_COMMON.
	* configure: Regenerate.

2011-06-09  Joel Brobecker  <brobecker@adacore.com>

	* psim.c (psim_options): Fix length of comparison when checking
	for --sysroot= option.

2011-06-08  Joel Brobecker  <brobecker@adacore.com>

	* psim.c (psim_options): Add option that cause the error
	in invalid-option error messages. Print the usage when
	detecting an invalid long-name option.

2011-06-08  Joel Brobecker  <brobecker@adacore.com>

	* psim.c (psim_options): Accept and ignore `--sysroot=...'.

2011-06-03  Joel Brobecker  <brobecker@adacore.com>  (obvious fix)

	From Stephen Kitt  <steve@sk2.org>
	* vm.c (vm_synchronize_context): Spelling fix in function
	documentation.

2011-04-16  Mike Frysinger  <vapier@gentoo.org>

	* sim_calls.c (sim_complete_command): New stub function.

2011-02-14  Mike Frysinger  <vapier@gentoo.org>

	* cap.c (cap_remove): Change zfree to free.
	* corefile.c (core_init): Likewise.
	* device.c (detach_device_interrupt_edge): Likewise.
	(clean_device_interrupt_edges): Likewise.
	(device_instance_delete): Likewise.
	(device_set_property): Likewise.
	(clean_device_properties): Likewise.
	(device_add_range_array_property): Likewise.
	(device_add_reg_array_property): Likewise.
	* emul_bugapi.c (emul_bugapi_do_read): Likewise.
	(emul_bugapi_do_write)
	* emul_netbsd.c (write_direntries): Likewise.
	(do_read): Likewise.
	(do_write): Likewise.
	(do_getdirentries): Likewise.
	* emul_unix.c (do_unix_read): Likewise.
	(do_unix_write): Likewise.
	* events.c (event_queue_init): Likewise.
	(event_queue_deschedule): Likewise.
	(event_queue_process): Likewise.
	* hw_disk.c (open_disk_image): Likewise.
	(hw_disk_instance_delete): Likewise.
	* hw_eeprom.c (hw_eeprom_instance_delete): Likewise.
	* hw_htab.c (htab_dma_binary): Likewise.
	* hw_init.c (update_for_binary_section): Likewise.
	* hw_memory.c (hw_memory_set_available): Likewise.
	(hw_memory_init_address): Likewise.
	(hw_memory_instance_release): Likewise.
	* pk_disklabel.c (disklabel_delete): Likewise.
	* table.c (table_push): Likewise.
	* tree.c (parse_reg_property): Likewise.
	(parse_ranges_property): Likewise.
	(parse_string_property): Likewise.
	* main.c (zfree): Delete.
	* sim_calls.c (zfree): Likewise.
	* sim_callbacks.h (zfree): Likewise.

2011-01-11  Andrew Burgess  <aburgess@broadcom.com>

	* gdb-sim.c (sim_store_register): Update return value to
	match new API.

2011-01-05  Joel Brobecker  <brobecker@adacore.com>

	* psim.texinfo: Copyright year update.

2010-04-14  Mike Frysinger  <vapier@gentoo.org>

	* sim_calls.c (sim_write): Add const to buf arg.

2010-02-14  Andreas Schwab  <schwab@linux-m68k.org>

	* ppc-instructions: Fix missing assignment in last change.

2010-02-05  Andreas Schwab  <schwab@linux-m68k.org>

	* ppc-instructions: Fix aliasing bugs when calling
	invalid_arithemetic_operation.

2009-11-13  Nathan Froyd  <froydnj@codesourcery.com>

	* configure.ac: If build != host, create a separate build-config.h
	file desecribing the build machine.
	* configure: Regenerate.
	* lf.c: Include build-config.h instead of config.h.
	* dgen.c: Likewise.
	* igen.c: Likewise.
	* misc.c: Likewise.
	* misc.h: Likewise.
	* filter.c: Likewise.
	* table.c: Likewise.

2009-10-15  Joel Sherrill <joel.sherrill@oarcorp.com>

	* std-config.h: Fix spelling error.

2009-09-22  Joel Sherrill  <joel.sherrill@oarcorp.com>

	* main.c: Fix spelling error.

2009-09-15  Andreas Tobler <andreast-list@fgznet.ch>
	    Doug Evans  <dje@google.com>

	* configure.ac (sim_hwflags): Use AC_DEFINE to define HAVE_UNION_SEMUN.
	* configure: Regenerate.
	* config.in: Regenerate.
	* hw_sem.c: (HAVE_UNION_SEMUN): Renamed from HAS_UNION_SEMUN.

2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* config.in: Regenerate.
	* configure: Likewise.

	* configure: Regenerate.

2009-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* Makefile.in (datarootdir): New variable.

2009-01-12  Nathan Froyd  <froydnj@codesourcery.com>

	* ppc-instructions (sync): Add L field.

2008-12-15 Joel Sherrill <joel.sherrill@oarcorp.com>

	* ppc-instructions, ppc-spr-table: Add ability
	to read tbrl and tbru special registers.

2008-11-18  Joel Sherrill <joel.sherrill@oarcorp.com>

	* configure: Regenerated.
	* configure.ac: Add test for System V shared memory and semaphore.
	* debug.c, debug.h: Add trace support for new devices.
	* hw_sem.c, hw_shm.c: New files.
	* Makefile.in: Add hw_sem.c and hw_shm.c.

2008-07-11  Hans-Peter Nilsson  <hp@axis.com>

	* configure.ac: Add test for libz and zlib.h.
	* Makefile.in (LIBS): Set from @LIBS@.
	* configure: Regenerate.
	* config.in: Ditto.

2008-06-06  Vladimir Prus  <vladimir@codesourcery.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>

	* configure.ac: Use ACX_PKGVERSION and ACX_BUGURL.
	* configure, config.in: Regenerated.
	* Makefile.in (LIB_OBJ): Add version.o.
	(version.c, version.o): New rules.
	* psim.c (psim_usage): Add help parameter.  Print the bug URL.
	Exit with code 0 for help.
	(psim_options): Update calls to psim_usage.  Handle --help and
	--version.
	* psim.h (psim_usage): Update prototype.
	* main.c (main): Update psim_usage call.

2008-03-14  Nick Hudson  <nick.hudson@dsl.pipex.com

	* configure.ac: Pass ../../intl to ZW_GNU_GETTEXT_SISTER_DIR.
	* configure: Regenerate.

2007-10-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb-sim.c (regnum2spr): Rename to...
	(sim_spr_register_name): ... this.  Make global.

2007-09-04  Jerome Guitton  <guitton@adacore.com>

	* sim/ppc/emul_bugapi.c (emul_bugapi_create): quote the file
	name property before parsing it.

2006-12-21  Hans-Peter Nilsson  <hp@axis.com>

	* acconfig.h: Remove.
	* config.in: Regenerate.

2006-11-22  Tom Marn <tom.marn@telargo.com>

	Committed by Andrew Cagney.
	* ppc-instructions: Implement optional PowerPC stfiwx instruction.

2006-07-12  Fred Fish  <fnf@specifix.com>

	* sim-endian.h (asm/byteorder.h): Don't include private kernel
	header.

2006-06-13  Richard Earnshaw  <rearnsha@arm.com>

	* configure: Regenerated.

2006-05-31  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.in: Replace INTLLIBS and INTLDEPS with LIBINTL
	and LIBINTL_DEP everywhere.
	(INTL_DIR, INTL_SRC): Remove.
	(INTL_CFLAGS): Use INCINTL.
	* configure.ac: Use ZW_GNU_GETTEXT_SISTER_DIR.
	* configure: Regenerated.

2006-05-05  Andreas Schwab  <schwab@suse.de>

	* configure.ac (CFLAGS_FOR_BUILD): Set and substitute.
	* configure: Regenerate.

	* Makefile.in (CFLAGS_FOR_BUILD): Define.
	(BUILD_CFLAGS): Use it instead of hardcoding "-g -O".
	(gentmap): Fix typo BUILD_FLAGS -> BUILD_CFLAGS.

2006-04-23  Andreas Schwab  <schwab@suse.de>

	* Makefile.in (tmp-ld-decode): Fix dependencies.
	(tmp-ld-cache): Likewise.
	(tmp-ld-insn): Likewise.

2006-02-01  Mark Mitchell  <mark@codesourcery.com>

	* emul_netbsd.c (emul_netbsd_create): Quote file-name property.
	* emul_unix.c (emul_unix_create): Likewise.
	* tree.c (libiberty.h): Include it.
	(tree_quote_property): New function.
	* tree.h (tree_quote_property): Declare.

2006-01-25  Mark Mitchell  <mark@codesourcery.com>

	* words.h (natural32): Define as "int".

2006-01-23  Mark Mitchell  <mark@codesourcery.com>

	* words.h (signed32): Define as "int".
	(unsigned32): Define as "unsigned int".

2005-11-28 Mark Mitchell  <mark@codesourcery.com>

	* configure.ac (USE_WIN32API): Define it.
	* configure.in: Regenerate.
	* config.in: Likewise.
	* emul_netbsd.c (write_timezone): Guard with HAVE_GETTIMEOFDAY.
	* emul_unix.c (do_unix_mkdir): Handle Win32 1-argument mkdir.

2005-11-28  Mark Mitchell  <mark@codesourcery.com>

	* psim.c: Include gdb/signals.h.

	* sim_calls.c (gdb/signals.h): Include it.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
	* psim.c (cntrl_c_simulation): Use TARGET_SIGNAL_*.

2005-07-15  Ben Elliston  <bje@au.ibm.com>

	* hw_htab.c (bfd_get_section_lma): Remove macro; use BFD's.

2005-07-15  Ben Elliston  <bje@au.ibm.com>

	* hw_init.c: Comment out tokens after #endif directive.
	* hw_register.c: Likewise.
	* hw_trace.c: Likewise.
	* hw_vm.c: Likewise.

2005-04-20  Manoj Iyer  <manjo@austin.ibm.com>

	* psim.c: Added libiberty.h header file.

2005-04-18  Manoj Iyer  <manjo@austin.ibm.com>

	* configure.ac: Added check for long long.
	* config.in: Regenerated.
	* configure: Regenerated.
	* words.h: Modified logic to check for HAVE_LONG_LONG instead of
	__GNUC__, added config.h header file.

2005-03-25  Anthony Green  <green@redhat.com>

	* tree.c (parse_reg_property): Fix memset usage.

2005-03-23  Mark Kettenis  <kettenis@gnu.org>

	* configure: Regenerate.

2005-01-11  Andrew Cagney  <cagney@localhost.localdomain>

	* configure.ac: Delete AC_CONFIG_AUX_DIR.
	* configure: Re-generate.

2005-01-07  Andrew Cagney  <cagney@gnu.org>

	* configure.ac: Rename configure.in, require autoconf 2.59.
	* configure: Re-generate.

2005-01-03  Andreas Schwab  <schwab@suse.de>

	* Makefile.in (hw_com.o, hw_eeprom.o): Depend on
	$(DEVICE_TABLE_H).

2004-11-16  Andreas Schwab  <schwab@suse.de>

	* Makefile.in (defines.h): Depend on tmp-defines.
	(hw.c hw.h): Depend on tmp-hw.
	(pk.h): Depend on tmp-pk.

2004-11-11  Andreas Schwab  <schwab@suse.de>

	* sim_calls.c: Include "libiberty.h".

2004-09-24  Ian Lance Taylor <ian@wasabisystems.com>

	Committed by Andrew Cagney.
	* configure.in: Check for sys/mount.h, sys/vfs.h, sys/statfs.h.
	Check for struct statfs.
	* emul_netbsd.c: If not HAVE_STRUCT_STATFS, #undef HAVE_FSTATFS.
	* configure, config.in: Regenerate.

2004-08-05  Nathanael Nerode  <neroden@gcc.gnu.org>

	* Makefile.in (GDB_INCLUDES): Remove bogus reference to mmalloc.

2004-08-04  Andrew Cagney  <cagney@gnu.org>
	    Jim Blandy <jimb@redhat.com>

	* sim_callbacks.h (simulator): Declare.
	* Makefile.in (gdb-sim.o): New rule.
	(MAIN_SRC, GDB_OBJ): Add gdb-sim.o, gdb-sim.c.
	(DEFS_H): Delete.
	(GDB_SIM_PPC_H): Define.
	* gdb-sim.c: New file.
	* sim_calls.c: Do not include "defs.h".
	(simulator): Drop static.
	(sim_store_register, sim_fetch_register): Delete.

2004-08-04  Andrew Cagney  <cagney@gnu.org>

	* Back out accidently committed change.

2004-08-04  Jim Blandy  <jimb@redhat.com>

	Use a fixed register numbering when communicating with the PowerPC
	simulator.
	* sim_calls.c: #include "registers.h" and "gdb/sim-ppc.h"; do not
	include GDB's "defs.h".
	(gdb_register_name_table): New variable.
	(gdb_register_name_table_size): New enum constant.
	(gdb_register_name): New function.
	(sim_fetch_register, sim_store_register): Use gdb_register_name,
	instead of calling gdbarch_register_name.
	* Makefile.in (GDB_SIM_PPC_H): New variable.
	(DEFS_H): Delete variable.
	(sim_calls.o): Update dependencies.

2004-07-26  Andrew Cagney  <cagney@gnu.org>

	Problem from Olaf Hering <olh@suse.de>.
	* Makefile.in (install, installdirs): Add DESTDIR.

2004-07-10  Ben Elliston  <bje@au.ibm.com>

	* tree.c (parse_integer_property): Comment typo fix.

2004-07-06  Jim Blandy  <jimb@redhat.com>

	* Makefile.in: Update all dependency information.
	(BASICS_H, CPU_H, IDECODE_H, PSIM_H, REGISTERS_H, DEVICE_TABLE_H)
	(EMUL_GENERIC_H): Values updated.
	(ACCONFIG_H, ALTIVEC_EXPRESSION_H, ALTIVEC_REGISTERS_H)
	(ANSIDECL_H, BFD_H, BITS_H, CAP_H, COMMON_SIM_BASE_H)
	(COMMON_SIM_BASICS_H, COMMON_SIM_FPU_H, COMMON_SIM_INLINE_H)
	(COMMON_SIM_SIGNAL_H, CONFIG_H, COREFILE_H, COREFILE_N_H, DEBUG_H)
	(DEFINES_H, DEFS_H, DEVICE_H, E500_EXPRESSION_H, E500_REGISTERS_H)
	(EMUL_BUGAPI_H, EMUL_CHIRP_H, EMUL_NETBSD_H, EMUL_UNIX_H, EVENTS_H)
	(FILTER_FILENAME_H, FILTER_H, GDB_CALLBACK_H, GDB_REMOTE_SIM_H)
	(GEN_ICACHE_H, GEN_IDECODE_H, GEN_ITABLE_H, GEN_MODEL_H)
	(GEN_SEMANTICS_H, GEN_SUPPORT_H, HW_CPU_H, HW_H, HW_PHB_H)
	(ICACHE_H, IDECODE_BRANCH_H, IDECODE_EXPRESSION_H)
	(IDECODE_FIELDS_H, IGEN_H, INLINE_H, INTERRUPTS_H, ITABLE_H)
	(LD_CACHE_H, LD_DECODE_H, LD_INSN_H, LF_H, MISC_H, MODEL_H, MON_H)
	(OPTIONS_H, OS_EMUL_H, PK_H, PPC_CONFIG_H, SEMANTICS_H)
	(SIM_CALLBACKS_H, SIM_ENDIAN_H, SIM_ENDIAN_N_H, SIM_MAIN_H)
	(SPREG_H, STD_CONFIG_H, SUPPORT_H, TABLE_H, TARG_VALS_H, TCONFIG_H)
	(TREE_H, VM_H, VM_N_H, WORDS_H): New variables.
	(callback.o, cap.o, corefile.o, debug.o, device.o, device_table.o)
	(dgen.o, emul_bugapi.o, emul_chirp.o, emul_netbsd.o, emul_unix.o)
	(events.o, filter.o, filter_filename.o, filter_host.o)
	(gen-icache.o, gen-idecode.o, gen-itable.o, gen-model.o)
	(gen-semantics.o, gen-support.o, hw_core.o, hw_cpu.o, hw_disk.o)
	(hw_htab.o, hw_init.o, hw_phb.o, hw_register.o, icache.o)
	(idecode.o, igen.o, interrupts.o, itable.o, ld-cache.o)
	(ld-decode.o, ld-insn.o, lf.o, main.o, misc.o, model.o, mon.o)
	(options.o, os_emul.o, pk_disklabel.o, psim.o, registers.o)
	(semantics.o, sim-endian.o, sim-fpu.o, sim_calls.o, spreg.o)
	(support.o, table.o, targ-map.o, tree.o, vm.o): Update dependencies.

2004-06-28  Jim Blandy  <jimb@redhat.com>

	* e500_registers.h (EVR): Cast the 32-bit value of the GPR to an
	unsigned type before or-ing it with a 64-bit value.

2004-06-15  Alan Modra  <amodra@bigpond.net.au>

	* hw_htab.c (htab_sum_binary(bfd): Use bfd_get_section_size
	instead of bfd_get_section_size_before_reloc.
	(htab_dma_binary(bfd): Likewise.
	* hw_init.c (update_for_binary_section(bfd): Likewise.

2004-05-10  Daniel Jacobowitz  <dan@debian.org>

	* configure.in (sim_fpu_cflags): Add -I../common.
	* configure: Regenerated.

2004-01-27  Andrew Cagney  <cagney@redhat.com>

	* ppc-instructions: Update copyright.
	(convert_to_integer): Add trailing ";" to label.

2003-10-16  Michael Snyder  <msnyder@redhat.com>

	* emul_netbsd.c: Only a comment may follow an #endif.

2003-10-15  Michael Snyder  <msnyder@redhat.com>

	* Makefile.in (sim_calls.o): No longer depends on gdb/tm.h.

2003-06-22  Andrew Cagney  <cagney@redhat.com>

	Written by matthew green <mrg@redhat.com>, with fixes from Aldy
	Hernandez <aldyh@redhat.com>, Jim Wilson <wilson@redhat.com>, and
	Nick Clifton <nickc@redhat.com>.

	* ppc-instructions: Include altivec.igen and e500.igen.
	(model_busy, model_data): Add vr_busy and vscr_busy.
	(model_trace_release): Trace vr_busy and vscr_busy.
	(model_new_cycle): Update vr_busy and vscr_busy.
	(model_make_busy): Update vr_busy and vscr_busy.
	* registers.c (register_description): Add Altivec and e500
	registers.
	* psim.c (psim_read_register, psim_read_register): Handle Altivec
	and e500 registers.
	* ppc-spr-table (SPEFSCR): Add VRSAVE and SPEFSCR registers.
	* configure.in (sim_filter): When *altivec* add "av".  When *spe*
	or *simd* add e500.
	(sim_float): When *altivec* define WITH_ALTIVEC.  When *spe* add
	WITH_E500.
	* configure: Re-generate.
	* e500.igen, altivec.igen: New files.
	* e500_expression.h, altivec_expression.h: New files.
	* idecode_expression.h: Update copyright.  Include
	"e500_expression.h" and "altivec_expression.h".
	* e500_registers.h, altivec_registers.h: New files.
	* registers.h: Update copyright.  Include "e500_registers.h" and
	"altivec_registers.h".
	(registers): Add Altivec and e500 specific registers.
	* Makefile.in (IDECODE_H): Add "idecode_e500.h" and
	"idecode_altivec.h".
	(REGISTERS_H): Add "e500_registers.h" and "altivec_registers.h".
	(tmp-igen): Add dependencies on altivec.igen and e500.igen .

2003-06-22  Andrew Cagney  <cagney@redhat.com>

	Problems reported by Joshua LeVasseur.
	* emul_chirp.c: Update copyright.
	(chirp_emul_nextprop): Return the first property.
	* hw_htab.c: Update copyright.
	(htab_decode_hash_table): Fix check for htab size.

2003-06-21  Andrew Cagney  <cagney@redhat.com>

	* interrupts.c: Update copyright.
	(external_interrupt): Fix test for already pending interrupt.
	Problem found by Joshua LeVasseur.

	* ppc-instructions: Add missing +8 line.  Found by blofeldus at
	yahoo.com.

2003-06-21  Andrew Cagney  <cagney@redhat.com>

	From Ian Lance Taylor <ian@airs.com>: * hw_nvram.c
	(hw_nvram_init_address): Correct call to memset--swap second and
	third arguments.

2003-06-21  Andrew Cagney  <cagney@redhat.com>

	* hw_com.c (hw_com_device_init_data): Check that the output, and
	not input file opened.  Pointed out by masahino tky3.3web.ne.jp.

2003-06-20  Andrew Cagney  <cagney@redhat.com>

	* sim_calls.c (sim_create_inferior): Assert that
	psim_write_register succeeded.
	(sim_fetch_register, sim_store_register): Make "regname" constant.
	Delete Altivec hack.  Return result from psim_read_register /
	psim_write_register.
	* psim.h (psim_read_register, psim_write_register): Change return
	type to int.  Update comments.
	* psim.c: Update copyright.
	(psim_stack): Assert that the psim_read_register worked.
	(psim_read_register, psim_read_register): Return the register's
	size.  Allocate the cooked buffer dynamically.
	* hw_register.c: Update copyright.
	(do_register_init): Check that psim_write_register succeeded.
	* hw_init.c: Update copyright.
	(create_ppc_elf_stack_frame, create_ppc_aix_stack_frame): Assert
	that the register transfer worked.

2003-06-19  Andrew Cagney  <cagney@redhat.com>

	* ld-insn.h: Update copyright.
	(cache_fields): Define.
	(insn_table_fields): Add insn_field_6 and insn_field_7.
	(load_insn_table): Pass in the "cache_rules".
	* ld-insn.c: Update copyright.
	(load_insn_table): Add parameter "cache_rules".  Handle "cache",
	"computed" and "scratch" fields.
	(main): Pass "cache_rules" to load_insn_table.
	* ld-cache.h: Update copyright.
	(append_cache_table): Declare.
	* ld-cache.c: Update copyright.
	(append_cache_table): New function.
	(load_cache_table): Call.
	* gen-model.c: Include "ld-cache.h".
	* gen-itable.c: Include "ld-cache.h".
	* igen.c: Move #include "ld-cache.h" to earlier.  Update
	copyright.
	(main): Permit a NULL "cache_rules".  Pass address of
	"cache_rules" to load_insn_table.
	* Makefile.in (tmp-ld-insn): Add "ld-cache.o".
	(tmp-igen): Do not include ppc-cache-rules.
	(gen-itable.o, gen-model.o): Add "ld-cache.h".
	* ppc-cache-rules: Delete file.
	* ppc-instructions: Add cache rules.

2003-06-19  Andrew Cagney  <cagney@redhat.com>

	* Makefile.in (ICACHE_CFLAGS, SEMANTICS_CFLAGS): Delete.
	(SIM_FPU_FLAGS): Define.
	(icache.o): Delete explicit compile command.
	(semantics.o, idecode.o): Delete explicit compile command.
	(NOWARN_CFLAGS, STD_CFLAGS): Append SIM_FPU_CFLAGS.
	* gen-support.c (gen_support_c): Generate #include of
	"sim-inline.h" and "sim-fpu.h", but conditional on
	HAVE_COMMON_FPU.
	* gen-idecode.c (gen_idecode_c): Ditto.
	* igen.c (gen_icache_c, gen_semantics_c): Wrap #include of
	"sim-inline.h" and "sim-fpu.h" in HAVE_COMMON_FPU conditional.
	Move to before "support.h".
	* Makefile.in, gen-support.c, gen-idecode.c, igen.c: Update
	copyright.

2003-05-16  Ian Lance Taylor  <ian@airs.com>

	* Makefile.in (various): Use $(SHELL) whenever we invoke
	move-if-change.

2003-02-27  Andrew Cagney  <cagney@redhat.com>

	* sim_calls.c (sim_open, sim_create_inferior): Rename _bfd to bfd.

2002-09-27  Andrew Cagney  <ac131313@redhat.com>

	* hw_disk.c (hw_disk_init_address): Set device type to "block",
	not "disk".

2002-06-22  Andrew Cagney  <ac131313@redhat.com>

	* Makefile.in (INTL_SRC): Define.
	(INTL_CFLAGS): Define.
	(INTL_DIR): Define.
	(STD_CFLAGS): Add INTL_CFLAGS.

2002-06-17  Elena Zannoni  <ezannoni@redhat.com>

	* psim.c (psim_options): Don't choke when gdb invokes us with
	the --architecture option, just ignore it.

2002-06-16  Andrew Cagney  <ac131313@redhat.com>

	* configure: Regenerated to track ../common/aclocal.m4 changes.

2002-06-08  Andrew Cagney  <cagney@redhat.com>

	* main.c: Include "gdb/callback.h" and "gdb/remote-sim.h".
	* sim_calls.c: Ditto.

2002-05-30  DJ Delorie  <dj@redhat.com>

	* lf.c (lf_print__gnu_copyleft): Convert multiline strings to
	compatible format.
	* gen-idecode.c (print_run_until_stop_body): Likewise.
	* gen-model.c (gen_model_c): Likewise.

2002-04-15  Elena Zannoni  <ezannoni@redhat.com>

	* sim_calls.c (sim_fetch_register, sim_store_register): Return -1 for
	AltiVec registers as a temporary stopgap.

2002-03-24  David O'Brien  <obrien@FreeBSD.org>

	* ppc/hw_disk.c: Export a disk device property.

2002-03-23  Andrew Cagney  <ac131313@redhat.com>

	From 2001-12-09 Julien Ducourthial <jducourt@noos.fr>:
	* ppc-instructions (lswx): Do the register control with the
	register count.  Initialize the right register in the loop.
	(mtfsfi) : Correct prefix for the instruction.

2002-02-24  Andrew Cagney  <ac131313@redhat.com>

	From wiz at danbala:
	* std-config.h: Fix grammar and typos.  Update copyright.
	Fix PR gdb/287.

2002-01-12  matthew green  <mrg@redhat.com>

	* Makefile.in (tmp-igen): Pass -I $(srcdir) to igen.
	* igen.c (main): Change -I to add include paths for :include:
	files.
	Implement -G as per sim/igen, with just gen-icache=N support.
	Call load_insn_table() with the built include path.

	* ld-insn.c (parse_include_entry): New. Load an :include: file.
	(load_insn_table): New `includes' argument.  Look for :include:
	entries and call parse_include_entry() for them.
	(main): Adjust load_insn_table() call.
	* ld-insn.h (model_include_fields): New enum.
	(load_insn_table): Update prototype.
	* table.c (struct _open_table, struct _table): Rework
	structures to handle included files.
	(table_push): Move the guts of table_open() here.

	* table.c (struct _open table, struct table): Make table object an
	indirect ptr to the current table file.
	(current_line, new_table_entry, next_line): Make file arg type
	open_table.
	(table_open): Use table_push.
	(table_entry_read): Point variable file at current table, at eof, pop
	last open table.

	* misc.h (NZALLOC): New macro. From sim/igen.

	* table.h, table.c (table_push): New function.

2002-01-04  matthew green  <mrg@redhat.com>

	* bits.c (LSMASKED64): New inline function.
	(LSEXTRACTED64): Likewise.
	* bits.h (_LSB_POS, _LSMASKn, LSMASK64): New macros from
	sim/common/sim-bits.h
	(LSMASKED64, LSEXTRACTED64): New functions definitions.
	* Makefile.in (sim-bits.o): Remove target.

	* main.c (zalloc): Fix typo in error message.

2001-12-16  Andrew Cagney  <ac131313@redhat.com>

	* configure.in (sim_fpu): Don't add sim-bits.o.
	* configure: Re-generate.

2001-12-15  matthew green  <mrg@redhat.com>

	* main.c: Include "defs.h", "bfd.h", "callback.h" and "remote-sim.h".
	(sim_io_error): New function.
	* sim_calls.c: (sim_io_error): New function.

2001-12-14  matthew green  <mrg@redhat.com>

	* Makefile.in (LIB_OBJ): Add @sim_fpu@.
	(ICACHE_CFLAGS, SEMANTICS_CFLAGS): New variables.
	(icache.o, semantics.o): Add new ICACHE_FLAGS & SEMANTICS_FLAGS.
	(sim-fpu.o, sim-bits.o, tconfig.h): New targets.
	* configure.in: Rename INLINE_LOCALS to PSIM_INLINE_LOCALS.  Add a
	check for sim/common/sim-fpu.c.  Output sim_fpu and sim_fpu_cflags.
	* configure: Regenerate.
	* device.h (device_find_integer_array_property): Match function definition.
	* gen-icache.c (print_icache_internal_function_declaration): Rename
	INLINE_ICACHE to PSIM_INLINE_ICACHE.
	* gen-idecode.c (print_idecode_run_function_header): Rename INLINE_IDECODE
	to PSIM_INLINE_IDECODE.
	* gen-semantics.c (print_semantic_function_header): Rename
	EXTERN_SEMANTICS to PSIM_EXTERN_SEMANTICS.
	* gen-support.c (print_support_function_name): Rename INLINE_SUPPORT to
	PSIM_INLINE_SUPPORT.
	* igen.c (print_function_name): Also escape `(' and `)'.
	(gen_semantics_h): Rename EXTERN_SEMANTICS to PSIM_EXTERN_SEMANTICS.
	(gen_semantics_c): Likewise.  Also output includes for "sim-fpu.h"
	* inline.h (INLINE_SIM_ENDIAN): Renamed INLINE_PSIM_ENDIAN.
	(EXTERN_SIM_ENDIAN): Renamed EXTERN_PSIM_ENDIAN.
	(STATIC_INLINE_SIM_ENDIAN): Renamed STATIC_INLINE_PSIM_ENDIAN.
	(INLINE_LOCALS): Renamed PSIM_INLINE_LOCALS.
	(EXTERN_SUPPORT): Renamed PSIM_EXTERN_SUPPORT.
	(INLINE_SUPPORT): Renamed PSIM_INLINE_SUPPORT.
	(EXTERN_SEMANTICS): Renamed PSIM_EXTERN_SEMANTICS.
	(INLINE_SEMANTICS): Renamed PSIM_INLINE_SEMANTICS.
	(EXTERN_IDECODE): Renamed PSIM_EXTERN_IDECODE.
	(INLINE_IDECODE): Renamed PSIM_INLINE_IDECODE.
	(EXTERN_ICACHE): Renamed PSIM_EXTERN_ICACHE.
	(INLINE_ICACHE): Renamed PSIM_INLINE_ICACHE.
	* options.c (options_inline): Fix names.
	* sim-endian-n.h: Change INLINE_SIM_ENDIAN to INLINE_PSIM_ENDIAN.
	* sim-endian.h: Likewise.
	* sim-main.h: New file.
	* std-config.h: Rename INLINE_LOCALS to PSIM_INLINE_LOCALS.

2001-12-01  Andrew Cagney  <ac131313@redhat.com>

	From Mark Peek.
	* ppc-spr-table: Add SDA and PIR.

2001-10-29  Andrew Cagney  <ac131313@redhat.com>

	* tree.c (parse_size): Assert #size-cells > 0.
	(parse_address): Ditto for #address-cells.
	(parse_reg_property): Only parse the size when #size-cells is
	non-zero.

2001-10-25  Andrew Cagney  <ac131313@redhat.com>

	* emul_generic.c (OEA_MEMORY_SIZE): Increase to 4mb.
	* hw_htab.c (htab_map_binary): Don't try to map the text section
	when it is empty.
	* emul_chirp.c (map_over_chirp_note): Default load-base to -1 not
	CHIRP_LOAD_BASE.
	(emul_chirp_create): Map in the interrupt table.

2001-07-16  Daniel Jacobowitz  <drow@mvista.com>

	* Makefile.in: Add dependencies on $(CPU_H).

Wed Mar  7 10:45:12 HST 2001  Glen Nakamura  <gen@lava.net>

	* hw_init.c (dma_file): Fixed problem with loading last 1KB of
	file.

2001-03-04  Andrew Cagney  <ac131313@redhat.com>

	* emul_netbsd.c [WITH_NetBSD_HOST]: Include <sys/mount.h> and
	<errno.h>.
	(do_stat): Only do SYS test when SYS_stat defined.
	(do_sigprocmask): Ditto for SYS_sigprocmask.
	(do_fstat): Ditto for SYS_fstat.
	(do_getdirentries): Ditto for SYS_getdirentries.
	(do_lstat): Ditto for SYS_lstat.

2001-01-15  Geoffrey Keating  <geoffk@redhat.com>

	* emul_netbsd.c (do_open): Translate the flag parameter to the
	open syscall to the numbers supported by the host.

2000-12-12  Geoffrey Keating  <geoffk@redhat.com>

	* sim-endian.h: Don't have parameters on macro definitions which
	are simply renaming functions, to permit use of XCONCAT2 in both
	the macro name and the arguments in a use of such a definition.

2000-11-15  Jim Blandy  <jimb@redhat.com>

	* sim_calls.c: Doc fix.
	(sim_fetch_register, sim_store_register): Call
	gdbarch_register_name directly, instead of going through
	REGISTER_NAME macro.

2000-10-24  Geoff Keating  <geoffk@cygnus.com>

	* ppc-instructions (lfsux): Correct XO field of lfsux instruction.

Tue May 23 21:39:23 2000  Andrew Cagney  <cagney@b1.cygnus.com>

	* configure: Regenerated to track ../common/aclocal.m4 changes.

Fri Apr 28 15:59:27 2000  Andrew Cagney  <cagney@b1.cygnus.com>

	* events.c (event_queue_process): Call update_time_from_event
 	every time an event is removed from the queue.
	(update_time_from_event): Delete assertion that a negative
 	time_from_event implies an empty event queue.

Fri Apr 28 15:53:54 2000  Andrew Cagney  <cagney@b1.cygnus.com>

	* interrupts.c (deliver_hardware_interrupt): Print time trace in
 	decimal.
	* events.c (event_queue_process): Cleanup trace message.
	(update_time_from_event): Trace full event queue.

2000-03-25  Geoff Keating  <geoffk@cygnus.com>

	* ppc-instructions (Disabled_Exponent_Underflow): Increment
	the exponent when denormalizing.

Thu Sep  2 18:15:53 1999  Andrew Cagney  <cagney@b1.cygnus.com>

	* configure: Regenerated to track ../common/aclocal.m4 changes.

1999-05-08  Felix Lee  <flee@cygnus.com>

	* configure.in: Use AC_EXEEXT instead of AM_EXEEXT.
	* configure: Regenerated to track ../common/aclocal.m4 changes.

1999-04-02  Keith Seitz  <keiths@cygnus.com>

	* sim_calls.c (POLL_QUIT_INTERVAL): Define. Used to tweak
	the frequency at which the poll_quit callback is called.
	(poll_quit_count): New global.
	(sim_io_poll_quit): Only call the poll_quit callback
	after the specified POLL_QUIT_INTERVAL.

1999-02-22  Jim Lemke  <jlemke@cygnus.com>

	* dc-complex: Force expansion on all bits of field BO.
	Previously, the least-significant (prediction) bit was ignored.
	* ppc-instructions (conditional branches): Implement mpc860c0 option.
	* igen.c (gen_semantics_[ch]): Setup for mpc860c0 option.
	* psim.c (is_num, psim_options): Added parsing for mpc860c0 option.
	* interrupts.h: Added "mpc860c0_instruction_program_interrupt".
	* interrupts.c (program_interrupt): Added handling for above interrupt.

1999-02-01  Jim Blandy  <jimb@zwingli.cygnus.com>

	Make the simulator compatible with the MPC750.  It would be nicer
	to make this a real multi-sim, but that's more work than we have
	time for.
	* emul_generic.c (emul_add_tree_options): Only require strict
	alignment if it was explicitly requested at configuration time.
	Don't make it the default for little-endian machines.
	* ppc-spr-table (UMMCR0, UMMCR1, UPMC1, UPMC2, USIA, UPMC3, UPMC4,
 	MMCR0, PMC1, PMC2, SIA, MMCR1, PMC3, PMC4, L2CR, ICTC, THRM1,
 	THRM2, THRM3): Plop in the MPC750 SPR registers.
	(DABR): This is weird.  This was HID5, but the PPC spec says this
 	should be DABR; why did some random processor use it for something
 	else?  The HID5 entry dates back to the original checkin of the
	simulator code in 1995, so remove it.
	* sim_calls.c (register_names): Delete this; since the user can
	now change GDB's list of register names dynamically, we can't
	pretend there's a static mapping here.
	(sim_fetch_register, sim_store_register): Call GDB's REGISTER_NAME
 	function to get the register name.  That ought to be accurate.
  	However, we're changing a compile-time dependency (using the
 	REGISTER_NAMES macro) into a link- and run-time dependency
	(calling REGISTER_NAME, which happens to be a function call on the
	PPC).

1999-01-22  Jim Lemke <jlemke@cygnus.com>

	* igen.c(gen_semantics_[ch]): setup/use of new option
	(-o mpc860c0[=n]).
	interrupts.[ch](mpc860c0_instruction_program_interrupt): added.
	ppc-instructions(the four branch insn groups): detect problematic br's.
	psim.c(is_num - added, psim_options): Parse and init new option.
	These changes are currently under #ifdef WITH_OPTION_MPC860C0.

1998-12-01  Ken Raeburn  <raeburn@cygnus.com>

	* hw_nvram.c (hw_nvram_bcd): Force value to fit in 0..99.

Fri Nov 20 12:17:28 1998  Andrew Cagney  <cagney@b1.cygnus.com>

	* main.c (sim_io_poll_quit): Stub function.

	* events.c (SIM_EVENTS_POLL_RATE): Define.
	(sim_events_poll): Copy function from common/sim-events.c.
	(event_queue_init): Copy scheduling of sim_events_poll from same.

	* sim_callbacks.h, sim_calls.c (sim_io_poll_quit): New function,
 	poll the external environment.

1998-11-19  Michael Meissner  <meissner@cygnus.com>

	* ppc-instructions (is_{NaN,inf}): Use unsigned64 to get the
	fractional type, so that quiet NaN's aren't treated like
	Infinities.

Mon Sep 28 09:42:45 1998  Drew Moseley  <dmoseley@cygnus.com>

	* table.c (table_open): For cygwin hosts, we need to use the
 	return value from the read routine as the number of bytes to
 	process.  This apparently is due to text-mode vs binary-mode.  If
 	the mounts are done text-mode, then the size returnedby fstat()
 	may be different than the number of bytes "read" in text mode.

Sun Oct  4 00:50:47 1998  Felix Lee  <flee@cygnus.com>

	* emul_netbsd.c (do_open): fix order-of-evaluation problem.
	(do_close): ditto.
	(do_fstat): ditto.
	(do_lstat): ditto.

1998-09-03  Michael Meissner  <meissner@cygnus.com>

	* emul_{netbsd,unix}.c: Update copyright year.

Mon Jun 29 10:57:36 1998  Michael Snyder  <msnyder@cleaver.cygnus.com>

	* sim_calls.c (sim_fetch_register, sim_store_register):
	return zero when nothing to do.

1998-06-26  Michael Meissner  <meissner@cygnus.com>

	* configure.in (AC_CHECK_HEADERS): Don't check for sys/mount.h.
	* configure: Regenerate.
	* emul_{netbsd,unix}.c (toplevel): No longer try to include
	sys/mount.h. It conflicts on Linux when gnu libc2 is used.

Tue May 12 12:10:33 PDT 1998  James Ingham  <jingham@leda.cygnus.com>

	* Makefile.in: The run target depended on a target psim$(EXEEXT),
	but there was no such target, only plain psim.  So I changed the
	run target to depend on psim.

Sat May  2 01:10:12 1998  Stu Grossman  <grossman@babylon-5.cygnus.com>

	* aclocal.m4:  Remove defs of AM_EXEEXT and AM_CYGWIN32.  These are
	now defined in ../common/aclocal.m4, and the double definition causes
	problems with AC_SUBST of EXEEXT.
	* configure:  Regenerate.

Wed Apr 29 15:44:52 1998  Geoffrey Noer  <noer@cygnus.com>

	* aclocal.m4: new file for AM_EXEEXT macro
	* configure.in: call AM_EXEEXT
	* configure: regenerate with autoconf 2.12.1.
	* Makefile.in: add EXEEXT support

Sun Apr 26 15:31:55 1998  Tom Tromey  <tromey@creche>

	* configure: Regenerated to track ../common/aclocal.m4 changes.
	* config.in: Ditto.

Sun Apr 26 15:19:51 1998  Tom Tromey  <tromey@cygnus.com>

	* acconfig.h: New file.
	* configure.in: Reverted change of Apr 24; use sinclude again.
	Don't call AC_C_CROSS.

Fri Apr 24 14:16:40 1998  Tom Tromey  <tromey@creche>

	* configure: Regenerated to track ../common/aclocal.m4 changes.
	* config.in: Ditto.

Fri Apr 24 11:18:46 1998  Tom Tromey  <tromey@cygnus.com>

	* Makefile.in (top_builddir): New macro.
	(INTLLIBS): New macro.
	(INTLDEPS): Likewise.
	(psim): Depend on INTLDEPS; link against INTLLIBS.
	* configure.in: Call CY_GNU_GETTEXT.

Wed Apr 22 14:28:48 1998  Michael Meissner  <meissner@cygnus.com>

	* configure: Regenerate with autoconf 2.12.1.

Fri Mar 13 09:25:58 1998  Andrew Cagney  <cagney@b1.cygnus.com>

	* psim.c (psim_read_register, psim_write_register): Handle updates
 	for FPSCR.

	* registers.c (register_description): Reconize "FPSCR".

	* emul_netbsd.c (emul_netbsd_create): When FP available, enable
 	MSR FP exception mode. Do not enable FPSCR bits.
	* emul_unix.c (emul_unix_create): Ditto.

Tue Feb 17 12:48:58 1998  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_store_register, sim_fetch_register): Pass in
 	length parameter.  Return -1.

Mon Feb  9 14:13:14 1998  Andrew Cagney  <cagney@b1.cygnus.com>

	* ppc-instructions (fdiv, fdivs): Check for divide by zero.
	(is_invalid_zero_divide, invalid_zero_divide_operation): New
 	functions.

Wed Dec 10 17:38:28 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_load): Do not parse PROG using buildargv, use
 	raw value instead.

1997-11-05  Felix Lee  <flee@cygnus.com>

	* emul_chirp.c: #ifdef HAVE_UNISTD_H

Wed Oct 15 08:50:54 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* corefile.c (core_attach): Pad out allocated memory regions so
 	that they are always correctly aligned.
	(struct _core_mapping, core_map_attach, core_init,
 	new_core_mapping): Change free_buffer to type void*.

Mon Oct  6 18:09:26 1997  Michael Meissner  <meissner@cygnus.com>

	* sim_calls.c (zfree): Call free correctly.

Mon Sep 29 10:05:01 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (zfree): Use free, not mfree.
	(sim_io_flush_stdoutput): Replace gdb_flush with callback ->
 	flush_stdout.

Fri Sep 26 09:50:29 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* ppc-instructions (sraw, slw, srw): From Charles Lefurgy, Fix
 	mask extracting shift amount. Correctly condition for setting XER
 	in sraw.
 	(ldhau): From Johannes Reisinger, update rA after load.

Tue Sep  9 22:13:23 1997  Felix Lee  <flee@cygnus.com>

	* basics.h (CONCAT*): token-pasting macros, if ALMOST_STDC,
 	for MSVC.
	* words.h: __int64 instead of long long for MSVC.

Wed Aug 27 10:24:15 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_create_inferior): Check the simulator was
 	initialized before creating inferior.

	* idecode_expression.h (ALU_END): From Charles Lefurgy - Extract
 	sign bit using 64 bit and not a 32 bit mask.

Wed Aug 27 10:15:48 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_load): From Ian Lance Taylor - free argv after
 	it has been used, not before.

Tue Aug 26 10:41:35 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_kill): Delete.
	(sim_create_inferior): Add ABFD argument.
	(entry_point): Delete variable.
	(sim_load): Move setting of PC from here.
	(sim_create_inferior): To here.

Mon Aug 25 16:17:06 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_open): Add ABFD argument.

Thu Jul  3 10:18:06 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* ppc-instructions (PPC_INSN_INT): From Michael Thies - Monitoring
 	CR register updates dependant on RC value had logic backwards.

	* ppc-instructions (Load String Word Immediate): From Brad Parker
 	- sense of wrap test in check for overwriting RA wrong.
	(Load String Word Indexed): Ditto.

	* configure.in: From Erik Landry - set sim_default_model not
 	sim_model for sim-default-model option.
	* configure: Regenerate.

	* interrupts.c (check_masked_interrupts): Schedule a hardware
 	interrupt delivery when FP interrupts get enabled.
	(program_interrupt): Generate FP exceptions instead of aborting.
	(deliver_hardware_interrupt): Deliver a FP exception if so
 	enabled.

	* registers.h: Add definition of fpscr_vx_bits.

	* idecode_expression.h (FPSCR_END): Always update FEX and VX bits
 	in FPSCR.
	(FPSCR_END): Explicitly check for possible floating point
 	exception conditions.
	(FPSCR_BEGIN): Simplify.

	* ppc-instructions (Move From FPSCR): Enable.
	(Move To FPSCR Bit 1): Ditto.
	(Move To FPSCR Bit 0): Ditto.
	(Move To FPSCR Field Immediate): Ditto.
	(Move to Condition Register from FPSCR): Simplify.
	(invalid_arithemetic_operation): Generate a QNaN when invalid
 	operation exception disabled.

Tue May 20 10:22:50 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_open): Add callback argument.
	(sim_set_callbacks): Delete.

Tue Apr 22 22:36:57 1997  Mike Meissner  <meissner@cygnus.com>

	* sim_callbacks.h (error): Make declaration match gdb's.
	* main.c (error): Ditto.

Fri Apr 18 17:03:09 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* sim_calls.c (sim_stop_reason): Simplify.  Was running implies
 	stopped/SIGINT. Exit implies a status code.

	* psim.c (cntrl_c_simulation): From main.c.  Event function that
 	halts the simulator.
	(psim_stop): New. Asynchronously schedule a stop simulator event.
	(psim_run_until_stop): Delete. Made redundant by psim_stop.

	* main.c (cntrl_c): Update.
	(cntrl_c_simulation): Moved to psim.c.

	* sim_calls.c (sim_stop): New function. Use psim_stop which
 	schedules a stop event.
	(sim_resume): Drop SIGINT handler, now in gdb/main.c.
	(sim_resume): Use psim_run as stop variable no longer needed.

Fri Apr 18 17:03:08 1997  Andrew Cagney  <cagney@b1.cygnus.com>

	* psim.c (psim_options): Handle -E option correctly.
	(psim_usage): Document.

Thu Apr 17 03:28:03 1997  Doug Evans  <dje@canuck.cygnus.com>

	* psim.c (psim_options): Ignore -E option (sets endianness).
	* sim_calls.c: #include bfd.h.
	(entry_point): New static local.
	(sim_load): Return SIM_RC.  New arg abfd.  Set start address from bfd.
	(sim_create_inferior): Return SIM_RC.  Delete arg start_address.

Tue Apr 15 14:57:18 1997  Ian Lance Taylor  <ian@cygnus.com>

	* Makefile.in (INSTALL): Set to @INSTALL@.
	(INSTALL_XFORM, INSTALL_XFORM1): Remove.
	(install): Depend upon installdirs.  Use $(program_transform_name)
	directly, rather than using $(INSTALL_XFORM).
	(installdirs): New target.

Fri Apr  4 17:54:36 1997  Jim Wilson  <wilson@cygnus.com>

	* Makefile.in (tmp-hw, tmp-pk): Use for loop to eliminate duplicates
	rather than the non-portable cat -n.

Mon Apr 14 16:29:51 1997  Ian Lance Taylor  <ian@cygnus.com>

	* Makefile.in (INSTALL): Change install.sh to install-sh.

Tue Apr  1 18:15:14 1997  Jim Wilson  <wilson@cygnus.com>

	* ppc-instructions: Change milhwu to mulhwu.

Wed Apr  2 15:38:08 1997  Doug Evans  <dje@canuck.cygnus.com>

	* sim_calls.c (sim_open): New arg `kind'.

Wed Apr  2 14:51:17 1997  Ian Lance Taylor  <ian@cygnus.com>

	* COPYING: Update FSF address.

Tue Mar 25 16:17:59 1997  Andrew Cagney  <cagney@kremvax.cygnus.com>

	* main.c (sim_io_read_stdin): Only compile unbuffered IO code if
 	all the required features are supported by the host OS.

Tue Mar 25 12:13:02 1997  Andrew Cagney  <cagney@kremvax.cygnus.com>

	* emul_bugapi.c (emul_bugapi_create): Guard against NULL images.

	* configure.in (enable-sim-endain): Correct typo in usage (from
 	Erik Landry <landry@ENGR.ORST.EDU>).
	* configure: Re-generate.

Fri Mar 14 18:23:02 1997  Andrew Cagney  <cagney@kremvax.cygnus.com>

	* Makefile.in (targ-vals.def): Re-do rule so that it works with
 	FreeBSD's make.  Didn't like $<.

Thu Mar 13 12:55:48 1997  Doug Evans  <dje@canuck.cygnus.com>

	* sim_calls.c (sim_open): New SIM_DESC result.  Argument is now
	in argv form.
	(other sim_*): New SIM_DESC argument.

Thu Feb 13 10:35:14 1997  Andrew Cagney  <cagney@phydeaux.cygnus.com>

	* ppc-opcode-simple-array, ppc-opcode-simple-goto,
 	ppc-opcode-simple-switch, ppc-opcode-complex-array,
 	ppc-opcode-complex-goto, ppc-opcode-complex-switch,
 	ppc-opcode-jump, ppc-opcode-goto, ppc-opcode-flat: Delete,
 	superseeded by --sim-decode-mechanism option.

	* ppc-opcode-simple, dc-simple: Rename to be 8.3
	* ppc-opcode-complex, dc-complex: Ditto.
	* ppc-opcode-stupid, dc-stupid: Ditto.
	* ppc-opcode-test-1, dc-test.01: Ditto.
	* ppc-opcode-test-2, dc-test.02: Ditto.

	* configure.in (--enable-sim-opcode): Change prefix to dc- instead
 	of ppc-opcode-.

Wed Feb 12 19:33:45 1997  Andrew Cagney  <cagney@phydeaux.cygnus.com>

	* Many of the ppc-opcode-* files are identical baring the type of
 	lookup table.  Instead of having multiple tables, igen can do this
	via an additional option.

	* ld-decode.h, ld-decode.c (force_decode_gen_type): New function,
 	allow the type of generated table specified in the decode file to
 	be overridden.

	* ld-decode.c (load_decode_table): Allow the table type to be
 	overridden.

	* igen.c (main): Add -T <mechanism> option so that an overriding
 	instruction decode mechanism can be specified.

	* configure.in: New option --sim-decode-mechanism to control
 	igen's new -T <mechanism> flag.
	* Makefile.in (IGEN_FLAGS): Add IGEN_IDECODE_MECHANISM set by the
 	configure script.
	* configure: Regenerate.

Tue Feb 11 13:49:10 1997  Michael Meissner  <meissner@tiktok.cygnus.com>

	* events.c (event_queue_create): Don't use NULL to initialize an
	integer field.
	(even_queue_{init,schedule_after_signal,tick}): Conditionalize use
	of sigprocmask to appropriate autoconf test.

	* main.c ({cntrl_c,main}): Use RETSIGTYPE for signal return type,
	don't assume void.
	* sim_calls.c (sim_{ctrl_c,resume}): Ditto.

	* Makefile.in (callback.o): Define HAVE_CONFIG_H, so callback.c
	includes our config.h.

Tue Feb  4 13:42:59 1997  Doug Evans  <dje@canuck.cygnus.com>

	* configure.in: Fix typo in test for callback.c.
	* configure: Regenerated.

Fri Feb  7 10:04:25 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* emul_chirp.c (emul_chirp_create): Handle a virtbase of -1 being
 	found in the device tree.

Wed Feb  5 10:56:27 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* Property create/initialization still wasn't correctly ordered.
  	Should be delaying everything related to ihandle creation until
 	after the rest of the tree has been established.

	* device.c (device_find_ihandle_runtime_property): Update.
	(device_add_ihandle_runtime_property): Update.

	* tree.c (parse_ihandle_property): Delay lookup of the device to
 	be opened until the ihandle initialization phase.
	* tree.c (print_properties): Update.

Wed Feb  5 10:56:27 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* gen-icache.c (print_icache_extraction): Add a reason parameter.
  	Augment each extracted field with a comment citing the codes
 	origin.  Should simplify tracking down incorrect cache
 	extractions.

Tue Feb  4 17:44:51 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* gen-icache.c: Generalize code handling XXX_is_NNN so that it
 	works for normal and boolean table entries.

	* psim.c (psim_write_memory): last_cpu == -1 or nr_cpus is now
 	valid.  Handle this just like *_{read,write}_register now handles
 	it.

Mon Feb  3 17:18:16 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* events.c (insert_event_entry): Correct loop termination
 	assertions.

Fri Jan 31 16:20:26 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* psim.c (psim_options): Add new option -c for max-iterations or
 	count.
	(psim_usage): Document.
	(psim_max_iterations_exceeded): New function, abort simulation if
 	max iterations exceeded.

	* gen-idecode.c: Re-work the table lookup code so that it assumes
 	that the entry is a leaf by default.  Simplify the boolean table
 	entry code so that it involves a mask + test instead of shift +
 	shift + mask + test.

	* gen-idecode.c: Correct generated igen body so that it no drops
 	or doubles clock interrupts.


Thu Jan 30 11:23:20 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* Makefile.in (BUILT_SRC_WO_CONFIG): Change targ-vals.* to
 	@sim_targ_vals@

	* configure.in (sim_callback, sim_targ_vals): Set sim_targ_valls
 	if common callback is present.

Wed Jan 29 12:32:41 1997  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in (sim_callback): If the gdb is post 4.16, configure
	callback support from the common directory.
	* configure: Regenerate.

	* Makefile.in (BUILT_SRC_WO_CONFIG): Add targ-vals.{h,def} and
	targ-map.c.
	(GDB_OBJ): Add callback support configured in.
	(gentmap,targ-vals.def): Build from common directory.
	(targ-vals.h,targ-map.c): Build by running gentmap.
	(callback.o): Build from source in common directory.
	(targ-map.o): Add dependency.
	(clean): Remove gentmap.

Wed Jan 29 12:14:19 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* igen wasn't aborting if the opcode table contained no valid
 	fields.

	* misc.c (name2i): Possibly abort if an invalid name is
 	encountered.
	* ld-decode.c: Abort if the table type isn't found.

Wed Jan 29 12:14:19 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* When performance monitoring is disabled, it is still possible to
 	determine the simulation speed by looking at the number of elapsed
 	ticks recorded by the event queue.

	* psim.c (psim_write_register, psim_read_register): Force the cpu
 	to zero when it is either of `-1' or `nr_cpus'.  In both cases the
 	next cpu would be zero any way.

	* mon.c (mon_print_info): If possible, print the system cycle
 	performance.  This is an indication of the number of instructions
 	per second.

Wed Jan 29 12:14:19 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* The code to allow an event queue to be updated during a signal
 	was missing.  For main.c, a cntrl-c simulation termination wasn't
 	handled cleanly.

	* The simulation would not correctly restart if an event requested
 	that the simulation be halted.

	* psim.c (psim_options): Add hack to -i option to optionally
 	include a level vis -i2.
	(psim_usage): Document.

	* main.c (cntrl_c, cntrl_c_simulation): New functions.  When a
 	cntrl-c occures schedule an event to halt the simulation.
	(main): Catch CNTRL-C signals with the function cntrl_c.

	* events.c (event_queue_process): Mask interrupts while
 	manipulating the async event queue.
	(event_queue_init): Ditto.
	(event_queue_schedule_after_signal): Ditto.

	* events.c (event_queue_process): Mark the event queue as being in
 	the processing state when processing has started.  Adjust code
	so that it is tolerant of halts.
	(event_queue_init): Start the event queue out with processing
 	false.
	(event_queue_tick): Check that processing isn't still being
 	performed.

	* gen-idecode.c (print_run_until_stop_body): Call
 	event_queue_process_events to clear possibly pending events before
 	starting a simulation run.  Re-arange main loop so that simulator
 	is correctly restarted when an event halts the simulation.

	* psim.c (psim_halt): Handle an event halting the simulation.
	* psim.c (psim_init): Adjust initial cpu - == -1 - to match
 	reworked idecode.

Wed Jan 29 12:14:19 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* ppc-opcode-complex: Correct typo - was expanding ORA instead of
 	RA.  Based on instruction frequency stats, expand additional
 	instructions.
	* ppc-instructions: Change all `RA == 0' to RA_is_0.

	* ppc-opcode-stupid: Move all but the basic table in -complex into
 	here.  Update to new format.

	* Makefile.in (tmp-defines): New target. Force defines.h to always
 	be built.  Hence get ppc-opcode-goto to build.

Tue Jan 28 13:00:19 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* hw_com.c (hw_com_instance_read, hw_com_instance_write):
 	Implement.

Thu Jan 23 09:07:26 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* hw_trace.c (hw_trace_init_data): Delete.  The trace options need
 	to be initialized independant of the rest of the simulation
 	initalization.  Otherwize a trace option explictly set from gdb
 	could be overridden by hw_trace.

	* psim.c (psim_options): Clarify reason why the trace ioctl occures.

	* FIXME: The trace code is too scattered - hw_trace.c, psim.c,
 	debug.c.  It could be much simpler.

Thu Jan 23 09:07:26 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* Some devices support removable media.  Add hooks to the disk
 	device so that it supports this.

	* device.c (device_add_string_array_property,
 	device_find_string_array_property): New functions, manipulate
 	properties containing an array of strings.
	(device_find_string_property): Allow a string array.
	(device_init_static_properties): Update.
	(device_init_runtime_properties): Update.

	* hw_disk.c (hw_disk_ioctl): Add ioctl for changing the disk
 	media.  If no file image is specified, use the next one in the
 	image property list.
	(hw_disk_init_address): Change the file property so that it is a
 	string array - use the first entry for the initial file image.

	* tree.c (print_string_aray_property): New function - print a
 	string array.
	(print_properties): Adjust.
	(print_string): Write a string, handling double quotes.

	* device.h: Define an ioctl to `change-media' with an optional new
 	media image.

	* hw_disk.c: Allow floppy disk devices to be specified.

	* psim.c (psim_command): New function, parse more complex psim
 	commands such as "change-media" and "trace".
	* sim_calls.c (sim_do_command): Use.

Wed Jan 22 09:38:33 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* For expressions like (RA == 0) that are entered in to the cache
 	as RA_is_0. If possible generate the result of the expression so
 	that the compiler gets a better chance of eliminating dead
 	branches.

	* gen-icache.c (print_icache_extraction): For a cache entry of
 	the form <name>_is_<const> where it is a boolean field, generate
 	the result of the expression instead of the expression its self.
	(print_icache_body): Remove code that was looking for *_is_0 and
 	then generating corresponding definitions.

	* gen-icache.c (print_icache_struct): If there is no cache, do not
 	output expressions in idecode.h file.

	* gen-icache.c (print_icache_body): Output them here.

	* ppc-opcode-complex: Clarify constant values for SPR==LR register
 	expansion.

	* ppc-cache-rules (RA_is_0, SPR_is_256): Two new cache entries.

Wed Jan 22 12:24:52 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* The code that put values in and extracted values from the cache
 	was too compilicated.  The cache table did not allow values to be
 	computed from cache entries.  #defines could only be used when a
 	cache was present, remove the restriction.

	* ld-cache.h, ld-cache.c: Add a new cache entry type - SCRATCH.  A
 	scratch variable is defined when a cache entry is beinf
 	filled. Change the definition of a COMPUTE variable to be defined
 	when the cache entry is being used.
	* gen-icache.c: Update.

	* ld-cache.h, ld-cache.c: Change field names so that their meaning
 	is more obvious.  old_name->field_name, new_name->derived_name.
	* gen-icache.c: Update

	* gen-icache.h, gen-icache.c (print_icache_body): Make the three
 	different types of cache code - put into cache, extract from
 	cache, no cache - an explicit argument to print_icache_body.
	* gen-icache.c (print_icache_extraction): Ditto.

	* gen-semantics.c (print_c_semantic): Update use.
	* gen-idecode.c (print_jump_insn): Update use.
	* gen-icache.c (print_icache_function): Update use.

	* igen.c (main): Change 'R' option so that it does not force the
 	cache.

	* configure.in (enable-sim-icache): Clarify description.  Make
 	#define one of the defaults regardless of the cache.  Probably
 	should revamp and add a separate option.

Tue Jan 21 13:26:10 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* pk_disklabel.c (block_is_fdisk): Tidy up traces - use dos
 	partition numbering.
	(pk_disklabel_create_instance): Partition 1..4 are valid - not
 	1..3.
	(is_iso9660): New function, verify a CD9660 File system.
	(pk_disklabel_create_instance): Start expanding so that active
 	partition selection is supported.

Mon Jan 20 11:20:15 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* The cap object was retaining a reference to the instance of a
 	device after it was deleted. Instead add and remove cap's from the
 	cap db as they are created and deleted.  This ensuring that a
 	capibility is only used during the lifetime of the corresponding
 	object.

	* cap.h, cap.c: Correct cap type - was signed32 should be
 	signed_cell.

	* cap.c (cap_add, cap_remove): New methods for cap object that
 	allow the explicit addition and removal of internal objects that
 	the cap knows about.

	* cap.c (cap_init): Rewrite.  Verify that the only objects
 	remaining in the cap data base are those that were entered first.
  	Thse objects will be the permenant ones.
	* device.c (device_init_address): Remember to initialize the cap
 	database.

	* device.c (device_create_instance_from): Explicitly add device
 	instances to the cap database.  Simplify create code.
	(device_instance_delete): Explicitly remove device instances from
 	the cap database.

	* device.c (device_create_from): Explicitly add a device to the
 	cap data base.

	* device.c (device_create_from): Always set the cap members.

	* hw_disk.c: Output the instance when tracing.

Sun Jan 19 16:44:29 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* tree.c (split_device_specifier): Add support for aliases when
 	looking up a device. Now needs a device as an argument.
	(split_property_specifier): Ditto.

Sun Jan 19 15:28:23 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* The memory "claim" and "release" methods take an address and
 	size as arguments.  These may be multi cell values. Initially fix
 	the memory code so that they check/detect this.  Leave the
 	adjustment of any clients to later.

	* hw_memory.c (hw_memory_instance_claim,
 	hw_memory_instance_release): Handle multi-cell memory devices.

	* hw_memory.c (hw_memory_instance_claim): Be tolerant towards the
 	release of memory regions that were not claimed.

Fri Jan 17 12:01:07 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* device.h, device.c (device_instance_call_method): Correct return
 	type - can return either 0 or -1, hence should be a signed type.
	* device_table.h: Ditto.

	* hw_memory.c (hw_memory_instance_claim,
 	hw_memory_instance_release): Update.
	* hw_disk.c (hw_disk_max_transfer, hw_disk_block_size,
 	hw_disk_nr_blocks): Ditto.

Fri Jan 17 11:50:13 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* emul_chirp.c (chirp_emul_claim): Implement using the "claim"
 	method belonging to "/chosen/memory".
	(chirm_emul_release): Ditto.

	* Makefile.in (LIB_INLINE_SRC): Remove emul_* from list of files
 	that are inlined.  These modules are called via a table and are
 	not made inline.

	* hw_init.c (update_for_binary_section): Fix failure to allocate
 	memory used by the binary in real-mode executions. If "claim"
 	property is present, allocate memory from the "/chosen/memory"
 	device.

	* emul_chirp.c (emul_chirp_create): Specify that memory should be
 	claimed when loading a real image.

	* hw_memory.c (hw_memory_instance_claim): Don't page align memory
 	allocations.

	* hw_memory.c (hw_memory_instance_release): Avoid infinite loop
 	when merging adjacent memory chunks.

Thu Jan 16 08:51:25 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* vm.h (vm_data_map_read_buffer, vm_data_map_write_buffer): Add
 	optional PROCESSOR & CIA args so that this routine also abort an
 	access.

	* vm_n.h (vm_data_map_read_N, vm_data_map_write_N): For a
 	miss-aligned access when a transfer fails abort.

	* emul_bugapi.c (emul_bugapi_do_write): Use emul_read_buffer
 	instead of the vm_read_buffer.
	* emul_netbsd.c (do_write): Ditto.
	* emul_unix.c (do_unix_write): Ditto.

Wed Jan 15 14:38:25 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* configure.in (--enable-sim-jump): Default is NULL and not -E.
	* configure: Regenerate.

	* basics.h (__attribute__): Enable attributes if GCC >= 2.6.
	(UNUSED): Only enable UNUSED if GCC >= 2.7.

	* gen-icache.c (print_icache_extraction): Print UNUSED macro
 	instead of explicit __unused__ attribute.
	(print_icache_body): Ditto.
	* idecode_expression.h (FPSCR_BEGIN): Use UNUSED.

Wed Jan 15 13:54:50 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* cpu.h, cpu.c (cpu_synchronize_context): Add CIA argument as
 	reference point.

	* vm.c (vm_synchronize_context): Add PROCESSOR and CIA as
 	arguments so that there is a reference point for recovery.
	(vm_synchronize_context): Pass processor+cia for errors.
	(om_unpack_sr): Ditto.
	(om_unpack_srs): Ditto.
	* vm.c (vm_create): Review error messages.

	* vm.c: Include "cpu.h" so that cpu_error is visible.

	* ppc-instructions (Return From Interrupt): Pass CIA.
	(Instruction Synchronize): Ditto.
	* psim.c (psim_init): Ditto.

Wed Jan 15 12:25:11 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* cpu.h, cpu.c (cpu_error): Aborts simulation with error message,
 	but also saves current processor state.

	* basics.h: Move #include <stdarg.h> to here from device_table.h.

	* interrupts.c (perform_oea_interrupt): Use.  No longer loose CIA
 	when simulation aborted.
	(program_interrupt): Ditto.
	(floating_point_unavailable_interrupt): Ditto.
	(alignment_interrupt): Ditto.
	(floating_point_assist_interrupt): Ditto.
	(perform_oea_interrupt): Ditto.
	(machine_check_interrupt): Ditto.

Tue Jan 14 12:19:10 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* ppc-instructions (Move from Special Purpose Register): Support
 	move from DEC.

Mon Jan 13 16:58:12 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* debug.h, debug.c: Add "interrupts" trace option.

	* interrupts.c (data_storage_interrupt): Add tracing.
	(machine_check_interrupt): Ditto.
	(instruction_storage_interrupt): Ditto.
	(alignment_interrupt): Ditto.
	(program_interrupt): Ditto.
	(floating_point_unavailable_interrupt): Ditto.
	(system_call_interrupt): Ditto.
	(floating_point_assist_interrupt): Ditto.
	(deliver_hardware_interrupt): Ditto.

	* interrupts.c (program_interrupt): For UEA mode, halt the
 	processor - so that the current state is saved - instead of
 	aborting.
	(floating_point_unavailable_interrupt): Ditto.
	(floating_point_assist_interrupt): Ditto.

Thu Jan  2 09:10:41 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* interrupts.c (perform_oea_interrupt): Halt rather than abort on
 	a double interrupt.

Wed Jan  1 22:54:52 1997  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* ppc-instructions (Store Multiple Word, Load Multiple Word):
 	Enable.

	* tree.c (print_properties): For an array consider printing it out
 	as an integer array.

	* hw_memory.c (hw_memory_init_address): If an "available" property
 	is present, use that to initialize the available memory instead of
 	using the reg property.

	* emul_generic.c (emul_add_tree_hardware): Add "available"
 	property to memory device.

Fri Dec 20 13:19:07 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* ppc-instructions (Rotate Left Word then AND with Mask): Enable.

	* device.c (device_instance_call_method): Was only looking at the
 	first method.

	* hw_disk.c (hw_disk_nr_blocks): Implement #blocks method.
	(hw_disk_block_size): Implement block-size method.
	(hw_disk_max_transfer): Implement max-transfer method.

	* hw_phb.c (hw_phb_init_address): Reinit the rest of the PHB.

	* emul_chirp.c (chirp_emul_instance_to_path): Recover from an
 	invalid ihandle.
	(chirp_emul_instance_to_package): Ditto.
	(chirp_emul_method): Ditto.
	(chirp_emul_read): Ditto.
	(chirp_emul_write): Ditto.
	(chirp_emul_close): Ditto.
	(chirp_emul_seek): Ditto.
	(chirp_emul_package_to_path): Ditto (for phandle).
	(chirp_emul_package_to_path): Return the length.

	* psim.c (psim_merge_device_file): Allow continuation lines.

Thu Dec 19 11:09:43 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* emul_chirp.c (chirp_emul_boot): Implement. Well report the new
 	string and exit.

	* emul_chirp.c (chirp_emul_exit): Correct type of args struct
 	members - *_cell not host dependant int.

Wed Dec 18 17:49:59 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* interrupts.c (perform_oea_interrupt): Print additional
 	information if a double interrupt is encountered.

Wed Dec 18 17:49:59 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* psim.c (psim_merge_device_file): Tolerate an incorrect file-name
 	being specified with the -f option.
	(psim_merge_device_file): Correct check for end of string.

Wed Dec 18 17:49:59 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* emul_chirp.c (chirp_emul_peer): Was falling off the end of the
 	list of devices. Return zero to the client instead.
	* emul_chirp.c (chirp_emul_child): Ditto
	* emul_chirp.c (chirp_emul_parent): Ditto

	* device.c (device_root): Assert assumption about the device being
 	valid.

Tue Dec 17 15:12:38 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* emul_chirp.c (emul_chirp_create): Add description property to
 	each significant node in the device tree.
	* emul_bugapi.c (emul_bugapi_create): Ditto.

Fri Dec 13 14:30:31 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* main.c (sim_io_read_stdin): For a single byte STDIO read, use a
 	tempoary two byte buffer.  Single byte read with fgets will not
 	work.
	* main.c: Include errno.h.
	(sim_io_read_stdin): For non-STDIO, make it work.

	* emul_chirp.c (chirp_emul_read): Return the correct error status.

Fri Dec 13 14:30:31 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* std-config.h (WITH_STDIO): Don't hard-wire the STDIO mechanism.
  	Instead have each emulation default it to DO_USE_STDIO.

	* emul_generic.c (emul_add_tree_options): Select the STDIO I/O
 	mechanism as the default if enabled or if nothing selected.

	* sim_calls.c (sim_io_read_stdin): Passify GCC's desire for a
 	return value.
	(sim_io_write_stdout): Ditto.
	(sim_io_write_stderr): Ditto.
	* main.c (sim_io_write_stdout): Ditto.
	(sim_io_write_stderr): Ditto.
	(sim_io_read_stdin): Ditto.

Tue Dec 10 10:31:48 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_chirp.c (emul_chirp_instruction_call): Make *printf calls
	type correct.
	* vm.c (om_effective_to_virtual): Ditto.
	* events.c (event_queue_schedule{,_after_signal}): Ditto.
	(event_queue_{deschedule,process}): Ditto.
	* hw_htab.c (htab_decode_hash_table): Ditto.
	(htab_map_{page,binary}): Ditto.
	* hw_opic.c (hw_opic_init_data): Ditto.
	(handle_interrupt): Ditto.
	(do_processor_init_register_{read,write}): Ditto.
	(write_vector_priority_register): Ditto.
	({read,write}_destination_register): Ditto.
	(do_suprious_vector_register_{read,write}): Ditto.
	(do_current_task_priority_register_N_{read,write}): Ditto.
	(do_timer_frequency_reporting_register_{read,write}): Ditto.
	(do_timer_N_{current,base}_count_register_{read,write}): Ditto.
	(do_ipi_N_dispatch_register_write): Ditto.
	(do_vendor_identification_register_read): Ditto.
	(do_feature_reporting_register_N_read): Ditto.
	(do_global_configuration_register_N_{read,write}): Ditto.
	* hw_phb.c (hw_phb_attach_address): Ditto.
	(hw_phb_unit_decode): Ditto.
	(hw_phb_address_to_attach_address): Ditto.
	(hw_phb_io_{read,write}_buffer): Ditto.
	* hw_ide.c (setup_fifo): Ditto.

	* sim_calls.c ({defs,callback,remote-sim}.h): Find gdb include
	files via -I<dir> instead of using "../../gdb/" prefixes.

Tue Dec 10 10:12:44 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* debug.h: Add tracing for the pal device.
	* hw_pal.c: Update.

	* emul_chirp.c (chirp_emul_getprop): More tracing.

Tue Dec 10 10:12:44 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* device.h, device.c (device_find_ihandle_runtime_property): New
 	function. Reverse of add_ihandle_runtime property.
	(device_init_runtime_properties): Use it.

	* device.c (find_property_entry): New function returns the
 	internal property spec.
	(device_set_property): Use.
	(device_find_property): Use.

Tue Dec 10 10:12:44 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* psim.c (psim_merge_device_file): Strip newline from device
 	specs.

Tue Dec 10 10:12:44 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* hw_htab.c (htab_map_binary): For overlapping text / data maps
 	merge the two.  Also check that the merge is safe.

	* emul_chirp.c (emul_chirp_create): Add a description property to
 	the pte's so that they are easier to identify.

	(emul_chirp_create): Don't specify a load address for the CHRP
 	image.  Always use the values specified by the executable.

	* hw_htab.c (htab_map_page): Abort if a duplicate map is
 	encountered.

Mon Dec  9 12:08:46 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* hw_htab.c (htab_map_page): Formatting.

	* emul_chirp.c (emul_chirp_instruction_call): Check for a NULL
 	method name when handling the client call. Also check for other
 	bad call arguments.

	* emul_chirp.c (emul_chirp_create): Allow real-mode?, real-base,
 	etc to be overriden.

Mon Dec  9 12:08:46 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* os_emul.c (os_emul_create): Use tree find property instead of
 	device find property - sigh.

Thu Dec  5 10:46:42 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* 961205: Release snapshot 961205.

Thu Dec  5 10:46:42 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* configure.in (hostbitsize, bitsize): Fix typo in error message -
 	cannot contain a comma.
	(sim-warnings): Check for more potential errors.

	* psim.c (psim_usage): Add -f <file> option.  Specifies a file
 	containing device tree specifications that should be merged into
 	the device tree.

	* configure.in: Sort options.
	* configure: Rebuild

Wed Dec  4 13:57:31 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* psim.c (psim_usage): Add -n option - specify number of
 	processors.

	* emul_chirp.c: Add description.
	* emul_bugapi.c: Ditto.
	* emul_unix.c: Ditto.
	* emul_netbsd.c: Ditto.

Fri Nov 29 11:12:22 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* hw_pal.c (hw_pal_attach_address): New function, if an attach is
 	encountered, assume that it is the single disk.
	* hw_pal.c: Add generic device/size decode methods.

	* hw_nvram.c (hw_nvram_init_address): Use the first nonzero reg
 	property entry when determining the nvram size.

	* hw_core.c: Add generic address/size decode methods.

	* emul_chirp.c (emul_chirp_instruction_call): Return and trace
 	nonzero status from client functions.

	* main.c (error): Always include a cariage return when writing out
	errors.

Wed Nov 20 00:36:55 1996  Doug Evans  <dje@canuck.cygnus.com>

	* sim_calls.c (sim_resume): Reset sim_should_run if single
 	stepping.

Thu Nov 28 13:19:46 1996  Andrew Cagney  <cagney@kremvax.tpgi.com.au>

	* emul_bugapi.c (emul_bugapi_do_diskio): Add support for multiple
 	optional disks.

	* emul_generic.c (emul_add_tree_hardware): Drop the dummy eeprom.
  	Attach the pal - for I/O - as a pseudo device haning from the
 	firmware sub tree.

	* emul_bugapi.c (emul_bugapi_create): Add a small memory device to
 	the device tree at the address of the hi-mem interrupt vector
 	addreses.  Used by bugapi to establish its trap instructions.

	* debug.h: Add a new macro DITRACE for tracing device instances.

	* debug.h: Extend the DTRACE macro so that it can also tests for
 	device specific tracint.

	* device.h, device.c (device_trace): Add method to determine
 	device specific tracing.
	(device_init_address): Set the devices tracing level.

Thu Nov 21 12:05:32 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* tree.h, tree.c (tree_device): New files - separate out the
 	device parser and other tree operations from the device.

	* inline.h, inline.c (INLINE_TREE): Add.
	* device.h, device.c (device_tree_add_parsed): Delete.
	* Makefile.in (tree.c): Add rules for new file.
	* Makefile.in: Better order the emul_* files.

	* emul_generic.c (emul_add_tree_hardware): Update.
	* emul_netbsd.c (emul_netbsd_create): Update.
	* emul_unix.c (emul_unix_create): Ditto.
	* emul_chirp.c (emul_chirp_create): Ditto.
	* emul_bugapi.c (emul_bugapi_create): Ditto.
	* psim.c (psim_tree): Ditto.
	* hw_init.c: Ditto.

	* emul_generic.h: Include tree.h
	* Makefile.in: Add to EMUL_GENERIC_H dependencies.

	* device.h, device.c (device_root): New function - returns the
 	root of the tree.
	* corefile.c: Use.

	* device.h, device.c (device_clean): New function, clean up device
 	ready for next simulation run. This includes things like deleting
 	interrupt edges and properties created during the simulation and
 	also scrubbing any pre-defined properties.
	* tree.c (tree_init): Use.

	* device.h, device.c (device_init_static_properties): New
 	function.  Initialize any static predefined properties.  By static
 	we mean those that have values that can be determined before the
 	device tree initialization has started.
	* tree.c (tree_init): Use.

	* device.h, device.c (device_init_address): Add code to
 	check/verify the devices #address-cells and #size-cells.
	(device_add_integer_property): Delete corresponding code.
	(device_nr_address_cells, device_nr_data_cells): Check for
	property when returning value.

	* device.h, device.c (device_init_runtime_properties): New
 	function.  Initialize those properties that are not `static'.  At
 	present the only such property is the ihandle.
	* tree.c (tree_init): Use.

	* device.h, device.c (reg, ranges): Rework these so that they use
 	an array of the fundamental type - single reg or single range
 	entry.

	* device.h, device.c (device_add_ihandle_runtime_property):
 	Re-implement the adding of an ihandle during tree construction so
 	that it better fits in with device initialization.

Thu Nov 21 12:05:32 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.h, device.c (device_ioctl): Add additional argument -
 	request - so that the caller must always specify the type of
 	the ioctl request.

	* device_table.h: Update.
	* hw_trace.c (hw_trace_ioctl): Ditto.
	* hw_vm.c (hw_vm_ioctl_callback): Ditto.
	* hw_init.c (hw_stack_ioctl_callback): Ditto.
	* psim.c (psim_options): Ditto.

Thu Nov 21 12:05:32 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* BUGS: Updated a bit.

Wed Nov 20 14:06:37 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_opic.c: Finish - third round.

Wed Nov 20 12:02:08 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_glue.c (hw_glue_io_read_buffer_callback): Fix miscalc of glue
 	reg index.
	(hw_glue_io_write_buffer_callback): Ditto.

Tue Nov 19 21:17:08 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* events.c (event_queue_process): Was incorrectly consuming future
 	events on the queue when they should be left alone.

	* debug.h, debug.c (events): Add support for event queue tracing.
	* events.c: Add event tracing.

	* debug.h, debug.c: Order device trace options.

Fri Nov 15 15:23:39 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* pk_disklabel.c (pk_disklabel_create_instance): Fix up some
	warnings generated by GCC.

Sun Nov 17 17:59:14 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* sim-endian.h: Add LE versions of byte swap macros.  Needed for
 	PCI devices which are little-endian.

	* sim-endian-n.h (endian_le2h_N, endian_h2le_N): Ditto

Sun Nov 17 17:59:14 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_iobus.c (hw_iobus_attach_address_callback): Change the iobus
 	so that it is implementing a 1-1 address map.

	* emul_generic.c (emul_add_tree_hardware): Adjust.

	* emul_generic.c (emul_add_tree_hardware): Don't add the nvram as
 	a default.

Sun Nov 17 17:59:14 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (split_find_device): Be tolerant of missing unit
 	addresses.

Fri Nov 15 16:49:49 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* basics.h (port_direction): New type, specify the direction of
 	any `port'.

	* device.h, device.c (device_interrupt_decode): Include
 	specification of port direction in operations.
 	(device_interrupt_encode): Ditto.

	* device_table.h: Add a direction field to the interrupt port
 	table.

	* device.c (device_tree_add_parsed): Specify port direction.

Thu Nov 14 21:38:13 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_opic.c: Finish - second round.

Thu Nov  7 00:18:59 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_htab.c (htab_init_data_callback): Allow the virtual-address
 	to be specified as an array which allows 64bit addresses.

	* device.c (device_find_integer_array_property): New function.
  	Simplify the querying of elements of an integer array.
	(device_add_integer_property, device_find_integer_property):
 	Update to correctly use the cell type.

	* vm.c (om_unpack_sr): Clarify shifting comment.
	(om_pte_0_masked_vsid): Ditto. Add 64bit version.

	* emul_chirp.c (emul_chirp_create): Initialize the segment
 	registers.

	* vm.c (om_effective_to_virtual): Trace segment register use.

	* hw_htab.c (htab_map_page): Print out the pteg base address to
 	simplify cross checking between vm and the htab.
	(htab_decode_hash_table): Use device_error instead of error.
	(htab_map_page): Ditto.
	(htab_dma_binary): Ditto.
	(htab_map_binary): Ditto.
	(htab_init_data_callback): Ditto.

Wed Nov  6 20:20:58 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* interrupts.h: Clarify what the optional instruction program
 	interrupt is - a subset of illegal instruction program interrupt.

	* interrupts.c (program_interrupt): For UEA mode, clarify what an
 	optional instruction program interrupt is.
	(program_interrupt): For OEA mode, as per spec, generate an
 	illegal instruction program interrupt when an optional instruction
 	is encountered.

	* gen-semantics.c (print_semantic_body): Delete code
 	differentiating between an unimplemented floating point and normal
 	instruction.  Instead, such a case can be handled explicitly.

	* ppc-instructions (store floating-point as integer word indexed):
 	Mark as optional.
	(Floating Convert to Integer Doubleword): Make the floating point
 	assist interrupt explicit.
	(Floating Convert To Integer Doubleword with round towards Zero):
 	Ditto.
	(Floating Convert To Integer Word): Ditto
	(Move From FPSCR): Ditto.
	(Move to Condition Register from FPSCR): Ditto.
	(Move To FPSCR Fields): Ditto.
	(Move To FPSCR Field Immediate): Ditto.
	(Move To FPSCR Bit 0): Ditto.
	(Move To FPSCR Bit 1): Ditto.

Mon Nov  4 12:49:13 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* corefile.c (core_map_read_buffer, core_map_write_buffer): Avoid
 	breaking up transfers.

	* corefile.c: Adjust arguments so that the client server
	relationship is clarified.

	* hw_glue.c (hw_glue_init_address): Update so it can be attached
 	to a PCI bus.

	* hw_disk.c (hw_disk_instance_write): Add more checks to disk IO -
 	looking for things like overflow/underflow.

Sun Nov  3 18:45:20 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_generic.c (emul_add_tree_hardware): Hang the disk off the
 	PAL device instead of the IOBUS.  The disk must be attached to a
 	logical bus.

	* hw_disk.c (hw_disk_init_address): Just use the unit address
 	directly in the attach - the rest isn't relevant.

Sat Nov  2 21:48:57 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* configure.in (sim-hardware, sim-packages): Allow additional
 	hardware and packages to be prefixed as well as appended.

	* Makefile.in (tmp-hw, tmp-pk): Retain the user specified order of
 	packages when building them.  Consequently, a user can override a
 	standard device by prefixing their own version.

	* Makefile.in (hw_opic.o, hw_pci.o, hw_ide.o): Add dependencies.

Fri Nov  1 14:42:57 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* mon.c (_cpu_mon): Add fields for counting 1, 2, 4, and 8 byte
	reads and writes.
	(mon_{read,write}): Count 1, 2, 4, and 8 byte reads/writes.
	(mon_print_info): Correct typo regarding # of unaligned reads and
	writes.  Print out how many 1, 2, 4, and 8 byte reads/writes there
	are.

Tue Oct 29 17:55:43 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in (AC_CHECK_FUNCS): Add access.
	* config{.in,ure}: Regenerate.

	* emul_unix.c (do_unix_nop): System call that always succeeds.
	(do_unix_access): Support access system call.
	(solaris_descriptors): Make sigaltstack and sigaction nops.
	({solaris,linux}_descriptors): Add support for access.

Tue, 8 Oct 18:42:26 1996  Jason Molenda <crash@cygnus.co.jp>

	* Makefile.in (clean): Move config.log to distclean.

Fri Nov  1 16:44:28 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* corefile-n.h (core_map_write_N): Improve abort messages.

	* device.h, device.c (device_attach_address): Remove unused name
 	parameter.
 	(device_detach_address): Ditto.
	* device_table.h, device_table.c: Update.
	* hw_iobus.c (hw_iobus_attach_address_callback): Ditto.
	* hw_nvram.c (hw_nvram_init_address): Ditto.
	* hw_memory.c (hw_memory_init_address): Ditto.
	* hw_vm.c (hw_vm_init_address_callback): Ditto.
	(hw_vm_attach_address): Ditto.
	(hw_vm_add_space): Ditto.
	* hw_init.c (update_for_binary_section): Ditto.
	* hw_core.c (hw_core_attach_address_callback): Ditto.

	* hw_iobus.c (hw_iobus_attach_address_callback): Rewrite to handle
 	configurable parent busses.

Wed Oct 30 18:46:32 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device_table.c (generic_device_size_to_attach_size): Provide
 	limited support for multi-cell sizes.
	(generic_device_address_to_attach_address): Ditto for addresses.

Tue Oct 29 02:01:29 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_add_integer_property): Check for setting of
 	#address-cells and #size-cells properties.  For these, update the
 	corresponding device values.
	(device_nr_address_cells, device_nr_size_cells): Use the value
 	from the device instead of the property.

	* hw_core.c: Use generic address and size conversions for the top
 	bus.

	* hw_memory.c (hw_memory_init_address): Tolerate case where
 	#address and #size cells is greater than 1.

	* device.c (device_tree_print_device): Clean out printing of
 	properties.

	* device.c (split_device_specifier): Don't detect comments here -
 	"#" can be a valid prefix - eg #size-cells.

	* psim.c (psim_merge_device_file): Suppress comments and blank
 	lines here.

	* emul_generic.c (emul_add_tree_hardware): Fix typo of incorrect
 	pal unit address.  Add the property /#address-cells to the root of
 	the tree.

	* device.c (device_template_create_device): Check that the unit
 	address was successfully parsed.

	* device_table.c (generic_device_unit_decode): Rewrite to better
 	handle multi-cell addresses.
	(generic_device_unit_encode): Ditto.

	* emul_generic.c (emul_add_tree_hardware): "reg" properties no
 	longer need the explicit array type - the parser takes care of it.

	* pk_disklabel.c (pk_disklabel_create_instance): Add NULL return
 	to keep GCC happy.

Mon Oct 28 22:55:48 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_ide.c: New file.  Model of a basic IDE interface attached to
 	a PCI bus.

	* configure.in (hardware): Add the ide device to the default
 	configuration.
	* configure: Regenerate.

	* debug.h, debug.c: Add tracing option for the IDE device.

Fri Oct 25 21:28:25 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_phb.c, hw_phb.h: New files - implement a PHB.

	* configure.in (hardware): Add the phb to the list of devices to
 	build by default.

Fri Oct 25 21:28:25 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_com.c: Review description.
	* hw_disk.c: Ditto.
	* hw_htab.c: Ditto.
	* hw_eeprom.c: Ditto.
	* hw_init.c: Ditto.
	* hw_cpu.c: Ditto.

	* hw_com.c: Update event handling.

	* hw_disk.c: Implement tracing.

Fri Oct 25 21:28:25 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device_table.c (generic_device_init_address): Use
 	assigned-addresses property in preference to any other reg
 	property.

Fri Oct 25 21:28:25 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.h, device.c (device_find_ranges_property): New function.
  	Simplify the manipulation of "ranges" properties.

	* device.c (device_add_parsed): Extend to include support for the
 	ranges property.

	* device.c (device_add_parsed): Add assigned-addresses to the list
 	of reg type properties.

	* device.c (device_tree_print_device): Add code to format and
 	print a ranges property.

	* device.h, device.c (device_nr_address_cells,
 	device_nr_size_cells): New functions. Determine the values of the
 	standard properties #address-cells and #size-cells.  Both of which
 	are optional and have default values of two and one respectfuly.
  	Previously, code that determined #address-cells was incorrectly
 	using a value of one.

Fri Oct 25 21:28:25 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* debug.h, debug.c: Sort debug options, Add entries for the
 	comming PHB device.

Fri Oct 18 12:12:21 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* ppc-instructions (Floating Select): Add support for fsel unless
	model is 601.  Allow user to filter out instruction unless -Fs is
	passed to igen.
	(Store Floating-Point as Integer Word Indexed): Raise optional
	instruction program abort.  Allow user to filter out instruction
	unless -Fs is passed to igen.
	(Floating Square Root{, Single}): Ditto.
	(Floating Reciprocal Estimate Single): Ditto.
	(Floating Reciprocal Square Root Estimate): Ditto.

	* configure.in (--enable-sim-filter): If not passed, pass 32,f,s
	to igen.
	* configure: Regenerate.

	* interrupts.h (program_interrupt_reasons): Add
	optional_instruction_program_interrupt.

	* interrupts.c (program_interrupt): Call error with more detailed
	information on program interrupts, particularly in user mode.  Add
	support for optional_instruction_program_interrupt.

Wed Sep 25 10:20:29 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_glue.c: New device.  Hooks for manipulating interrupt ports.

	* debug.h, debug.c (trace_glue_device): Add tracing support for
	the interrupt glue logic device.

	* configure.in (hardware): Add glue device.
	* configure: Regenerate.

Tue Sep 24 20:55:38 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_tree_parse_integer_property): New function,
	parse a list of integers as an array property.
	(device_tree_add_parsed): Call it.

	* device.c (device_tree_parse_string_property): New function,
	parse a list of strings as a string property (with embeded
	null's).  For moment, don't try to implement a complext string
	parser.
	(device_tree_add_parsed): Call it.

Tue Sep 24 16:30:48 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_opic.c: New file.  OpenPIC interrupt controller.

	* configure.in (hardware): Add opic device.
	* configure: re-generate.

	* hw_pic.c: Delete, replaced with hw_opic.c.

	* debug.h, debug.c: Add debug option for OpenPIC device. -
	opic-device.

Tue Sep 24 16:30:48 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* Makefile.in (psim.o, idecode.o): Since idecode and not psim is
	now the file that does all the inlining.

	* Makefile.in (LIB_SRC, LIB_INLINE_SRC, idecode.o): Break out the
	library source code that could be involved in an inlining.  Make
	idecode.o only dependant on the inlined library source code.

	* Makefile.in (LIB_OBJ): Put options last on the list so that it
	is compiled last.

	* std-config.h (DEVICE_INLINE): Only inline locals when the
	default is to inline.

Mon Sep 23 00:37:49 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_htab.c (htab_sum_binary): Determine the real-base for the
	binary.

	* hw_htab.c (htab_map_binary): Depending on the value of the
	load-base, either map the program in as a contiguous section or as
	separate sections controled by th binaries lma values.
	(htab_init_data_callback): Ditto.

Sun Sep 22 15:56:22 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_generic.c (emul_add_tree_options): Remove load-base option.

	* emul_chirp.c (map_over_chirp_note): Add load_base field to note
	struct.  Don't require the load_base field to be present - just
	issue warning - it is a recent addition.
	(emul_chirp_create): Support both virtual and physical modes.

	* emul_chirp.c (emul_chirp_create): Add a stack initialization
	property so that any arguments specified on the command line can
	be passed on to user programs.

	* hw_init.c (create_ppc_chirp_bootargs): Add support for chirp
	argument passing to the pseudo device stack.

Sat Sep 21 19:39:56 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_error): Make it more tolerant to incomplete
	devices.

	* hw_init.c (hw_data_init_data_callback): Extend the data device
	so that it can perform initialization operations either dma or a
	more complex instance open, seek, write operation.
	* hw_init.c: Update the description of the data device to reflect
	this.

Sat Sep 21 00:13:02 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_event_queue_schedule,
	device_event_queue_deschedule, device_event_queue_time): Have the
	device object export the event operations.  Making these available
	from the device object should hopefully simplify writing device
	models.

Fri Sep 20 14:04:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* configure.in (sim-hardware): Add eeprom device to default build.

	* hw_eeprom.c: Rewrite so it works.

	* debug.h, debug.c: Add tracing support for the eeprom and com
	devices.

Thu Sep 19 14:40:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* debug.h: Add disklabel-package and disk-device trace options.
	debug.h (PTRACE): Add macro to simplify tracing in packages.

Thu Sep 19 14:40:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_create_instance_from): Tighten up loop
	searching for device instances.
	(device_instance_delete): Ditto.
	(device_instance_delete): Only leaf instances need to be removed
	from a devices list of active instances.

Thu Sep 19 14:40:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_disk.c: Add the cdrom as an alias.

	* pk_disklabel.c (disklabel_delete): Implement, remembering to
	delete the raw disk instance while we're at it.

	* pk_disklabel.c (pk_disklabel_create_instance): Implement a
	little bit more - still a long way to go.

	* pk_disklabel.c (disklabel_write, disklabel_read): Remember the
	new head position after a read or write.

Thu Sep 19 13:05:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_chirp.c (chirp_emul_read): Allow reads to be longer then
	the internal buffer.

Thu Sep 19 13:05:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_chirp.c (chirp_read_t2h_args): Call memset-0 with the args
	in the correct order.

	* emul_chirp.c (chirp_emul_call_method): Correct computation for
	the address of the first stack argument passed in from the client
	program.

Wed Sep 18 19:33:54 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* words.h: Add new types signed_cell and unsigned_cell which
	correspond to the signed and unsigned IEEE 1275 memory locations.
	* device.h, device.c, emul_chirp.c: Where refering to an IEEE 1275
	memory cell, replace uses of unsigned32 with unsigned_cell.
	* device_table.h: Ditto.

	* sim-endian.h: Add new macros H2BE_cell and BE2H_cell which
	convert cell sized values to from big endian.
	* device.c, emul_chirp.c: Where refering to IEEE 1275 memory cells
	use these new macros.

Tue Sep 17 15:57:44 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_tree_add_parsed): Detect and report an
	interrupt being attached to an invalid device. Was dumping core.

Mon Sep 16 23:09:12 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.h, device.c (device_address_to_attach_address,
	device_size_to_attach_size): New functions.  Convert a devices
	unit address or unit size structure into a form suitable for
	passing on to the attach and detach functions.
	* device_table.h: Add extra methods to device table.

	* device.h, device.c (device_find_reg_property): New function.
	For a reg type property, return the selected address + size
	tupple, along with a positive success status.  Add a reg_property
	to the list of property types.
	* (device_tree_add_parsed): Make array properties with the name
	reg or alternate-reg of type reg_property.

	* hw_memory.c (hw_memory_init_address): Rewrite to use new
	find_reg_property method.
	* hw_nvram.c (hw_nvram_init_address): Ditto.

	* device.c (device_tree_print_device): Add code to print out a reg
	property.

	* device_table.c (generic_device_address_to_attach_address,
	generic_device_size_to_attach_size ): New functions.  Generic
	functions for converting between unit and attach address or size.

	* device_table.c (generic_device_init_address): Rewrite to use the
	new find_reg and address convert functions.  Look for both reg and
	alternate-reg properties.

Mon Sep 16 23:09:12 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_com.c: New file.  A '550 serial device that can quickly be
	attached to any bus.
	* configure.in (enable-sim-hardware): Add the com device.
	* configure: re-generate.

Thu Sep 12 17:30:56 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_tree_verify_reg_unit_address): New
	function. Check that the unit address as specified by the reg
	property correctly corresponds to any unit address previously
	specified by the devices name.
	(device_tree_add_parsed): When adding a reg property, verify
	that the unit-address - first value of property - correctly
	matches any previous value specified when creating the device
	node.

Thu Sep 12 17:30:56 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* mon.c (mon_event): Remove assertion that an unsigned is >= 0.

Fri Aug 16 12:05:24 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* device.c (device_full_name): Cast strdup to char *, since AIX
	3.2.5 mistakenly declares the function to be const char *.
	(device_create_from): Ditto.
	(device_create_instance_from): Ditto.
	(device_add_property): Ditto.

Tue Aug 13 11:40:14 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* debug.c (trace_option): For -t all, do not set the
	trace_dump_device_tree flag, so that the simulator is run.

Tue Aug 13 11:40:14 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (options.o): Depend on defines.h.
	(defines.h): New rule, go through config.h and make strings of all
	of the #define HAVE_xxx macros.
	(distclean): Remove defines.h.

	* options.c (print_options): Print whether many of the
	configuration macros are defined.

	* main.c (main): If -t options and no filename, just print the
	options, and don't print the usage message.

Mon Aug 12 18:42:37 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in: Test whether /dev/zero works on the system, and if
	it does, define HAVE_DEVZERO.
	* configure: Regenerate.

	* emul_generic.c (emul_add_tree_hardware): Do not add /iobus/disk
	if we don't have a working /dev/zero on the system.

	* emul_bugapi.c (emul_bugapi_init): If HAVE_DEVZERO is not
	defined, don't add disk support.
	(emul_bugapi_do_diskio): Ditto.
	(emul_bugapi_instruction_call): Ditto.

Wed Aug  7 14:34:20 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_unix.c (HAVE_TCGETATTR): If HAVE_TERMIOS_STRUCTURE is not
	defined, make sure HAVE_TCGETATTR is #undef'ed

Wed Aug  7 14:34:20 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* std-config.h (REGPARM): Only define REGPARM attributes if using
	GNU C.  Test for __i686__ in case GCC ever defines it.  If not on
	a x86 platform, define REGPARM as nothing.

	* sim-endian.h (WITH_HOST_BYTE_ORDER): Test for i686 and __i686__
	also.

Wed Aug  7 20:19:55 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* ld-decode.h, ld-decode.c: Rename goto_gen to the more correct
 	goto_switch_gen.
	* gen-idecode.c: Ditto.

	* gen-idecode.c (print_idecode_table): Comment out check for
 	switch/table combination until a bug with it is fixed.

	* ppc-opcode-goto: New file.  Like complex and flat but uses
 	goto-switch instead of padded-switch for the tables.

	* gen-idecode.c (print_goto_switch_name): New function.
	(print_goto_switch_table_leaf): New function.
	(print_goto_switch_break): New function.
	(print_goto_switch_table): New function. Prints a jump table
	that can be jumped into instead of a switch statement.

	* gen-idecode.c (*switch_*): As an option output a switch that is
 	implemented using a jump table but only if the switch is not
 	boolean.

Tue Aug  6 09:28:22 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in (--enable-sim-{hardware,packages}): Fix typos.
	* configure: Regenerate.

	* device.c (device_instance_call_method): Fixup format message in
	error case.  Return 0 in case of error to shut up compiler
	warnings.

Wed Aug  7 00:17:37 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device_table.c (generic_device_unit_decode): Require a comma
	between elements of a unit address.

	* device.c (device_tree_print_device): For reg, alternate-reg and
	ranges properties use special print functions.
	(device_print_ranges_property): Print formatted ranges property.
	(device_print_reg_property): Print formatted reg property.

Tue Aug  6 21:35:18 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_tree_add_parsed): For reg, ranges and
	alternate-reg properties use a special parser.
	(device_tree_parse_reg_property): New function to parse a reg
	property.
	(device_tree_parse_ranges_property): New function to parse a
	ranges property.
	(device_encode_unit): Wrapper for encode_unit callback.
	(device_decoce_unit): Wrapper for decode_unit callback.

Wed Jul 31 00:02:30 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device_table.h (device_instance_callbacks): Relace the claim and
	release methods with a more general table mapping from method-name
	to method-function.

	* device.c (device_instance_call_method): New function.  Implement
	the OpenBoot call-method client interface.  Attempts to locate the
	instances method in the callback table.
	(device_instance_claim, device_instance_release): Delete.
	Replaced with call-method and a lookup table.

	* emul_chirp.c (chirp_emul_call_method): Use the new device
	instance call method and let that handle a client claim call.

	* hw_htab.c (claim_memory): Wrapper function to call the memory
	devices "claim" method using the new device-instance call-method
	interface.  Replaces the previous direct calls to claim.
	(htab_map_region): Use claim_memory.
	(htab_init_data_callback): Ditto.

	* hw_memory.c (hw_memory_instance_claim): Update function
	interface so that it is compatible with call-method.
	(hw_memory_instance_release): Ditto.
	(hw_memory_instance_methods): New table of memory specific
	methods claim and release.  Add to the hw_memory_callback
	table.

Tue Jul 30 21:26:14 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* psim.c (psim_init): Back out of change to initial value of
	system->last_cpu.

Tue Jul 30 21:12:24 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* sim_callbacks.h (sim_io_printf_filtered): Replace
	printf_filtered with a local simulator specific version.  Add
	#define printf_filtered to simplify updating of existing code.

	* sim_callbacks.h (sim_io_write_stdout, sim_io_read_stdin,
	sim_io_write_stderr): New functions.  Read / write to the
	simulations stdin and stdout and stderr interfaces.  Merge in code
	from hw_pal that previously handled async I/O.
	(sim_io_flush_stdoutput): Rename flush_stdoutput.  Add #define
	flush_stdoutput to simplify updating of existing code.

	* hw_pal.c (scan_hw_pal, write_hw_pal,
	hw_pal_instance_write_callback): Use the new sim_io functions.

	* main.c: Implement standalone versions of the new sim_io
	functions.  Include support for async I/O.
	* sim_calls.c: Ditto.  This time using the gdb callback table.

	* std-config.h (CURRENT_STDIO, current_stdio): New macro. Set up
	stdio configuration so that it works in the same way as the rest
	of the simulation.
	* psim.c (psim_create): Initialize current_stdio from the device
	tree.
	* emul_generic.c (emul_add_tree_options): Enter a default value
	for use-stdio in the device tree.

Fri Jul 26 19:43:03 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* gen-idecode.c (print_jump): Was always generating a jump back to
 	idecode.  Only necessary at tail of semantic code.
	(print_jump): Was always setting the processor's cia, even during
 	startup when the processor was still undefined.
	(print_jump): For safety, restart smp loop when cpu_nr >= nr_cpus,
 	not just equal.

	* options.c (print_options): Add printing of WITH_REGPARM and
 	WITH_STDCALL.

	* std-config.h (WITH_REGPARM, WITH_STDCALL): Provide default
 	(disabled) values if not defined.

Fri Jul 26 00:36:35 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* ppc-cache-rules (cache): Change RS and RB to cache instead of
	compute.  The block move instructions use them.

	* idecode_expression.h (FPSCR_SET): New macro, set specific FPSCR
	register.
	(CR_FIELD): New macro, extract specific CR register.
	(FPSCR_FIELD): New macro, extract specific FPSCR register.

	* registers.h (GPR): New macro, simplify accesses to GPR[i].

	* bits.c (INSERTED): Covert INSERTED macro into a function.
	(EXTRACTED): Conditionally compile on correct bit size macro.

	* bits.h (BIT8): New macro, set a single bit in an 8 bit byte.

	* ppc-instructions: With hints from Paul Martin, type in missing
	some instruction semantics.  Leave disabled for the moment.
	(Load Multiple Word): Ditto.
	(Store Multiple Word): Ditto.
	(Load String Word Immediate): Ditto.
	(Load String Word Indexed): Ditto.
	(Store String Word Immedate): Ditto.
	(Store String Word Indexed): Ditto.
	(Move to Condition Register from XER): Ditto.
	(Move From Condition Register): Ditto.
	(Move From FPSCR): Ditto.
	(Move to Condition Register from FPSCR): Ditto.
	(Move To FPSCR Field Immediate): Ditto.
	(Move To FPSCR Fields): Ditto.
	(Move To FPSCR Bit 0): Ditto.
	(Move To FPSCR Bit 1): Ditto.

Thu Jul 25 22:10:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* std-config.h (SEMANTICS_INLINE): By default, mask out the
	inlining of semantic functions from DEFAULT_INLINE.  Almost all
	configurations call the semantic code via a pointer so there is
	little benefit.

	* std-config.h (ICACHE_INLINE): Ditto.

Thu Jul 25 20:07:30 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* configure.in (sim_regparm): Add configuration option for
	enabling GCC's regparm attribute.
	* (sim_stdcall): Add configuration option for enabling GCC's
	stdcall attribute.

	* Makefile.in (REGPARM_CFLAGS): Pass regparam configuration onto
	compilations.
	* (STDCALL_CFLAGS): Pass stdcall configuration onto compilations.

	* std-config.h (REGPARM): Extend construction of REGPARM macro so
	that it can include __stdcall__ function attribute.

Wed Jul 24 19:04:20 1996  Andrew Cagney  <cagney@sawnoff>

	* options.c (print_options): Include SUPPORT_INLINE in information
 	dump.

	* gen-idecode.c (print_run_until_stop_body): Only generate loop
 	termination test if creating idecode_run_until_stop.  Push the
 	loop termination test back into each alternative branch.

Wed Jul 24 15:47:09 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* gen-icache.c (print_icache_function): Have the cache function
 	always update the cache_entries semantic and address fields.

	* gen-idecode.c (print_idecode_switch_illegal): Include a break
 	when generating illegal instructions.  This was commented out
 	which is a hangover from looking a at switch statements generated
 	using indirect jumps.

Tue Jul 23 20:57:01 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* igen.c (print_my_defines): Replaces print_define_my_index.
	Print both a definition for MY_INDEX and MY_PREFIX.
	* gen-icache.c (print_icache_function): Adjust.
	* gen-idecode.c (print_jump_insn): Adjust.
	* gen-semantics.c (print_c_semantic): Adjust.

	* gen-support.c (gen_support_h): Add optional include to created
	support.h so that, like cpu, it is optionally inlined for all
	modules that include it.
	* inline.h, inline.c: Adjust so that support.[hc] is handled the
	same as cpu.[hc].

	* idecode_fields.h (LABEL, GOTO): Macro's that create a unique
	name for a lable and then branch to it.

	* ppc-instructions (convert_to_integer, Floating Round to
	Single-Precision, Floating Convert from Integer Doubleword): Use
	LABEL and GOTO instead of the recently added switch statements.

Wed Jul 24 14:02:42 1996  Andrew Cagney  <cagney@sawnoff.highland.com.au>

	* gen-idecode.c (print_run_until_stop_body): Too many rparen in
 	generated code.

Tue Jul 23 20:57:01 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* configure.in (--enable-sim-line-nr): Typo - sim_line-nr.
	* (--enable-sim-inline): Reorder patern matching of arguments so
	that SUPPORT=ALL_INLINE is reconized as *=* and not *_INLINE.

	* configure: rebuild.

Mon Jul 22 23:25:08 1996  Andrew Cagney  <cagney@highland.com.au>

	* configure.in (--enable-sim-hardware, --enable-sim-packages): New
	configuration options.  Let the user specify the packages or
	hardware devices that are to be included in the build.  Makes it
	possible for user packages to be specified.

	* Makefile.in (tmp-pk, tmp-hw): Just use the list of packages and
	hardware instead of checking it using ls.  configure.in should
	have taken care of any problems.
	(HW_SRC, HW_OBJ, PACKAGE_SRC, PACKAGE_OBJ): Set by configure.

Mon Jul 22 22:38:59 1996  Andrew Cagney  <cagney@highland.com.au>

	* psim.c (psim_options): Enter the argument to the memory size
	option directly into the device tree.  Was using atol() which is
	dangerously non portable.

Mon Jul 22 22:17:08 1996  Andrew Cagney  <cagney@highland.com.au>

	* configure.in (icache): Extend icache flag to include an insn
	option.  If specifyed the insn - aka instruction - is included in
	the instruction cache.  Make this the default.
	* configure: re-generate.

	* igen.c (main), igen.h: Add option -S - inSn - for specifying
	that the instruction should be included in the icache.

	* gen-icache.c (print_icache_body): If enabled, output code to put
	the instruction into the icache.
	(print_icache_struct): If enabled, add insn to the icache struct.

Mon Jul 22 20:46:12 1996  Andrew Cagney  <cagney@highland.com.au>

	* Makefile.in (BUILD_CFLAGS): Include -g when building the
	generators.

Mon Jul 22 20:00:25 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_generic.c (emul_add_tree_options): Was incorrectly setting
	the strict-alignment option when hardwired for non-strict
	alignment.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* gen-semantics.c: Make the my_index variable a macro MY_INDEX.

	* ppc-instructions: Adjust so that references are to MY_INDEX and
	not my_index.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* gen-idecode.c: Output the complete run_until_stop function
	instead of just the code to handle a single instruction issue.
	* : Have the generated idecode.c include inline.c (instead of psim.c).

	* std-config.h: Change psim.c so that it isn't inlined (as this is
	no longer needed).

	* psim.c (run_until_stop): Delete the old run_until_stop function
	instead calling the idecode_run and idecode_run_until_stop
	functions that gen-idecode.c is now creating.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* dgen.c: Maintenance - update to use new features found in lf.c.

	* filter_filename.c (filter_filename): Maintenance - make the
	string constant.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* debug.c (TRACE, ITRACE, DTRACE): Have GCC instead of CPP
	eliminate trace statements.

	* debug.c: Change trace format so that it is consistent
	(file:line-nr) with CC's error output.

	* gen-itable.c (itable_c_insn): Add the source file name and
	source line number to the instruction's informational entry.

	* debug.c (ITRACE): Use the itable (and my_index) to get the
	current instructions name and source line number.

	* gen-semantics.c, gen-icache.c: Adjust generated ITRACE calls to
	match new interface.

	* emul_bugapi.c (emul_bugapi_instruction_call): Adjust
	corresponding call to ITRACE so that it still matches.

	* idecode_expression.h (ALU_END, CR0_COMPARE): Use TRACE instead
	of ITRACE.  The CPP line directives would have previously set the
	line-nr and file name so ITRACE isn't needed.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* gen-idecode.c (print_jump_until_stop_body): New function and
	idecode generation option.  Instead of generating and calling
	separate functions containing the semantic and icache code
	generate a single monolythic function and use goto's (and GCC's
	indirect jump) to move between code blocks.

	* Makefile.in: Add sim_jump flag to those passed to igen.

	* configure.in: New option --enable-sim-jump (default disabled)

	* ppc-instructions: Eliminate any uses of labels and goto's.
	These result in duplicate declarations when a single flat function
	is being create.

	* ppc-opcode-jump: New file.  Set of opcode rules useful when
	testing jumping idecodes.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* gen-idecode.c: Optionally include the semantic code for an
	instruction in the function that is doing the decoding.

	* igen.c: Add option (-C) to generate semantics in the instruction
	decode functions.

	* configure.in (--enable-sim-icache): Accept an option list such
	as 1024,define.  Add a new choice to the list - semantic - which
	will cause igen to generate instruction decode functions that
	include the corresponding semantic code.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* configure.in: New option --enable-sim-line-nr (default enabled).
	Enable/disable the inclusion of CPP line directives in the
	generated files.  Such directives refer back to the source files
	used when generating the simulator code.

	* Makefile.in (sim_line_nr): Pass to igen.

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* igen.c (main): Revamp the options so that more letters are
	available.

	* configure.in: Adjust to match igen's revamped options

Sun Jul 21 21:18:05 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* Makefile.in (pk.h, hw.h): Rewrite depenencies for hw.h (etc) so
	that they use the same technique as igen (ie a dummy targets
	tmp-pk and tmp-hw are created).

Mon Jun 24 22:28:00 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* Makefile.in (BUILD_CFLAGS): Include WARNING_CFLAGS.

Wed Jun 19 21:45:28 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* ld-cache.[hc], ld-decode.[hc], ld-insn.[hc]: New files. Separate
	out the loading of each of the tables from the rest of igen.
	* Makefile.in: Adjust.
	* igen.c: Adjust.

	* gen-icache.[hc], gen-idecode.[hc], gen-itable.[hc],
	gen-model.[hc], gen-semantics.[hc]: New files. Separate out the
	code creating each separate set of generated files.
	* Makefile.in: Adjust.
	* igen.c: Adjust.

	* gen-support.[ch]: New files. Output the support functions (found
	in the ppc-instructions file) into a separate file.
	* Makefile.in: Add.
	* inline.h, inline.c: Add.
	* std-config.h: Add.

	* ld-cache.c: Re-design the cache table format.
	* ppc-cache-rules: Update to new format.

	* ld-decode.c: Re-design the decode table format.
	* ppc-opcode-simple: Update to new format
	* ppc-opcode-complex: Ditto
	* ppc-opcode-flat: Ditto

	* filter.h, filter.c: New files. Separate the opcode filter table
	reading code from the rest of igen.c.  Re-design the filter so that
	it works inclusivly not exclusivly.
	* igen.c: Remove the opcode filter table loading code.
	* Makefile.in (filter.o): Adjust
	* configure.in: Adjust filter flag so that default includes 32bit
	and floating point.
	* ppc-instructions: Clean up filter fields so that only in use
	entries are specified (ie delete `be').

	* misc.c (name2i, i2name): New function.  Map between a string and
	an integer value.

Mon Jun 17 20:08:03 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* sim_calls.c (sim_close): If simulator not created, skip printing
	of run information.

Mon Jun 17 20:08:03 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* registers.c (register_description): Typo, insns not insn.

	* ppc-instructions (model_get_number_of_stalls): New model function,
	returns number of stalls for the specified processor.
	* psim.c (psim_read_register): Add call to new function
	model_get_number_of_stalls().

	* ppc-instructions (model_get_number_of_cycles): New model function,
	returns number of stalls for the specified processor.
	* psim.c (psim_read_register): Add call to new function
	model_get_number_of_cycles().

Fri Jun 14 00:11:56 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device_table.h: Don't pass the parent device into a devices
	create function.  This makes the create function consistent with
	the documentation.
	* device.c (device_template_create_device): Ditto
	* hw_pal.c (hw_pal_create): Ditto
	* hw_core.c (hw_core_create): Ditto
	* hw_vm.c (hw_vm_create): Ditto
	* hw_disk.c (hw_disk_create): Ditto
	* hw_nvram.c (hw_nvram_create): Ditto
	* hw_memory.c (hw_memory_create): Ditto
	* hw_cpu.c (hw_cpu_create): Ditto.

	* device.c (split_find_device): Allow a null initial parent device.
	(device_template_create_device): Ditto.

	* device.c (device_create_from): Make local (static) only used
	within device.c.
	* device_table.h: typedef device_callbacks moved here (from
	device.h) where it belongs.

	* hw_core.c: New file. Implements just the core device using the
	core object.

	* corefile.c: Moved all core device functions into the new
	hw_core.c file. core_device_create() disapears.

	* psim.c (psim_tree): Use device_tree_add_parsed() to create the
	core device.

Thu Jun 13 00:09:29 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_init.c: Correct typo in comment.

	* corefile.c (core_init): Remove any remaining references to a
	default map.
	(core_map_find_mapping): Ditto.

Wed Jun 12 22:30:32 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* corefile.c (core_init): Make function global so that other
	devices are able to use the full core object.

	* corefile.c (core_create, core_from_device): Break core_create
	into two functions.  The first creates a core object, the second
	returns the core object associated with a core device.

	* corefile.c (core_device_create): Use core_create to make the
	core object.

	* psim.c (psim_create): Use core_from_device() instead of
	core_create().

	* device.c (device_template_create_device): Make static as only
	needed by functions internal to device.c.

Fri Jun  7 23:47:18 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* ppc-opcode-test-2: Remove description of fields.
	* ppc-opcode-complex: Ditto
	* ppc-opcode-flat: Ditto
	* ppc-opcode-simple: Ditto
	* ppc-opcode-stupid: Ditto
	* ppc-opcode-test-1: Ditto
	* ppc-cache-rules: Ditto

	* igen.c: Add description of files as a comment at the front.

Wed Jun 26 12:50:33 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in: Check for whether the termios and termio
	structures are really defined, and whether or not, they define the
	c_line field.
	* configure: Regenerate.

	* Makefile.in ({,TERMIO_}CFLAGS): Add TERMIO_CFLAGS options set by
	configure.

	* emul_unix.c: Various changes to allow for building on systems
	with different termio and termios structures.  If host has both
	termio and termios, just use termios.  No longer include
	sys/ioctl.h.

Wed Jun 26 12:26:55 1996  Jason Molenda  (crash@godzilla.cygnus.co.jp)

	* Makefile.in (bindir, libdir, datadir, mandir, infodir, includedir,
	INSTALL_PROGRAM, INSTALL_DATA): Use autoconf-set values.
	(docdir): Removed.
	* configure.in (AC_PREREQ): autoconf 2.5 or higher.
	(AC_PROG_INSTALL): Added.
	* configure: Rebuilt.

Wed Jun  5 23:53:42 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* corefile.h: Rewrite documentation so that it can be extracted and
	converted into texinfo (and hence ready for translation into html,
	tex or nroff).
	* device.h: Ditto

Thu Jun  6 09:52:37 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* hw_disk.c (SEEK_SET): If SEEK_SET is not defined, define as 0.

Wed Jun  5 11:46:52 1996  Andrew Cagney  <cagney@puddin>

	* hw_disk.c: Include <unistd.h> if available.  Under SunOS, that
 	is the source of SEEK_SET.

Wed Jun  5 01:39:07 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* psim.c (psim_options): Correct type of dummy arguments being
	passed to a device_ioctl call.

	* hw_init.c (hw_data_init_data_callback): Adjust printf arguments.
	(write_stack_arguments): Ditto.
	* hw_trace.c: Instance callback entry no longer a table.

Wed Jun  5 01:39:07 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_unix.c (do_unix_umask): Cast printf argument.
	(convert_to_linux_termios): Use LINUX_VSWTC not LINUX_VSWCH

Mon Jun  3 15:02:04 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* hw_init.c (update_for_binary_section): Abort if we find an
	.interp section, which indicates the need for shared libraries to
	be loaded.

Mon Jun  3 15:02:04 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_unix.c (do_unix_{time,gettimeofday,getrusage}): Add support
	for time, gettimeofday, and getrusage system calls.
	({solaris,linux}_descriptors): Add new system calls.
	(do_get{,e}{uid,gid}): Use gid_t/uid_t types.
	(do_get{,p}pid): Use pic_t types.

	* configure.in (AC_TYPE_{GETGROUPS,SIGNAL}): Define.
	(AC_TYPE_{MODE,OFF,PID,SIZE,UID}_T): Define.
	* config{.in,ure}: Regenerate.

Mon Jun  3 23:19:57 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_netbsd.c (emul_netbsd_create): Use the more specific names
	`ppc-elf' and `ppc-xcoff' for the stack-type.
	* emul_unix.c (emul_unix_create): Ditto.
	* emul_bugapi.c (emul_bugapi_create): Ditto.
	* hw_init.c: Reconize the new names.

	* emul_unix.c (do_unix_break): Adjust so that the updated ioctl
	call is used (no system parameter).

Sun Jun  2 11:21:17 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_unix.{h,c}: New files to provide Solaris and Linux system
	call emulations.

	* Makefile.in (LIB_{SRC,OBJ}): Add emul_unix.{c,o}.
	(os_emul.o): Depend on emul_unix.h.
	(emul_unix.o): New dependency.

	* configure.in (--enable-sim-alignment): Add 0|default to mean set
	alignment to 0, which means use appropriate alignment for mode.
	(AC_CHECK_FUNCS): Add new functions needed by emul_unix.c.
	(AC_CHECK_HEADERS): Add new include files needed by emul_unix.c.
	* config.in: Regenerate.
	* configure: Regenerate.

	* emul_generic.c (emul_write2_status): New function to return
	results in r3 and r4 for Solaris system calls.
	(emul_do_system_call): If the system call is not support, but
	there is a string for the system call name, print out the string
	instead of the system call number.

	* emul_generic.h (emul_write2_status): Declare it.

	* emul_netbsd.c: Use /* */ around comment on #endif.

	* os_emul.c: Include emul_unix.h.
	(os_emulations): Add emulations for Solaris, and Linux.

	* psim.c (psim_usage): Add message about solaris, linux
	emulations.

Thu May 30 00:00:10 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_iobus.c: Tidy up notes so that they can be auto-extracted.

	* README: Correct PSIM's title

Wed May 29 23:50:26 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* basics.h: New global type object_disposition, used to indicate
	the status of objects when things are restarted.

Fri May 17 17:28:52 1996  Andrew Cagney  <cagney@benjimen.highland.com.au>

	* device_table.h: Change the interrupt descriptor structure so
	that it includes an additional member - an upper bound on the
	interrupts by that name.

	* device.c (device_interrupt_decode): Allow a range of interrupt
	ports (eg rst0 .. rst6) if the port descriptors bound is non zero.

	* device.c (device_tree_print_device): Include a list of valid
	interrupt ports when listing supported devices.

	* device.h, device.c (device_child_interrupt_*): Delete. Not used.

	* emul_generic.c (emul_add_tree_hardware): Modify the creation of
	the interrupt net so that it uses int0 .. intN.

Tue May 14 23:03:53 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.h, device.c (device_ioctl): Drop the system argument.
	Devices can not obtain this using the device_system() call.
	* device_table.h: Adjust accordingly.
	* hw_*.c: Adjust accordingly.
	* emul_netbsd.c (do_break): Adjust call to vm device accordingly.
	* psim.c (psim_options): Use a device_ioctl call to force the
	hw_trace device to update the trace options.
	* hw_trace.c: Replace the init function with an ioctl call.  Adjust
	doc accordingly.

	* psim.c (psim_init): Re-order initialization so that the
	os-emulation is initialized after the device tree.  Without this,
	os-emul's are not able to create instances or access properties
	that contain an instance handle.

	* device.h, device.c (device_add_*_property): Make these functions
	internal to device.c.  The user has access to the more generic
	device_tree_add_parsed function.  Differentiate between the initial
	and current value for each property.
	* (clean_device_properties): New function that deletes any
	properties created after the start of a simulation and restores
	the initial value of any others (ignoring ihandles).
	* (init_device_properties): (Re)Initialize any properties that
	contain ihandles. create

	* (device_tree_init): Include calls to clean the device tree's
	properties and then initialize them.  Document this in the device.h
	file.

Mon May  6 17:36:15 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* interrupts.c (decrementer_interrupt): Always pend a decrementer
	interrupt even if it is not yet possible to deliver it.

Wed May  1 12:26:51 1996  Andrew Cagney  <cagney@benjimen>

	* mon.h, mon.c (mon_get_number_of_insns): Make this externally
 	visable adjusting the arguments so that the interface is correct.
	(mon_print_info): Adjust calls.

	* registers.h, registers.c (register_description): Add phony
 	cycle, insn and stall registers.

	* psim.c (psim_read_register): Return nr of instructions for given
 	processor.

Tue Apr 30 22:09:09 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_htab.c: New file. Extract contents from disk_table.c.
	Contains a device that, during initialization will create a
	PowerPC htab in memory.
	* hw_register.c: New file. Extract contents from disk_table.c.
	Contains a device that, during initialization, will parse its
	property list and use that to initialize various processor
	registers (not target specific).
	* hw_vm.c: New file. Extract contents from disk_table.c.  Contains
	a device that handles accesses to invalid virtual memory addresses
	(in user mode).
	* hw_init.c: New file. Extract contents from disk_table.c.  Misc
	devices that can initialize memory from a file.
	* hw_trace.c: New file. Extract contents from disk_table.c.
	Configure trace options from property values.

	* Makefile.in (hw_htab.o, hw_register.o, hw_vm.o, hw_init.o,
	hw_trace.c): Add new device files.

	* device_table.c: Remove above code, now in separate independant
	files.

Fri Apr 26 00:00:07 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_disk.c: New file.  Disk and CDROM device.

	* Makefile.in (hw_disk.o): Add device hw_disk.c.

	* pk_disklabel.c: New file.  Implement the miss-named disk-label
	package.

	* Makefile.in (pk.h): Create the file pk.h that contains a list of all
	the packages.

	* Makefile.in (hw.h, hw.c): Add dependancy on Makefile so that
	they are re-created when the makefile is updated.

	* emul_generic.c (emul_add_tree_hardware): Add a disk device
	(below the iobus) to the device tree.  Include an ihandle of
	the disk as /chosen/disk.

	* emul_bugapi.c (emul_bugapi_create): Don't initialize the input,
	output and (new) disk handles yet.
	* (emul_bugapi_init): Initialize the input, output (and just added)
	disk ihandles here.
	* (emul_bugapi_do_diskio): New.  Performs disk i/o (well at least
	what I think the behavour is).
	* emul_bugapi.c (emul_bugapi_instruction_call): Add hook to disk
	i/o bug call.  For RETURN call, exit using gpr[3]'s status even
	though this isn't part of the spec - makes it possible for machine
	code to signal the aporting of a simulation run.

	* emul_chirp.c (chirp_emul_call_method): Add support for the
	claim/release methods.
	* (chirp_emul_exit): Add an optional exit status argument to
	the exit method.  Makes it possible for chirp emul simulations
	to abort upon an error.
	* device.h, device.c (device_instance_claim,
	device_instance_release): New methods for claiming and releasing
	memory.
	* hw_memory.c: add claim and release memory methods.
	* hw_*: Use the claim memory method when allocating physical
	memory.

Thu Apr 18 23:38:10 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_nvram.c (hw_nvram_update_clock): Use the current not previous
	time when updating the clock.

	* hw_nvram.c: Tidy up documentation

Fri May 24 10:08:10 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in (AC_STRUCT_ST_{BLKSIZE,BLOCKS,RDEV}): Use these
	macros to determine whether or not the appropriate st_<xxx> fields
	exist in the stat structure.
	(AC_CHECK_FUNCS): Check for all unix system calls used, except for
	the real basic ones like open, read, write, etc.
	* config{.in,ure}: Regenerate.

	* emul_netbsd.c: Add support for missing system calls, and/or
	missing stat fields.
	(MAXPATHLEN): Undefine if including unistd.h, since sys/param.h
	might define it.

	* hw_pal.c (WITH_STDIO): Redefine if O_NDELAY, F_GETFL, or F_SETFL
	are not defined.
	(scan_hw_pal): Do not cause syntax error if O_NDELAY, F_GETFL, or
	F_SETFL not defined.

Tue May 21 17:24:45 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_netbsd.c (write_stat): Don't convert st_blocks unless the
	host is netbsd.

Thu May 16 10:56:45 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in (AC_CHECK_HEADERS): Add sys/ioctl.h.
	* config{.in,ure}: Regenerate.
	* emul_netbsd.c: If HAVE_SYS_IOCTL_H is not defined, don't include
	sys/ioctl.h.

Tue May  7 17:28:12 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* hw_pal.c (hw_pal_instance_read_callback): Remove unused
	variable.

	* misc.c ({,target_}a2i): Rewrite to not use strtoul.

	* Makefile.in ({spreg,misc}.o): Add dependency on .c file.
	({i,d}gen): Don't link in liberity.  Use BUILD_LIBS instead of
	LIBS.

Mon May  6 11:31:43 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* hw_pal.c (hw_pal_instance_read_callback): If using stdio, use
	fgets to read line.  If not using stdio, do a simple blocking read
	of len bytes.

Fri May  3 15:07:42 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in: Correctly build simulator for build machine != host
	machine.

Tue Apr 30 18:46:05 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in (--enable-hostendian): Rework so the default uses
	the AC_C_BIGENDIAN results.  Only run AC_C_BIGENDIAN if not cross
	compiling.
	* configure: Regenerate.

	* sim-endian.h: Add more tests for host endian to support more
	platforms in a cross compilation environment.

Wed Apr 17 14:38:06 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* hw_pal.c ({scan,write}_hw_pal): If WITH_STDIO == DO_USE_STDIO,
	use stdio, instead of unpended read/printf_filtered.
	(hw_pal_instance_write_callback): If WITH_STDIO == DO_USE_STDIO,
	flush stdout after writing the characters.

	* options.c (print_options): Print out WITH_STDIO.

	* Makefile.in (STDIO_CFLAGS): Pass on result of @sim_stdio@
	configuration variable.
	(CONFIG_CFLAGS): Include STDIO_CFLAGS.
	(hw.{c,h}): Allow for source dir != build dir, and for HW_SRC
	files to contain directory pieces.

	* std-config.h (DO{,NT}_USE_STDIO): New flags for whether we
	should use stdio for console input.
	(WITH_STDIO): If not defined, define as DONT_USE_STDIO.

	* configure.in (--enable-sim-stdio): Add new switch to control
	whether stdio is used for console I/O.
	* configure: Regenerate.

	* interrupts.c (external_interrupt): Declare it to be
	INLINE_INTERRUPTS, not INLINE_CPU.

Mon Apr 15 23:30:56 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* events.c (insert_event_entry): Allow events to be scheduled
	*NOW* (at delta time 0).  Add assertions to clarify behavour of
	event queue.

	* events.c (update_time_from_event): New function. Calculates the
	number of ticks from the next event.  Use this.

Sun Apr 14 21:39:45 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_netbsd.c (do_break): Return 0 if success (instead of
	adjusted break).

	* device_table.c (vm_ioctl_callback): Don't return adjusted break
	(isn't needed).

Sun Apr 14 21:32:41 1996  Andrew Cagney  <cagney@highland.com.au>

	* device_table.h: Change type of the device ioctl so that it
	returns an int (status).
	* device.h (device_ioctl): Ditto.
	* device.c (device_ioctl): Ditto.

	* device_table.c (stack_ioctl_callback): Return 0 status.
	(vm_ioctl_callback): Ditto

Sat Apr 13 00:00:24 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_netbsd.c (do_read): Correctly set the return value.
	(do_getpid): Ditto.
	(do_getuid): Ditto.
	(do_geteuid): Ditto.
	(do_dup): Ditto.
	(do_getegid): Ditto.
	(do_getgid): Ditto.
	(do_sigprocmask): Ditto.
	(do_umask): Ditto.
	(do_dup2): Ditto.
	(do_gettimeofday): Ditto.
	(do_getrusage): Ditto.
	(do_fstat): Ditto.
	(do_stat): Ditto.
	(do_lseek): Ditto.
	(do___sysctl): Ditto.

Fri Apr 12 20:56:47 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device_table.c (vm_ioctl_callback): Don't access the processor
	registers directly, instead leave it to the caller to handle this.

	* emul_netbsd.c (do_break): Which calls vm_ioctl_callback to
	perform a break.  Pass in the new break value and set the
	registers according to the result.

	* emul_generic.c (emul_write_status): Change so that r3 contains
	either status or errno and failure is indicated by SO.

Thu Apr  4 23:03:38 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_bugapi.c (emul_bugapi_create): More strict check of OEA
	address.

Thu Apr  4 20:58:05 1996  Andrew Cagney  <cagney@highland.com.au>

	* interrupts.h (interrupts): New structure contains state of
	pending interrupts.

	* cpu.c (cpu_interrupts): New function.  Pending interrupt status
	in the cpu and grant access to it.  Add interrupts to cpu
	structure.

Fri Mar 29 22:09:25 1996  Andrew Cagney  <cagney@highland.com.au>

	* device.c (device_tree_add_parsed): Check that the creation of a
	device instance worked before using it.

	* psim.c (psim_halt): Remove cia argument from psim_halt.  This
	function does not save the CIA so do not pass it in.

Fri Mar 29 21:30:56 1996  Andrew Cagney  <cagney@highland.com.au>

	* hw_pal.c (hw_pal): Merge the halt and icu and console devices
	found in device_table.c into a single hack pal.

	* device_table.c (halt, icu, console): Delete.

	* Makefile.in (hw_pal.o): New dependency.

	* emul_generic.c (emul_add_tree_hardware): Re-arange device tree
	so that it uses the pal instead of the icu/halt/console devices.
	Wire the pal's interrupt ports up to the cpu nodes.

Fri Mar 29 20:17:17 1996  Andrew Cagney  <cagney@highland.com.au>

	* hw_iobus.c (hw_iobus_attach_address_callback): Move from
	device_table.c to here.

	* Makefile.in (hw_iobus.o): New dependency.

Fri Mar 29 12:17:58 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* emul_bugapi.c (_os_emul_data): Add fields for output, input.
	(emul_bugapi_create): Create input, output from /chosen/stdin and
	/chosen/stdout.
	(emul_bugapi_do_{read,write}): Switch to use device_instance
	interface.
	(emul_bugapi_instruction_call): Change calls to
	emul_bugapi_do_{read,write} to pass device instance argument.

Tue Mar 26 14:57:58 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* igen.c (idecode_switch_end): Fix 2/26 change so that an extra
	default is not written out if a default was already written.

	* psim.c (psim_{read,write}_register): Use sizeof unsigned_8 to
	size cooked_buf, not sizeof natural_word, since floating point
	registers are 8 bytes.

Mon Mar 25 22:07:13 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* configure: Regenerate with autoconf 2.9.

Thu Mar 21 00:14:26 1996  Andrew Cagney  <cagney@highland.com.au>

	* device_table.h: Always include string headers.

Thu Mar 21 00:06:09 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* main.c (error): Be careful to not try to print out statistics
	when the simulation was never created.

Sun Mar 17 22:40:57 1996  Andrew Cagney  <cagney@highland.com.au>

	* basics.h: Move the event queue's definition to here so that it
	can be refered to globally with out importing all of events.h.

	* psim.h, psim.c (psim_event_queue): New function.  Grant access
	to the simulation event queue.  Will make this the single point of
	access (there is after all only one event queue in the
	simulation).

	* cpu.c (cpu_create): Use psim_event_queue to obtain the event
	queue instead of it being passed in.  No longer allow access to
	the cpu's copy of the event queue.

Sun Mar 17 22:40:57 1996  Andrew Cagney  <cagney@highland.com.au>

	* events.h, events.c (event_handler): Remove event_queue from
	arguments passed to an event handler.  That argument is redundant
	- the `data' should refer to a data structure that contains the
	event queue if queing is needed.

	* cpu.c (cpu_decrement_event): adjust

	* events.c (event_queue_process): adjust

Sun Mar 17 22:40:57 1996  Andrew Cagney  <cagney@highland.com.au>

	* device.h, device.c (device_system): New, returns a handle for
	the system given the device.

	* device.c (device_address_init): Store a pointer back to the
	system in each devices node.

	* device_table.h: Don't pass `system' into each device when it is
	being initialized, this is now available using device_system(me).

	* device.c (device_address_init, device_data_init): Adjust.

	* hw_cpu.c, hw_nvram.c, hw_memory.c, hw_eeprom.c, device_table.c:
	Adjust.

Sun Mar 17 22:40:57 1996  Andrew Cagney  <cagney@highland.com.au>

	* interrupts.c (decrementer_interrupt, external_interrupt):
	Remember that an interrupt wasn't delivered so that it can be
	tried again later.

	* interrupts.c (check_masked_interrupt): New function.  (re)
	checks for the posibility that a recent change to the MSR may have
	made it possible to deliver an interrupt that was previously
	masked be the EE bit.

	* ppc-instructions (mtmsr, mfmsr, rfi): Check for posibility of
	a pending interrupt being delivered using check_masked_interrupt().

	* cpu.c (cpu_decrement_event): Just call decrementer_interrupt()
	leaving it to that module to handle both interrupt synchronization
	and masking.

	* cpu.c (struct _cpu): remove variables that were going to record
	pending decrementer and external interrupts.

Sun Mar 17 22:40:57 1996  Andrew Cagney  <cagney@highland.com.au>

	* hw_cpu.c, hw_cpu.h: New files.  Implement a device that sits
	between the interrupt controller and the simulators internal
	processor model.  Maps device interrupts onto the processor
	interrupt function calls.

Mon Mar  4 06:06:54 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* hw_nvram.c: NVRAM device that includes a real-time clock that is
	updated each second.

Mon Mar  4 04:18:50 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.h (attach_type): Remove attach_default type address
	spaces.  Will replace with levels of callback memory.

	* corefile.h, corefile.c (new_core_mapping), corefile.c
	(core_map_attach): Replace default attach with a layerd callback
	approach.

Sun Mar  3 03:58:46 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (split_property_specifier): ensure that only a single
	property is found.
	(split_value): New function, parses the value part of a device
	spec.

	* device.c (device_tree_add_parsed): Use the interrupt conversion
	functions to determine the interrupt port numbers.

	* device_table.h: Add table that maps between an interrupts
	symbolic name and its port number.

	* device.h, device.c (device_interrupt_decode,
	device_interrupt_encode): new functions use the recently added
	interrupt port name/number tables to perform conversion.

Sun Mar  3 03:23:59 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.h, device.c (device_set_array_property,
	device_set_boolean_property, device_set_ihandle_property,
	device_set_integer_property, device_set_string_property): New
	functions - allow the value of a given property to be changed.

	* device.h, device.c: Re-order declaration and definition of
	property functions.

Sun Mar  3 03:10:22 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* device.c (device_tree_print_device, device_tree_add_parsed):
	Remove references to phandle properties.

Wed Feb 28 00:43:07 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>

	* Makefile.in (corefile.o): missing dependency on device_table.h
	etc.

Tue Feb 27 23:59:35 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>

	* device_table.h: Revamp device init callbacks so that they are a
	sub structure.
	* device.c (device_init_data, device_init_address): If an init
	callback is NULL assume it should do nothing.
	* device_table.c (ignore_device_init, unimp_device_init): delete
	as redundant.
	* device_table.c, hw_memory.c: adjust.

	* (io): ditto.
	* (dma): ditto.
	* (device_instance): ditto.
	* (ioctl): ditto.
	* (address nee config_address): ditto.
	* (interrupt): ditto.

Mon Feb 26 21:11:20 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>

	* igen.c (idecode_switch_end): Output a default entry when the
	switch statement is perfect.  Firstly stops GCC complaining about
	an incomplete switch and secondly it will be eliminated by a good
	compiler any way.

Mon Feb 26 22:47:15 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>

	* Makefile.in (hw.h, hw.c): New targets. Create from the list of
	hw_*.c files. hw.h declares a device descriptor table for each hw
	device while hw.c lists those tables in a form suitable for the
	construction of a top leveltable in device_table.c.

	* Makefile.in (device_table.o): now depends on hw.c a generated
	table of hw.

	* device_table.c (device_table): Re-arange the table of devices so
	that two levels are possible.  Make use of hw.c.
	* device_table.h: ditto.

	* device.c (device_template_create_device): Handle new two level
	device lookup table.
	* device.c (device_usage): ditto.

Mon Feb 26 22:24:00 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>

	* device_table.c: Delete the memory device (moved to hw_memory.c).

	* hw_memory.c: New file.  Just an OpenBoot memory device.

Wed Jan 17 21:47:34 1996  Andrew Cagney  <cagney@highland.com.au>

	* device.c (device_init_address): New.  Split initialization into
	two stages, address and address spaces
	* device.c (device_init_data): New. ... and data or other work.
	With out this, devices try to modify memory before it as been
	attached.

	* device.c (device_tree_init): Update to perform staged
	initialization.

	* device.c (device_init): Delete.

Wed Jan 17 21:43:09 1996  Andrew Cagney  <cagney@highland.com.au>

	* device_table.c (data_*): Rewrite to make heaver use of property
	nodes. Allow initialization by different data types.
	* device_table.c (htab_* pte_*): Rewrite to use properties.

	* emul_chirp.c (emul_chirp_create): Use
	* emul_bugapi.c (emul_bugapi_create): Ditto
	* emul_netbsd.c (emul_netbsd_create): Ditto

Wed Jan 17 21:24:50 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_generic.c (emul_add_tree_options): Annotate existing tree
	with options that haven't yet been specified.
	* emul_generic.c (emul_add_tree_hardware): Annotate existing tree
	with demo devices and properties.

	* emul_chirp.c (emul_chirp_create): Update to use new
	device_tree_add_parsed call and additional information now
	included in the device tree.  Use emul_add_tree* functions to add
	any missing details.
	* emul_bugapi.c (emul_bugapi_create): Ditto
	* emul_netbsd.c (emul_netbsd_create): Ditto

Wed Jan 17 21:18:27 1996  Andrew Cagney  <cagney@highland.com.au>

	* device.c (device_instance_create): New. Create/delete and
	operate on instances of a device.
	* device.c (device_instance_delete): Ditto
	* device.c (device_instance_read): Ditto
	* device.c (device_instance_write): Ditto
	* device.c (device_instance_seek): Ditto
	* device.c (device_instance_data): Ditto
	* device.c (device_instance_name): Ditto
	* device.c (device_instance_path): Ditto

	* emul_chirp.c (chirp_emul_open): Implement using device_instance.
	* emul_chirp.c (chirp_emul_close): Ditto
	* emul_chirp.c (chirp_emul_read): Ditto
	* emul_chirp.c (chirp_emul_write): Ditto
	* emul_chirp.c (chirp_emul_seek): Ditto

	* emul_chirp.c (chirp_read_t2h_args): Read arguments from device.
	Being careful to convert all from target to host byte order.
	* emul_chirp.c (chirp_write_h2t_args): Converse.

Wed Jan 17 20:07:15 1996  Andrew Cagney  <cagney@highland.com.au>

	* device.c (device_tree_add_parsed): New.  Rewrite code to add
	devices to the device tree so that a single printf style function
	is used.

	* device.c (device_tree_add_*): Delete. Replaced by above.

	* device.c (split_device_specifier): Functions to manipulate a
	device specifier (path) breaking it into its components
	* device.c (split_property_specifier): Ditto
	* device.c (split_device_name): Ditto
	* device.c (split_find_device): Ditto

	* device.c (scan_*): Delete

	* device.c (device_tree_find_device): Rewrite to use above.
	* device.c (device_add_property): Ditto

Wed Jan 17 19:51:56 1996  Andrew Cagney  <cagney@highland.com.au>

	* psim.c(psim_options): Parse the psim options, installing their
	value in the device tree.  Options are now first entered into a
	device tree and then extracted out again when needed.  This allows
	greater flexability in configuration.

	* psim.c (psim_tree): Returns a basic device tree ready for
	parsing by psim_options.
	* psim.c (psim_usage): New.  Give usage to varing levels of detail
	according to the verbosity.  In turn output device and trace
	usage.

	* main.c (main): Update to use new system
	* sim_calls.c (sim_open, sim_do_command): Ditto

	* psim.c (psim_options): Add `r' option - ram size.
	* psim.c (psim_options): Add `o' option - openboot tree entry.
	* psim.c (psim_options): Add `h'/`H' options - more help.

	* debug.c (trace_usage): Add more detailed help.
	* device.c (device_usage): New. Output help including a list of
	the devices currently available in the device table.
	* device_table.c: Add usage operator to each device.

	* corefile.c (core_create, core_device_create): Adjust so that the
	core device is created earlier for psim_tree().  Core can later be
	created from it.

	* psim.c (psim_create): Update to handle above way of creating
	things.  Extract all information from the device tree.

	* device_tree.c (trace_*): New device node, its properties are
	used to set the value of the trace options.  Init this device (in
	psim_options) when ever the options are updated.

Wed Jan 17 19:46:07 1996  Andrew Cagney  <cagney@highland.com.au>

	* debug.h: Add trace_print_info, trace_print_device_tree and
	trace_dump_device_tree.  The first is a replacement for the
	variable `print_info' found in main.c and sim_calls.c.  The latter
	two enable the dumping of the entire device tree.

	* debug.c: Add to trace_description table.

	* main.c (main): Use above trace instead of local variable
	* sim_calls.c (sim_close): Ditto

	* device.c (device_tree_print_device): New.  Prints the device
	tree in a format that is consistent with what can be parsed by the
	device tree load from file code.

	* psim.c (psim_create): Dump device tree if enabled. If nump
	selected, exit psim immediately.

Wed Jan 17 19:36:52 1996  Andrew Cagney  <cagney@highland.com.au>

	* corefile-n.h (core_map_read_N): When mapping from an address to
	a device, do not subtract the devices base.  The device its self
	can do this.  Brings the behavour into line with OpenBoot.
	* corefile-n.h (core_map_write_N): Ditto
	* corefile.c (core_map_read_buffer): Ditto
	* corefile.c (core_map_write_buffer): Ditto

	* device_table.c (console_io_read_buffer_callback): Adjust to
	handle biased address.
	* device_table.c (console_io_write_buffer_callback): Ditto

Wed Jan 17 18:36:09 1996  Andrew Cagney  <cagney@highland.com.au>

	* device.c (attach_device_interrupt_edge): New. Interrupt model
	did not allow interrupts to be wired up as a general net (edges).
	Re-implement so that interrupt events can be passed to multiple
	controllers and interrupt controllers can further propogate
	interrupt events.

	* device.c (attach_device_interrupt_edge) : New, Ditto
	* device.c (detach_device_interrupt_edge) : New, Ditto
	* device.c (clean_device_interrupt_edges) : New, Ditto
	* device.c (device_interrupt_event) : New, Ditto
	* device.c (device_interrupt_attach) : New, Ditto
	* device.c (device_interrupt_detach) : New, Ditto
	* device.c (device_child_interrupt_attach) : New, Ditto
	* device.c (device_child_interrupt_detach) : New, Ditto

	* device.c (device_attach_interrupt) : Delete old
	* device.c (device_detach_interrupt) : Delete old
	* device.c (device_interrupt) : Delete old
	* device.c (device_interrupt_ack) : Delete old

	* device_table.c (unimp_*) : Update to match

	* device_table.c (icu_io_write_buffer_callback) : Update to use
	interface.
	* device_table.c (icu_interrupt_event_callback) : Ditto

Wed Jan 17 18:18:40 1996  Andrew Cagney  <cagney@highland.com.au>

	* device.c (external_to_device) : New function that provides a
	standard mapping between a devices internal representation (a
	pointer) and its external (or what is passed to a client)
	representation (a phandle).  Implement using the cap object
	attached to the root node.

	* device.c (device_to_external) : Ditto
	* device.c (external_to_device_instance) : Ditto but for ihandle
	and device instance.
	* device.c (device_instance_to_external) : Ditto

	* Makefile (device.o): Add dependency on cap.

	* emul_chirp.c (struct _emul_chirp_data) : Elimate use of cap. Code
	needing to translate between internal and external representations
	changed to use the external_to_device et.al. device operations.
	* emul_chirp.c (chirp_emul_*) : Ditto

	* Makefile (emul_chirp.o): Remove dependency on cap

Sat Jan  6 10:13:26 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>

	* emul_chirp.c (map_over_chirp_note): Tighten up (and fix) checks
	on OpenBoot note section.

Fri Jan  5 20:28:53 1996  Andrew Cagney  <cagney@hignland.com.au>

	* emul_generic.c (emul_write_buffer): Use vm faulting byte
 	read/write calls for buffer transfers.  This will cause a fault to
 	occure if the transfer fails.  CHRP catches the fault while the
 	others suffer the consequences.
	(emul_read_buffer): Ditto.
	(emul_write_word): Ditto.
	(emul_read_word): Ditto.
	(emul_read_string): Ditto.

Fri Jan  5 18:55:34 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_chirp.c (emul_chirp_create, emul_chirp_instruction_call),
 	emul_generic (emul_blr_instruction): Use a real blr instruction to
 	return from a client service call.

	* emul_chirp.c (services): Add all OpenBoot services to table.

	* emul_generic.h, emul_bugapi.c (emul_bugapi_create), emul_chirp.c
 	(emul_chirp_create) : Use names instead of numbers for
 	instructions being stored in memory.

Fri Jan  5 18:52:28 1996  Andrew Cagney  <cagney@highland.com.au>

	* Makefile.in (maintainer-clean): Remove .log, core and *.core
 	(From NetBSD) files.

Wed May 29 22:57:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* ChangeLog.00, ChangeLog: ChangeLog from gdb-4.16 becomes
	ChangeLog.00

Wed May 29 22:57:40 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

	* ChangeLog.00, ChangeLog: ChangeLog from gdb-4.16 becomes
        ChangeLog.00

Thu Apr  4 15:17:22 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* INSTALL: Fix some long lines and remove x86 specific options in
	the examples.

Sun Mar 31 15:47:33 1996  Andrew Cagney  <cagney@kremvax.highland.com.au>

        * INSTALL: Update to reflect gdb-4.16.

        * RUN: Update to reflect gdb-4.16.  Review notes on building a BSD
        runtime environment.

	* README: Point out copyright status of simulator in introduction.

Thu Mar  7 19:53:49 1996  Michael Meissner  <meissner@cygnus.com>

	* emul_netbsd.c: Only include sys/mount.h if HAVE_SYS_MOUNT_H is
	defined.
	* configure.in: Test for sys/mount.h.
	* configure,config.in: Regenerate.

Thu Feb 22 22:48:57 1996  Andrew Cagney  <cagney@highland.com.au>

	* README, RUN, INSTALL: Update to reflect announcement
	* psim: PSIM 1.0.1 released

Thu Feb 22 14:01:56 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_bugapi.c (emul_bugapi_do_read): New function to handle
	reads.
	(emul_bugapi_instruction_call): Add support for .INCHR/.INLN
	system calls.

	* emul_bugapi.c (emul_bugapi_do_write): Call flush_stdoutput.
	* emul_netbsd.c (do_write): Call flush_stdoutput.

	* main.c (flush_stdoutput): Do fflush (stdout).
	* sim_calls.c (flush_stdoutput): Do gdb_flush (gdb_stdout);
	* sim_callbacks.h (flush_stdoutput): Declare.

Wed Feb 21 10:39:35 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_bugapi.c (bug_mapping): New structure to map bug system
	call numbers to a string.
	(toplevel): Add remaining bugapi system calls.
	(emul_bugapi_instruction_name): Map bugapi system call number to a
	string.
	(emul_bugapi_do_write): Common code to process write system calls.
	(emul_bugapi_instruction_call): If os-emul tracing is on, trace
	the system call.  Use the name to print unknown system call.
	Correct implementation of _OUTLN.  Add support for _OUTSTR and
	_PCRLR system calls.

Wed Feb 21 17:07:27 1996  Andrew Cagney  <cagney@highland.com.au>

	* NOTES: New file.  Ramblings on why things were done they way
 	they were.

	* psim.c (psim_options): Didn't enter the model value into the
 	device tree as a string.

  	* cpu.c (cpu_synchronize_context): Wrong test for conditional
 	flush of cache.

	* emul_generic.c (emul_add_tree_hardware): reg value didn't match
 	bus address.

	* ppc-opcode-flat: new file. Generate an instruction decode
 	function like ppc-opcode-complex but use switch statements.

	* INSTALL: document new opcode file, add example configurations.

Tue Feb 20 18:42:31 1996  Andrew Cagney  <cagney@highland.com.au>

	* main.c (main): rename psim instance (system) to simulation and
 	make global.
	* main.c (error): print out performance even when an error occures.

	* emul_bugapi.c (emul_bugapi_create): Fix argument passing.

	* emul_generic.c (emul_add_tree_hardware): Move hardware devices
 	to 0x80000000 from 0x400000.

Mon Feb 19 22:54:40 1996  Andrew Cagney  <cagney@highland.com.au>

	* ppc-instructions (TLB Invalidate Entry, TLB Invalidate ALL):
        Implement by passing on request to all processors.
	* ppc-instructions (TLB Synchronize): Implement as empty, processor
	tlb's are always in sync.

	* cpu.c (cpu_page_tlb_invalidate_all): New function.  Pass on TLB
        invalidate request to processors VM sub-system.
	* cpu.c (cpu_page_tlb_invalidate_entry): Ditto.

	* vm.c (vm_page_tlb_invalidate_all): New function. Mark all page
        TLB entries as invalid.
	* vm.c (vm_page_tlb_invalidate_entry): New function. Ditt but only
	invalidate one TLB entry.

	* psim.c (psim_init): Invalidate TLB's before (re)starting.

Mon Feb 19 21:25:56 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_generic.c (emul_add_tree_options): Add argument
        oea_interrupt_prefix (0 or 1) that specifies the prefix MSR[IP]
        and hence the location of the interrupt vectors.  Add this to the
        device tree.

	* emul_chirp.c (emul_chirp_create): Allow configuration of
        floating-point and interrupt prefix (default 0) using the above.

	* emul_netbsd.c (emul_netbsd_create): Pass dummy arg for
        interrupt-prefix.

	* emul_bugapi.c (emul_bugapi_create): Allow configuration of
        interrupt prefix (default 1) and configure interrupt table traps
        accordingly.

	* emul_generic.c (emul_add_tree_hardware): Include a small eeprom
        in the list of devices.

	* device_table.c: For moment fake eeprom device by a memory
        device.  In future will need a proper eeprom device.

Tue Feb 20 17:01:26 1996  J.T. Conklin  <jtc@rtl.cygnus.com>

	* config.in: Regenerated.

Fri Feb 16 10:42:27 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* psim.c: Include options.h so print_options is declared.

Thu Feb 15 18:10:13 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_netbsd.c (toplevel): Do not include sys/resource.h if the
	system doesn't have it, and turn off getrusage processing.
	(write_rusage): #ifdef out if we don't have getrusage.
	(do_getrusage): Define as 0 if we don't have getrusage.

Wed Feb 14 17:38:12 1996  J. T. Conklin  <jtc@cygnus.com>

	* configure.in (AC_HEADER_DIRENT): Add, so that we can figure out
	where the directory functions are declared.
	* configure: Regenerate

	* emul_netbsd.c: Use the macros defined by configure to find the
	appropriate directory functions.

Thu Feb  8 00:53:13 1996  Andrew Cagney  <cagney@highland.com.au>

	* configure.in (xor_endian): Trace setting of xor-endian flag.

Wed Feb  7 18:20:56 1996  Andrew Cagney  <cagney@highland.com.au>

	* psim.c (psim_usage): Extend documentation.

	* ppc-instructions (model-print): fix typo.

Sun Feb  4 23:58:02 1996  Andrew Cagney  <cagney@highland.com.au>

	* configure.in (with-smp): Default configuration allow up to
	five processors (but enable only one).

	* emul_bugapi.c (emul_bugapi_create): If floating-point is
	allowed, enable the floating point instruction set in the
	msr.

Tue Jan 30 22:52:32 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_chirp.c (chirp_emul_seek, chirp_emul_read,
        chirp_emul_write): Tolerate invalid ihandles.

	* device.c (device_instance_create, device_instance_delete):
	init/delete instance name

	* emul_chirp.c (emul_chirp_instruction_call): Read the nr args and
        returns when determining the service.

	* emul_chirp.c (chirp_read_t2h_args): Allow variable number of
        args for the method "call-method".

	* emul_chirp.c (chirp_emul_getprop): Tolerate a n_returns of zero
        - should be one. Some OpenBoot code doesn't pass correct arg.

	* emul_chirp.c (chirp_emul_getprop): Trace more property types.

Tue Jan 30 19:12:29 1996  Andrew Cagney  <cagney@highland.com.au>

	* RUN: New file. Describe how to run PSIM
	* INSTALL: New file. Describe how to install PSIM
	* README: New file. Overview PSIM.
	* BUGS: New file. Briefly discuss bugs and limitations

Wed Jan 24 20:28:08 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_bugapi.c (OEA_START_ADDRESS): Put it back to 0x100000,
        wasn't correctly using GLD.

Mon Jan 22 22:44:13 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_generic.c (emul_add_tree_options): Make default number of
	active processors 1 (even when SMP enabled).

Mon Jan 22 22:37:34 1996  Andrew Cagney  <cagney@highland.com.au>

	* device_table.c (icu_io_read_buffer_callback): Add extra register
        (at addr + 4) that returns number of processors.

	* emul_generic.c (emul_add_tree_hardware): Update device node to
        match.

Mon Jan 22 22:00:42 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_bugapi.c (OEA_START_ADDRESS): Change to 0x4000 so that it
        matches gas-960116/ld.

Fri Jan 19 00:32:27 1996  Andrew Cagney  <cagney@highland.com.au>

	* psim-960119 released - psim-1.0b01.

Fri Jan 19 00:32:27 1996  Andrew Cagney - aka Noid  <cagney@highland.au.com>

	* psim.c (psim_create): Re-order so that all options are set
        before the CPU's are created.  Was breaking mon_create();

	* psim.c (psim_create): Tidy up conflicting configuration errors.

	* debug.c: Add missing print-info entry to trace table.

	* os_emul.c (os_emul_create): Fix `-e' option. Was looking under
        wrong name.

	* psim.c (psim_options): Fix `-r' option. Was entering under wrong
        name.

Thu Jan 18 20:33:48 1996  Andrew Cagney  <cagney@highland.com.au>

	* vm.c (om_unpack_bats): Fix checking of bat bits.

	* emul_chirp.c (emul_chirp_create): Store address of OB in memory
 	in the os_emul_data structure.

	* emul_bugapi.c (emul_bugapi_create): Store the address of the
 	bugapi code (in main memory) in the os_emul_data structure.

Thu Jan 18 01:14:55 1996  Andrew Cagney  <cagney@highland.com.au>

	* vm.c (om_translate_effective_to_real): Fix trace output.

Wed Jan 17 22:21:55 1996  Andrew Cagney  <cagney@highland.com.au>

	* device_table.c (generic_device_init_address): Create memory from
        information obtained from `reg' property.
	* device_table.c (vm_init_address_callback): Use information
        obtained from properties.
	* emul_netbsd.c (emul_netbsd_create): Update to create device and
        property entries to match

Tue Jan 16 09:50:53 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* idecode_expression.h (ALU_END): Add ITRACE of the result.

	* ppc-instructions (Equivalent): Enable this instruction.
	(Add to Minus One Extended): Ditto.
	(Subtract from Minus One Extended): Ditto.
	(Add/And/Or/Xor Immediate): Add alu trace of result.
	(Add/And/Or/Xor Shifted Immediate): Ditto.
	(And/Or/Equivalent/Nand/Nor): Ditto.
	(And/Or with Complement): Ditto.
	(Extend Sign Byte/Half Word): Ditto.
	(Count Leading Zeros): Ditto.
	(Shift Right Algerbraic Word): Ditto.
	(Shift Right Algerbraic Word Immediate): Ditto.

Tue Jan  9 15:10:27 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_bugapi.c (emul_bugapi_instruction_call) : Make format type
 	correct.
	* emul_chirp.c (map_over_chirp_note) : Ditto
	* emul_chirp.c (chirp_emul_test) : Ditto
	* device_table.c (register_init): Ditto

Tue Jan  9 14:16:26 1996  Andrew Cagney  <cagney@highland.com.au>

	* configure.in: Make disable-sim-switch default.  Switch only
 	useful if using --enable-sim-opcode=ppc-opcode-stupid and then
 	only marginally so.

Mon Jan  8 12:17:22 1996  Michael Meissner  <meissner@tiktok.cygnus.com>

	* device_table.c (register_init): Make format type correct.

Wed Jan  3 19:21:46 1996  Andrew Cagney  <cagney@highland.com.au>

	* emul_bugapi.c (emul_bugapi_create): Add nodes to init the
 	system-call trap to the emul instruction call instruction (Along
 	with an rfi and infinate loop).

	* emul_bugapi.c (emul_bugapi_instruction_call): Expand to include
 	a few real PPC bug calls.  Test with simple hello world.

Tue Jan  2 20:51:19 1996  Andrew Cagney - aka Noid  <cagney@highland.com.au>

	* device.h, device.c (device_child, device_sibling): New
        functions.  Return corresponding device value.

	* emul_chirp.c (chirp_emul_child, chirp_emul_peer,
        chirp_emul_parent): New functions - emulate corresponding OpenBoot
        interfaces.

	* device_table.c (register_init): Extend properties attached to
        register init node to allow a specific processor's register to be
        specified.

	* emul_chirp.c (emul_chirp_create): Init SMP correctly - the
        initial PC for all processors is an infinate loop but then, for
        processor zero, is quickly changed to be the correct code starting
        address.

	* emul_chirp.c (emul_chirp_create): Add fake bootpath
        et.al. properties to tree.

	* emul_chirp.c (chirp_emul_getproplen): New function.  Emulate the
        getproplen OpenBoot call.

	* emul_chirp.c (emul_chirp_instruction_call): Document other
        possible chirp emulation internal states.

	* emul_chirp.c (emul_chirp_instruction_call): Trace failed lookups
 	as well as successful ones.

	* emul_chirp.c (emul_chirp_open): New function - handle open
        client call.

	* Makefile.in (maintainer-clean): Proper rule that eliminates more
        junk.

Tue Dec 19 13:00:11 1995  Andrew Cagney  <cagney@highland.com.au>

	* emul_chirp.c (chirp_emul_exit): Full out call.

	* device_table.c (htab_map_page): Wasn't handling byte swap when
	creating entries in the hash table.

	* device.c (device_tree_find_node): Allow primative wild-card match
 	of device names with the path.

	FIXME: As mentioned earlier, the device stuff needs work to bring
 	it into line with OpenBoot.  Part of this work is rewriting the
	find_node function so that it behaves as specified in p1275.

Mon Dec 18 19:58:56 1995  Andrew Cagney  <cagney@highland.com.au>

	* emul_chrp.c (chirp_emul_write, chirp_emul_finddevice): add
 	better tracing.

	* emul_chrp.c: Change return type of emul functions to int.  Emul
 	functions either return -1 or zero so unsigned was a bit
 	dangerous.

	* inline.h (*), igen.c, dgen.c, *: Update INLINE macros so that
        they are paramaterised with the type of the function.  Gets around
        the problem of `static' needing to come first with `attribute'
        comming last.  Format declarations and definitions so that emacs
	doesn't get confused.

Fri Dec 15 17:06:44 1995  Andrew Cagney  <cagney@highland.com.au>

	* std-config.h (PSIM_INLINE): Add missing inline configuration
 	control for the main loop.

	* mon.c (mon_print_info): If monitoring disabled still print out
 	the number seconds used.

	* psim.c (run_until_stop): Don't monitor the cache misses when
 	monitoring is disabled.

	* configure.in (sim_mon, sim_monitor): Correct typo - sim_mon ->
 	sim_monitor for shell variable (or should that have been the other
 	way around?).

	* vm.c (vm_synchronize_context): Fix wrong test for unsuported
 	change in endian-mode.

	* std-config.h (WITH_REGPARM), inline.h (IDECODE_INLINE,
	SEMANTICS_INLINE): Add -DWITH_REGPARM=<n> option.  Enables the
	__attribute__((__regparm(WITH_REGPARM))) for some functions.
	configure with --enable-sim-cflags="-DWITH_REGPARAM=3" (say).
	Unfortunatly it tickles a bug (gcc?) and can't be used.

Mon Dec 18 13:36:06 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* device.c (device_tree_add_device): Make trace fprintf arguments
	type correct.
	* device_table.c (htab_decode_hash_table): Ditto.
	(htab_map_binary): Ditto.
	(htab_init_callback): Ditto.
	* vm.c (om_virtual_to_real): Ditto.

Sat Dec 16 09:54:18 1995  Michael Meissner  <meissner@wogglebug.tiac.net>

	* emul_netbsd.c (emul_netbsd_create): Deal with new BFD that
	changed how big/little endian support is recorded, while remaining
	compatible with the old BFD with #ifdefs.
	* emul_chirp.c (emul_chirp_create): Ditto.
	* emul_bugapi.c (emul_bugapi_create): Ditto.

Fri Dec 15 15:55:56 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* std-config.h (MODEL_INLINE): Turn off INLINE_MODULE by default.

	* corefile.h: Delete declarations for unknown functions.
	* device.h: Ditto.
	* interrupts.h: Ditto.
	* interrupts.c: Ditto.

Thu Dec 14 18:49:34 1995  Andrew Cagney  <cagney@highland.com.au>

	* lf.c (lf_print_function_type): New function.  Munges a function
 	type so that the prefix (eg INLINE...) is inserted after the type
 	but before any `*'.

	* igen.c: Change to output functions using this.

Wed Dec 13 23:47:00 1995  Andrew Cagney   <cagney@highland.com.au>

	FIXME: Emul CHIRP does not correctly implement the find device
 	function.

	FIXME: Emul CHIRP and device do not implement device instance
 	operations.

Wed Dec 13 23:47:00 1995  Andrew Cagney   <cagney@highland.com.au>

	* options.c (options_inline): Function to output meaningful
        description of the INLINE options.

	* configure.in (inline): Replace inline magic numbers with macro
        names. Map 1->LOCALS_INLINE and 2->ALL_INLINE.

	* inline.h, inline.c: update to use inline method.

	* std-config.h (CPU_INLINE), cpu.h, inline.h, inline.c: make cpu.h
        inline always.

	* std-config.h (EVENTS_INLINE): Inline events in psim.

Wed Dec 13 22:01:21 1995  Andrew Cagney   <cagney@highland.com.au>

	* device_table.c (htab_sum_binary): DMA binaries to correct byte
        within a page.

Tue Dec 12 22:51:18 1995  Andrew Cagney   <cagney@highland.com.au>

	* psim.c (psim_merge_device_file): Change `=' to `==', was this an
        error?

Tue Dec  5 11:56:14 1995  Andrew Cagney  <cagney@highland.com.au>

	* ppc-instructions (ppc_nr_mtcrf_crs, ppc_branch_conditional_name,
 	ppc_function_unit_name): Simplify by declaring these arrays as
 	pure and simple static (instead of STATIC_MODEL).

Tue Dec  5 00:45:34 1995  Andrew Cagney  <cagney@highland.com.au>

	* sim_calls.c (sim_create, sim_load), main.c (main), psim.c: Pass
        an options device into psim_create() so that options can be merged
        into the tree.

	* device.c (*add*): Change semantics so the add functions only add
        when the new device (or property) doesn't already exist.  This
        allows merging of options and data.

Mon Dec  4 17:12:13 1995  Andrew Cagney  <cagney@highland.com.au>

	* Makefile.in (BASICS_H): Didn't include basics.h in the list of
        header files to depend on.

Mon Dec  4 17:12:13 1995  Andrew Cagney  <cagney@highland.com.au>

	* std-config.h: (*_MODULE): Extend the <module>_inline macro's so
        that they also allow control over static functions.  Rewrite
        document to reflect this.

	* std-config.h: (INLINE): Simplify definition, the above and
        earlier changes to igen.h eliminate the need to be defensive about
        enabling the inline of static functions.

	* std-config.h: (SIM_ENDIAN_INLINE, BITS_INLINE): Document limited
        suport for inlineing of modules for all callers.  Adjust relevant
        macro's so that DEFAULT_INLINE will enable this.

	* basics.h: Re-order #includes and definitions so that c-code for
        basic include files does not call functions delcared in later
        #includes.

	* basics.h (__attribute__), sim_callbacks.h: Move attribute macro
        to basics.h and add hack (include <stdio.h>) to try and bring that
        and other possible conflicting macros into scope much earler.

	* sim-endian.h,c (SIM_ENDIAN_INLINE) bits.h,c (BITS_INLINE):
        Change to use the updated inline definitions.  If enabled
        immediately include the corresponding c-code so that it will inline
        for all modules.

	* inline.h, inline.c (SIM_ENDIAN_INLINE, BITS_INLINE): Remove
        these cases, moved to module specific header files.

Sat Dec  2 18:37:51 1995  Andrew Cagney  <cagney@highland.com.au>

	* vm.c, vm_n.c: Fix htab code.

	* vm.c (vm_data_map_read_buffer): Was using EA not RA when reading
        the data from core.

	* device.c: Fix htab create code.

Fri Nov 24 23:10:09 1995  Andrew Cagney  <cagney@highland.com.au>

	* bits.h, bits.c (EXTRACTED): Convert to function, fix - had &&
        instead of &.

	* sim-endian.h (SWAP_N), sim-endian-n.h, sim-endian.c: How
        embarasing - fix yet another bug in the swap code!  Simplify
        everything by using more functions. Add host to big-endian byte
        swapping support.

Fri Nov 24 23:10:09 1995  Andrew Cagney  <cagney@highland.com.au>

	* devices.h, devices.c: delete, replaced by the files
        device_table.[ch] and device.[ch].
	* device_tree.h, device_tree.c: ditto

	* device_table.h, device_table.c: New files.  Contain a table of
        devices.

	* device.h, device.c, Makefile.in, std-config.h (DEVICE_INLINE),
        options.c (print_options): New files.  Define the device object
        along with any attached properties.

	* device_tree.h, device_tree.c: Update to use new device object.
        For convenience, change the printd functions into device_tree_add
        functions.

	* psim.c (create_*_tree): Use new device_tree create functions.

	* corefile.h, corefile.c corefile-n.h (core_n.h): Update to use
        the new device.h / device_table.h interface.  Rename core_n.h to
        corefile-n.h to be consistent with other n files.

	* Makefile.in (run): add corefile-n.h to dependencies for
        corefile.

	* basics.h (device_instance), device.h, device.c, device_table.h,
        device_table.c: Add the concept of a device instance and operators
        on these instances - corresponds to ihandle in OpenBoot speak.
        Don't yet implement it.

Tue Nov 14 12:27:08 1995  Andrew Cagney  <cagney@highland.com.au>

	* emul_generic.h, emul_generic.c (emul_syscall_enter,
 	emul_syscall_exit): rename from emul_enter_call /
 	emul_exit_call. As only used by emul_do_system_call simplify
 	associated code.

	* os_emul.h, os_emul.c, emul_generic.h: Correct and fill an
 	os_emul interface.

	* os_emul.c, emul_bugapi.h, emul_bugapi.c, Makefile.in: Add
 	preliminary hooks for a kernel mode rom emulation.

	* cap.h (new), cap.c (new): Capability data base.  Some emulations
 	pass object identifiers (capabilities?) to/from the simulated code
 	(for instance the phandle in OpenBoot).  The cap object is able to
 	check/map between internal and external (target program)
 	representations of each identifier.

	* os_emul.c, emul_chirp.h, emul_chirp.c, Makefile.in: Add
 	preliminary hooks for a kernel mode IEEE-1275 emulation.

	* cpu.h, cpu.c (cpu_create, cpu_os_emulation, cpu): Add os_emul to
 	list of arguments passed in when creating a cpu.  Grant access to
 	the element.

	* std-config.h (OS_EMUL_INLINE), options.c (print_options),
	inline.h, inline.c: New to allow control over inline of
	corresponding code files.

	* ppc-instructions (instruction_call): Add illegal instruction to
 	call the instruction-call emulation handler.

	* interrupts.c (system_call_interrupt): Call renamed
        os_emul_system_call function().

	* emul_netbsd.c: Update to interface to generic emulation.  Since
        all its functions are called via a table don't worry about any
        inline.

	* emul_generic.h, emul_generic.c, spa-*(delete): Remove references
        and code for spa, no longer to be used.

	* psim.c (create_chirp_device_tree): Fill out what was previously
        the openboot create function so that it starts to create a full
        OpenBoot device tree.

Tue Nov 28 21:48:06 1995  Andrew Cagney  <cagney@highland.com.au>

	* debug.h, debug.c: pte trace is made redundant by htab trace,
        delete it.  Add vm to list of options.  Simplify tracing output so
        lines are not as long.

Tue Nov 14 12:27:08 1995  Andrew Cagney  <cagney@highland.com.au>

	* events.h, events.c (event_queue_init), psim.c (psim_init): (re)
 	initialize the event queue.






Tue Nov 28 13:38:26 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* sim-endian.h: Look at WORDS_BIGENDIAN to determine if the host
	is big endian or little endian.  For SWAP_n, use htonl/htons if
	host is little endian, not big endian and if WITH_NTOH is defined.

	* configure{,.in} (--enable-sim-model-issue): Instead of defining
	0/1, define it to be MODEL_ISSUE_{PROCESS,IGNORE}.  Add
	AC_C_BIGENDIAN to determine if the host is big endian or not.
	* config.in: Regenerate.

	* std-config.h (WITH_MODEL_ISSUE): Default to 0.
	(CURRENT_MODEL_ISSUE): Reference WITH_MODEL_ISSUE, and if that is
	0, use current_model_issue.
	(MODEL_ISSUE_{PROCESS,IGNORE}): Define as -1/1.

	* psim.c (current_model_issue): New global variable.

	* cpu.c (cpu_create): Use CURRENT_MODEL_ISSUE > 0 instead of
	WITH_MODEL_ISSUE.
	(cpu_{init,halt}): Ditto.
	* mon.c (mon_print_info): Ditto.
	* ppc-instructions (PPC_INSN_* macros, branch handling): Ditto.

	* mon.c (mon_print_info): Print instructions/second if verbose > 0,
	rather than > 1.

	* main.c (main): Set current_model_issue to MODEL_ISSUE_PROCESS if
	the -I switch is used.
	* sim_calls (sim_open): Ditto.

	* ppc-instructions (model support): Add support for determining
	when we don't have enough writeback slots.  Add tracing for the
	beginning of each cycle.

Mon Nov 27 17:46:33 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* mon.c: Check for whether to include sys/types.h and sys/time.h.

	* configure.in: Check for include files sys/types.h and
	sys/time.h.
	* configure: Regenerate.
	* config.in: Regenerate.

	* cpu.h (CONST_ATTRIBUTE): Define as __attribute__((__const__)) if
	not already defined.
	(cpu_system): Use CONST_ATTRIBUTE, so that when we're not inlining
	the world, the optimizer has a fair chance of CSE'ing function
	calls.
	(cpu_{monitor,nr,registers,model}): Ditto.

	* std-config.h (MODEL_INLINE): If not defined, define as 1 if
	DEFAULT_INLINE is non-zero, 0 otherwise, rather than just the
	value of DEFAULT_INLINE.

Fri Nov 24 11:24:34 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* lf.h (__attribute__): If not GCC and at least 2.7.0, define as
	nothing.
 	(lf_printf): Add printf __attribute__, so the compiler will
	automatically check the format string.

	* configure{,.in} (--enable-sim-icache): If argument is define,
	add -R to flags passed to igen.

	* igen.c (stdlib.h): Include if the system supplies one.
	(semantics_use_cache_struct): New global for -R flag to say
	semantics is to use the cache structure directly rather than
	putting the values into local variables.
	(first_undef, last_undef): New structures to remember names to
	#undef if -R.
	(lf_print_c_extraction): If -R and this is semantics, emit names
	as #defines pointing to the cache structure, rather than loading
	the values into local variables.
	(lf_print_c_semantic_function): If -R, #undef all of the names
	defined in lf_print_c_extraction.
	(main): Recognize -R.

	* idecode_fields.h (SPR_*): Redefine spr_* macros as SPR_* to
	avoid a name confict if -R passed to igen.

	* ppc-instructions (mfspr, mtspr): Rename spr field to SPR.
	(model_data): Add field to count the various # of CRs that the
	mtcrf instruction used.
	(model_mon_info): Return structures counting the # of CRs that the
	mtcrf instruction used.
	(branches, sync instructions): Do not call model functions if
	WITH_MODEL_ISSUE is 0.

	* mon.c (stdlib.h): Include if the system supplies one.
 	(mon_sort_instruction_names): New function to sort instruction
	names alphabetically.
	(mon_print_info): Call qsort with mon_sort_instruction_names to
	sort instruction names.  Don't abort if WITH_MODEL_ISSUE is 0.

	* debug.h (ITRACE): Make printf_filtered arguments type correct.
	* idecode_expression.h (CR0_COMPARE): Ditto.
	* psim.c (psim_read_register): Ditto.

	* igen.c (lf_print_my_prefix): Use __attribute__((__unused__)) to
	silence compiler warnings about unused automatically generated
	variables.
	(lf_print_c_extraction): Ditto.
	* idecode_expression.h (FPSCR_BEGIN): Ditto.

	* ppc-cache-rules: Define rules for making a bitmask for all
	registers.

	* ppc-instructions: Rewrite model specific functions to use the
	bitmask of the register number, instead of using the register
	pointer to get the register number, and then making the bitmask.

Wed Nov 22 15:24:27 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* ppc-instructions (model_branches): Add conditional argument to
	count the number of times each type of conditional branch is used.
	(conditional branches): Pass B0 or -1 to model_branches.
	(model_mon_info): Print out conditional branch counts.
	(model-data): Add support for printing out conditional branch
	types.

Tue Nov 21 16:31:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* igen.c (insn_table_load_insns): Add support for model-static for
	internal functions that should not be inlined.
	(lf_print_c_semantic): Remove model_cleanup.
	(gen_model_{c,h}): Ditto.

	* ppc-instructions: Redo model specific support once again.  Add
	floating point support to the model specific information.  Flesh
	out all of the floating mutiply add/subtract instructions.  Add
	better tracing support to the model specific information.

Sun Nov 19 23:00:52 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* ppc-instructions (model data, model_busy): Rather than using a
	bit mask for the busy units, just use a char array.  Also, only
	support 2 function units an insn can use, rather than a loop.

Fri Nov 17 14:08:08 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* table.c (table_entry_read): Move setting entry->line_nr to after
	the model specific fields so the line numbers for the annex are
	correct.

	* cpu.c (cpu_{create,init,halt}): Check for WITH_MODEL_ISSUE
	before calling the model functions.

	* debug.c (trace_descriptor): Add trace_model support.
	* debug.h (trace_options): Ditto.

	* igen.c (gen_icache_h): Create type idecode_cache as void if not
	caching instructions.
	(gen_model_{c,h}): Drop model_issue support.  Add support for
	model_cleanup.
	(lf_print_my_prefix): Initialize a const itable_index with the
	current index.
	(lf_print_c_semantic): Call model_cleanup at the end of the
	function to check for instructions that aren't supported yet by
	the scheduling code.

	* mon.h (count_type): New type for counters.
	* mon.c: Use count_type instead of unsigned.

	* ppc-instructions: Redo scheduling code once again.  Make it all
	inline friendly.  Instead of having general code emitted by igen,
	go the route of having each semantic routine call the appropriate
	module.

Thu Nov 16 09:52:26 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* table.c (table_entry_read): Allow the annex to have blank lines.

	* ppc-instructions: Change lines in model stuff that just have a
	tab to just newline.  Add 601 support.  Document most instructions
	in terms of model specific timing information.  Drop 'FUNCTION'
	from PPC_FUNCTION_UNIT_xxx enums.  Change PPC_UNIT_UNKNOWN ->
	PPC_UNIT_BAD.  Add TRACE(trace_tbd) for all data cache
	instruction.s.  Signal illegal instruciton if data cache block
	invalidate is issued from problem state.

	* igen.c (max_model_fields_len): New static to keep track of the
	max size for the model specific fields.
	(model_c_insn): Use max_model_fields_len to size fields.
	(insn_table_insert_insn): Set max_model_fields_len.
	(model_table_insert): Ditto.
	(gen_model_{c,h}): Model_issue is now called with a processor
	argument.

	* debug.c (trace_description): Add support for trace_tbd.

	* mon.c (mon_issue): Pass processor argument to model_issue.

	* Makefile.in: Delete all function unit support, since the newer
	table driven model support replaces it.
	* cpu.{c,h}: Ditto.
	* mon.c: Ditto.
	* inline.{c,h}: Ditto.
	* std-config.h: Ditto.
	* options.c: Ditto.
	* configure{,.in}: Ditto.
	* Makefile.in: Ditto.
	* psim.c: Ditto.
	* function_unit.{c,h}: Delete these now usused files.

	* std-config.h (WITH_MODEL_ISSUE): Add new macro on whether to
	trace instructions in a model specific manor.
	* options.c (print_options): Print it out.
	* configure{,.in}: Add --enable-sim-model-issue option.
	* Makefile.in: Add --enable-sim-model-issue flags.
	* igen.c (lf_print_c_semantic): Add call to mon_issue here.  Check
	for WITH_MODEL_ISSUE.
	* mon.c (mon_issue): Remove call to mon_issue_here.

	* ppc-instructions: Move branch tracing to the actual branch
	instructions, rather than testing it in model_issue.  Add code to
	code successful/unsuccessful branch predictions, and the number of
	conditional branches that fell through.

Wed Nov 15 17:32:13 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* cpu.h (cpu_model): Add declaration.

	* cpu.c (struct _cpu): Add model_ptr to hold model specific
	information.
	(cpu_model): Return the model internal pointer.
	(cpu_{create,init,halt}): Call the appropriate model function.

	* inline.c (mon.c): Move include of mon.c after model.c.

	* mon.c (_cpu_mon): Add fields to count unaligned memory
	references.
	(mon_issue): Call model_issue, not function_unit_issue.
	(mon_{read,write}): Count # of unaligned memory accesses.
	(mon_print_info): Switch to calling model_mon_info and
	model_mon_info_free instead of function_unit version.  Print out
	number of unaligned reads/writes.

	* {ppc-instructions,igen.c}: More global changes to add model
	specific features.

	* inline.{c,h}: Provide for inlining options.c.
	* options.{c,h}: Ditto.
	* std-config.h: Add OPTIONS_INLINE.

Tue Nov 14 04:47:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (devices.o, main.o): Update dependency.

	* igen.c (gen_model_h): Use correct variable in loop.
	(gen_model_c): Use strcmp, strcasecmp.
	(gen_model_c): Use EXTERN_MODEL for arrays.
	(gen_model_h): Use STATIC_MODEL for arrays.
	(lf_print_c_semantic_function_header): Delete unused function.

	* main.c (cpu.h): Include cpu.h to get model.h.

	* inline.h ({EXTERN,STATIC}_MODEL): Define.

Mon Nov 13 09:14:13 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* igen.c ({insn,model}_table_fields): Spell mnemonic correctly.
	(gen_itable_h,itable_c_insn): Ditto.
	(model support): Move model support around, add support for
	model-data, model-internal.  Use annex field for model-macros
	now.

	* configure.in (--enable-sim-inline): If --enable-sim-inline=no,
	also define INLINE as nothing.
	* configure: Regenerate.

	* std-config.h (INLINE): Rather than nuking INLINE, only define it
	as __inline__ if any of the INLINE flags are non-zero.

	* options.c (print_options): Print out WITH_XOR_ENDAIN.

Mon Nov 13 23:03:45 1995  Andrew Cagney   <cagneyhighland.com.au>

	* ppc-instructions (rfi): Add missing code.

	* cpu.c (cpu_get_time_base): Fix calculation of current value of
        time base register.

	* ppc-spr-table (TBL, TBU): Fix TBL/TBU entries - was confusing
        m[tf]tb with m[tf]spr.

	* ppc-instructions (mtspr, mfspr): Fix mttbl - wasn't storing
        lower word.

Mon Nov 13 21:35:37 1995  Andrew Cagney   <cagneyhighland.com.au>

	* std-config.h (INLINE, STATIC_INLINE): Was being set to static
        inline..  Only problem being that with ppc-opcode-simple this gave
        it the chance to inline all the idecode functions with potentially
        disasterous results on a 16mb PC.  For moment hobble INLINE.

	* configure.in, std-config.h (WITH_SMP): Make that 5 processors by
        default ...

	* configure.in: Tweek flags passed to gcc for --with-sim-warnings.
        Firstly make them errors and secondly remove the options gcc-245
        doesn't reconize.

Mon Nov 13 17:57:24 1995  Andrew Cagney  <cagney@highland.com.au>

	* misc.c (zalloc), cpu.c (cpu_init), devices
 	(console_io_read_buffer_callback, icu_io_read_buffer_callback,
 	vm_io_read_buffer_callback), main.c (zalloc), mon.c (memset),
 	sim_calls.c (zalloc) : replace bzero() with memset().

	* emul_netbsd.c (write_direntries), psim.c (psim_read_register,
 	psim_write_register): replace bcopy() with memcpy().

Sun Nov 12 20:55:41 1995  Andrew Cagney   <cagneyhighland.com.au>

	* configure.in: for --disable-sim-inline (--enable-sim-inline=no),
        force DEFAULT_INLINE to 0 rather then trusting the std
        configuration.

Sun Nov 12 20:55:41 1995  Andrew Cagney   <cagneyhighland.com.au>

	* igen.c (lf_print_idecode_table, idecode_table_leaf): Fix
        generation of switch entries in tables - treat the same as
        cracking/semantic functions.

	* igen.c (idecode_switch_end, idecode_switch_leaf): Fix generation
        of a boolean switch statement (field zero or non-zero).

	* ppc-opcode-test-1, ppc-opcode-test-2: New files.  These test the
        switch/table generation ability of igen.

	* igen.c (idecode_switch_leaf): Fix code output when a switch
        statement needs to look up a table.

	* igen.c (idecode_declare_if_switch): New function called from
        gen_idecode_c - need to declare any idecode switch functions
        before they are used in idecode tables.

	* igen.c (lf_print_c_cracker_function, idecode_crack_leaf,
        idecode_crack_insn): Add is_inline_function argument to code
        printing cracker functions which indicates if STATIC_IDECODE or
        STATIC_INLINE_IDECODE should be used for definition.  For
        idecode_crack_insn (which implies not duplicating/expanding) don't
        declare function as inline - we assume that the only time this is
        code is generated is when things are being tested.  For
        idecode_crack_leaf, make static (instead of INLINE) if the
        instructions parent is a table as function will always be called
        via a table.

	* igen.c (idecode_expand_if_switch): Declare as STATIC_IDECODE not
        STATIC_INLINE_IDECODE. Only the outermost idecode switch will be
        called directly, all others are called via a table.

	* igen.c (lf_print_semantic_function_header, semantics_h_leaf,
        semantics_h_insn, semantics_h_function,
        lf_print_c_semantic_function, semantics_c_function): Add
        is_inline_function argument to lf_print_semantic_function_header
        to indicate if an inline or static function declaration/definition
        should be output.  Depending on situtation call accordingly:
        functions (not instruction semantic routines) are always inline;
        Semantic routines are made inline when there is no icache (cache
        will contain the function address) and are duplicating (see above)
        and the parent of the instruction is a switch statement.

	* igen.c (opcode_field_new): Delete.  Code changed to use ZALLOC
        and moved to insn_table_find_opcode_field.

	* table.c (table_open): Fix typo (nr_model_fields vs nr_fields).

	* igen.c (model_c_insn): Suggestion - document the name of the
        instruction on each line of the instruction model table.

Fri Nov 10 00:44:38 1995  Andrew Cagney   <cagneyhighland.com.au>

	* emul_netbsd.c (do_ioctl): Cleanup compilation.

	* sim_callbacks.h (__attribute__): Only define if not defined (was
        already defined on NetBSD host).

Wed Nov  8 21:49:52 1995  Andrew Cagney   <cagneyhighland.com.au>

	* std-config.h (WITH_XOR_ENDIAN), configure.in, Makefile.in: New
        macro, indicates if the PowerPC's horrible XOR endian mode should
        be suported.  Add to configure and make.

	* vm_n.h (vm_data_map_read_N, vm_data_map_write_N), vm.c
        (vm_instruction_map_read): If XOR endian, xor the address
	with a value from an xor table (indexed by size of access).

	* vm.c (vm_synchronize_context), cpu.c (cpu_synchronize_context):
        set up xor table to xor if there is a conflict between the
        CURRENT_TARGET_ENDIAN and the endian indicated in the MSR.  Move
        check of suported change of endian mode from cpu.c to vm.c.

	* vm.c (vm_data_map_write_buffer, vm_data_map_read_buffer):
        Hopefully added correct hack to handle XOR endian mode.

	FIXME: If NONSTRICT alignment and XOR ENDIAN and MSR indicates
        little endian mode, the model accepts miss aligned transfers.

	FIXME: Need to create an `init' device that, during
        initializatioin for XOR mode, it mushes (XOR address) all the dma
        data before passing it on to the core for storage. Just like the
        real thing really.

Wed Nov  8 21:49:52 1995  Andrew Cagney   <cagneyhighland.com.au>

	* devices.c (halt_io_write_buffer_callback): Use value written to
        halt device to determine exit status.  Thus allowing
        success/failure of OEA tests.

Wed Nov  8 00:10:38 1995  Andrew Cagney   <cagneyhighland.com.au>

	* ppc-instructions (icbi): If icache present flush it.

Tue Nov  7 23:36:31 1995  Andrew Cagney   <cagneyhighland.com.au>

	* devices.c (htab_init_callback): Add code to create htab/pte.

	* devices.c (dma_file, file_init_callback, htab_init_callback):
        New function - Dma the named file into memory at the specified
        address.  Use.

	* device_tree.h, device_tree.c (scand_*): New functions.

Tue Nov  7 23:36:31 1995  Andrew Cagney   <cagneyhighland.com.au>

	* filter_filename.c, Makefile.in: Change so that only dependant on
        a very limited nr of files.  Stops an unnecessary dependency.

Tue Nov  7 15:44:33 1995  Andrew Cagney  <cagney@highland.com.au>

	* core.c (core_map_find_mapping): Use cpu_halt rather than error
 	to abort an access to an undefined address.

Sun Nov 12 07:58:09 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* igen.c (model_table_insert_{macro,function}): New functions.
	(insn_table_load_insns): Call them.
	(gen_model_h): Move section emiting model-macros to be first.
	(model_{c,h}_function): New functions cloned from semantic
	functions to print out the prototype and function for
	model-functions.
	(gen_model_{c,h}): Print out model-functions.

	* ppc-instructions (model_{start,halt,print_info}): Add dummy
	model-functions.

	* options.c (print_options): Print out WITH_{,DEFAULT_}MODEL, not
	WITH_PPC_{,DEFAULT_}_MODEL.
	(options_ppc): Delete now unused function.
	(cpu.h): Include cpu.h, not just basics.h.

	* std-config.h (WITH_{,DEFAULT_}MODEL): Define.

	* igen.c (model_macros, last_model_macro): New statics to keep
	track of macros to go in model.h.
	(insn_table_load_insns): Add model-macros to model_macros linked
	list.
	(model_table_fields): Add field for printable name.
	(gen_model_h): If there are model macros defined, print them out.
	Print out DEFAULT_MODEL as the first model if there any models
	specified, otherwise MODEL_NONE.  Print out external decl for
	current_model.  Print out decl for model_set.
	(gen_model_c): Add function model_set.  Switch to use printable
	name for the model, not the internal identifier used.

	* psim.c (current_model): New global variable.

	* ppc-instructions: Add macros for flag defines.  Switch first
	model so 604 is first.

	* main.c (main): Call model_set, not function_unit_model.
	* sim_calls.c (sim_open): Ditto.
	* sim_calls.c, Makefile.in: sim_calls.c now includes cpu.h.

Sat Nov 11 07:27:41 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* mon.h (mon_events): New enumeration for other events we want to
	handle.
	(mon_event): Add declaration for function.

	* mon.c (mon_event): New function.
	(mon_print_info): Print icache misses.

	* psim.c (run_until_stop): Monitor icache misses.

	* configure.in (--enable-sim-inline): Fix typos in handling comma
	separated inline options.
	(--enable-sim-icache): Echo icache size.
	* configure: Regenerate.

	* igen.c (semantics_h_print_function): Emit STATIC_SEMANTICS
	instead of INLINE_SEMANTICS so that the compiler won't keep all of
	the semantic functions as inline RTL, given that the address of
	the function is taken which forces outline calls anyway.
	(lf_print_c_semantic_function_header): Ditto.
	(gen_semantics_h): Define STATIC_SEMANTICS as nothing if not
	defined.
	(lf_print_c_cracker_function): Emit STATIC_IDECODE instead of
	STATIC_INLINE_IDECODE.
	(gen_idecode_c): Define STATIC_IDECODE if not defined.
	(gen_model_h): Use #ifdefs to define types to hold model units,
	cycles, and flags.
	(model_table_insert): Add a sentinel functional unit at the end to
	simplify loop processing.
	(model_c_insn): Use <function-unit>_SENTINAL instead of 0 for any
	instruction not specifing a function unit for the current model.
	(gen_model_{c,h}): Provide bounds for model_time_mapping.

	* inline.h (STATIC_SEMANTICS): Define to be static if
	SEMANTICS_INLINE is defined.
	(STATIC_IDECODE): Define to be static if IDECODE_INLINE is
	defined.

	* options.c (print_options): Fix typo.

Fri Nov 10 06:39:46 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in (--enable-sim-{opcode,config}): Use $srcdir when
	check for the existence of files.
	* configure: Regenerate.

	* table.c (table): New field nr_model_fields.
	(table_open): New parameter nr_model_fields.
	(table_entry_read): Parse model fields that begin with a '*' after
	each instruction.
	* igen.c, dgen.c: Change callers of table_open.

	* igen.c: Add support for dumping model specific information in
	model.h and model.c.
	(insn_field_name): Delete unused array.
	(global variables): Make global variables static, so we can tell
	when they are no longer used.
	(cache_semantic_actual): Delete unused variable.
	(insn_table_load_insns): If the insn is really a machine model,
	call model_table_insert instead of other processing.
	(model_table_insert): New function to handle defining the
	functional units of a particular machine model.
	(insn_table): Add last_function field so we can add functions at
	the end.
	(insn_table_insert_function): Use last_function field when
	appending new function.

	* ppc-instructions: Add a few model specific information for 603,
	603e, and 604 for testing purposes.

	* table.h (table_model_entry): New linked list to hold model
	specific information, one per line.
	(table_entry): Add model_first, model_last fields.

	* configure.in (--enable-sim-inline): If gcc is found and
	--enable-sim-inline is not specified, defaine DEFAULT_INLINE to 1,
	not 2.
	(--enable-sim-reserved-bits): New switch to check whether reserved
	bits are set in the instruction.
	(--enable-sim-opcode): Make complex the default.
	(all switches): Add appropriate checks and error messages.
	* configure: Regenerate.

	* Makefile.in (RESERVED_CFLAGS): New variable set by
	--enable-sim-reserved-bits.
	(CONFIG_CFLAGS): Include RESERVED_CFLAGS.
	(BUILT_SRC): igen now generates model.c and model.h.
	(LIB_OBJ): Include table.o.
	(tmp-igen): Add -m/-M options to write model.c/model.h.
	(model.o): New object.
	(CPU_H): Include model.h.

	* cpu.h: Include model.h.

	* std-config.h (WITH_RESERVED_BITS): Define.
	(MODEL_INLINE): Ditto.

	* options.c (print_options): Print out WITH_RESERVED_BITS.

Thu Nov  9 12:22:15 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in: If --silent, don't output information messages.
	* configure: Regenerate.

	* configure.in (--enable-sim-alignment): Fix typo in specifing non
	strict alignment.
	(--enable-sim-switch): Make default on.
	(--enable-sim-duplicate): Make default on.
	(--enable-sim-smp): Make default 0.
	(--enable-sim-mon): Don't set sim_float if not set.
	(--enable-sim-inline): If gcc is found and --enable-sim-inline is
	not specified, define DEFAULT_INLINE to be 2.
	(all --enable-sim-* rules): Echo rules set to non empty to file
	descriptor 6.
	* configure: Regenerate.

	* options.c (options_env): Fix typo if WITH_ENV is 0.
	(print_options): Print GCC compiler version if available and
	date/time options was compiled.  If OPCODE_RULES, IGEN_FLAGS,
	and/or DGEN_FLAGS are defined, print them.

	* Makefile.in (all link actions): Pass SIM_CFLAGS as well as
	CFLAGS.
	(options.o): Compile options.o with OPCODE_RULES, IGEN_FLAGS, and
	DGEN_FLAGS defined, so they can be printed out.

	* igen.c (lf_print_c_validate): Check for WITH_ASSERT, so that
	this test can be compiled away if the user really wants a fast
	simulator by not doing assertion failures.

Wed Nov  8 13:19:47 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* options.c: New file to print out all of the WITH_ options.
	* options.h: New include file to declare print_options.
	* debug.h (trace_options): Add trace_opts to call print_options.
	* debug.c (trace_description): Add trace_opts support.
	* main.c (main): If user requested options, print them.
	* sim_calls.c (sim_open): Ditto.

	* igen.c (opcode_field_new): Add void to make it a proper prototype.

	* emul_generic.c (emul_enter_call): Make printf_filtered arguments
	type correct.
	* emul_netbsd.c (do_kill): Ditto.
	* registers.c (registers_dump): Ditto.
	* vm.c (om_translate_effective_to_real): Ditto.
	* vm_n.h (vm_data_map_read_N): Ditto.
	(vm_data_map_write_N): Ditto.
	* devices.h (DTRACE_INIT): Ditto.
	(DTRACE_{ATTACH,DETACH}_ADDRESS): Ditto.
	(DTRACE_IO_{READ,WRITE}_BUFFER): Ditto.
	(DTRACE_DMA_{READ,WRITE}_BUFFER): Ditto.
	* devices.c (update_for_binary_section): Ditto.
	(write_stack_arguments): Ditto.
	(stack_ioctl_callback): Ditto.
	* device_tree.c (device_tree_add_passthrough): Ditto.
	(device_tree_{add,find}_device): Ditto.
	(device_tree_{add,find}_integer): Ditto.
	(device_tree_find_{string,boolean}): Ditto.
	(device_tree_init{,_device}): Ditto.
	(device_tree_dump): Ditto.
	* sim_calls.c (sim_{read,write}): Ditto.
	(sim_{fetch,store}_register): Ditto.
	(sim_stop_reason): Ditto.

	* sim_callbacks.h (printf_filtered): Declare with attribute
	printf, so we can enable format checks.

	* devices.c (console_io_{read,write}_buffer_callback): Cast swtich
	argument to int, since ANSI doesn't allow long switch values.
	* emul_netbsd.c (do___sysctl): Ditto.

	* emul_netbsd.c (do___sysctl): Fix up printf call.

	* corefile.c (core_translate): Don't do arithmetic with void *
	pointers.  Cast to char * first.

	* function_unit.c (FUNC_{LOAD,STORE}): Rename from {LOAD,STORE}
	and change all uses.

	* Makefile.in ({FUNC,MODEL,WARNING}_CFLAGS): New flags set by
	configure --enable switches.
	(CONFIG_CFLAGS): Include FUNC_CFLAGS and MODE_CFLAGS.
	(.c.o): Include WARNING_CFLAGS.
	(CPU_H): Include function_unit.h.
	(LIB_OBJ): Include function_unit.o.
	(BUILT_SRC_WO_CONFIG): Split from BUILT_SRC and do not include
	config.h or ppc-config.h.
	(BUILT_SRC): Include BUILT_SRC_WO_CONFIG, config.h and
	ppc-config.h.
	(filter_filename.o): Include config.h/ppc-config.h dependencies.
	(idecode.o, semantics.o, psim.o): Specify CC line without
	WARNING_CFLAGS so that we don't get all of the unused variable
	warnings that are generated.
	(function_unit.o): Add rule to build.
	(main.o, sim_calls.o): Add function_unit.h, itable.h dependencies.
	(mon.o): Include mon.c dependency.
	(TAGS): Depend on BUILT_SRC.
	(clean): Don't delete config.h or ppc-config.h

	* basics.h (sim_callbacks.h): Move include after the include of
	config.h and ppc-config.h.

	* bits.{h,c} (ROTL32,ROTL64): Move these functions to bits.c.  Add
	support for BITS_INLINE to inline these.  Add declarations to
	bits.h.

	* configure.in (--enable-sim-warnings): Add new option to specify
	compiler warnings for all modules except idecode.o and semantics.o
	which have lots of unused variables because they are machine
	generated.
	(--enable-sim-function-unit): New switch to configure whether
	function unit support is compiled in or not.
	(--enable-sim-{,default-}mode): New switches to control which cpu
	model is used.
	* configure: Regenerate.

	* corefile.c (core_attach_address_callback): Delete unused
	variable device_address.

	* cpu.c (struct _cpu): Add function unit pointer field func_unit.
	(cpu_create): If WITH_FUNCTION_UNIT, call function_unit_create.
	(cpu_init): If WITH_FUNCTION_UNIT, call function_unit_init.
	(cpu_halt): If WITH_FUNCTION_UNIT, call function_unit_halt.
	(cpu_function_unit): New function to return func_unit field.

	* cpu.h (function_unit.h): Include new include file.
	(cpu_function_unit): Declare.

	* debug.c (stdlib.h): Test HAVE_STDLIB_H, not HAVE_STDLIB.
	(config.h): Include config.h.

	* devices.c (icu_io_write_buffer_callback): Delete unused variable
	system.

	* emul_generic.c (emul_exit_call): Print out status value.

	* emul_netbsd.c (do_read): Delete unused variable nr_moved.

	* filter_filename.h (includes): Include config.h, ppc-config.h,
	not basics.h.

	* inline.c: Include bits.c if BITS_INLINE.  Include
	function_unit.c if FUNCTION_UNIT_INLINE.

	* inline.h (INLINE_BITS): Define if BITS_INLINE.
	(INLINE_FUNCTION_UNIT): Define if FUNCTION_UNIT_INLINE.

	* interrupts.c (instruction_storage_interrupt): Delete unused
	variable nia.

	* lf.h (config.h): Include config.h.

	* main.c (includes): Include function_unit.c.  If HAVE_UNISTD_H,
	include unistd.h.
	(usage): Update for -m model, -i, and -I options.
	(main): Delete unused variables stack_pointer and i.  Add support
	for -i, -m model arguments.  Call psim_print_info with verbose ==
	1 if -i, and verbose == 2 if -I.

	* mon.c (stdio.h): Include stdio.h to pick up sprintf prototype.
	(mon_issue): Call function_unit_issue if function units are
	supported.
	(mon_print_info): Take psim * argument.  Print out information
	from function_unit if available.  Move read/write stats to always
	print, instead of printing if verbose > 1.  Fix up plural
	vs. singular usage.

	* mon.h (mon_print_info): Update prototype.

	* psim.c (current_ppc_model): Add global variable.
	(psim_print_info): Pass system argument to mon_print_info.

	* sim_calls.c (function_unit.h): Include.
	(sim_open): Add support for -i and -m model options.  If -i call
	psim_print_info with verbose == 1, if -I, with verbose == 2.
	(sim_resume): Delete unused variable program_counter.

	* std-config.h (WITH_FUNCTION_UNIT): Define.
	(ppc_model): Add enumeration giving all PowerPC models currently
	known about.
	({WITH,CURRENT}_PPC_MODEL): Define.
	(FUNCTION_UNIT_INLINE): Define.

	* table.c (config.h): Include config.h.

	* vm.c (om_virtual_to_real): Print pte_word_{0,1} so the compiler
	doesn't complain that they're unused.

	* vm_n.h (vm_data_map_read_N): Delete unused variable rval.

Mon Nov  6 23:15:54 1995  Andrew Cagney  <cagney@highland.com.au>

	* sim-endian.c (ppc-endian.c), sim-endian.h (ppc-endian.h):
        renameed.  These files are target independant.
	* Makefile.in, basics.h: update for new name.

	* sim-endian.h (SWAP_N), sim-endian.c (_SWAP_1): Rename existing
        SWAP_<N> to _SWAP_<N> so that sim-endian.h can contain SWAP_N
        macro's as required.

	* sim-endian.c, sim-endian-n.h (new file): Move endian code into a
        debugable header file.

	* ppc-instructions (Byte-Reverse): Enable byte reverse
        instructions using SWAP_N macros.

Mon Nov  6 10:39:28 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (config.status): Remove references to config.make
	and config.hdr.

	* config.{make,hdr}: Delete, no longer used.
	* build-psim: Ditto.

Mon Nov  6 20:49:56 1995  Andrew Cagney  <cagney@highland.com.au>

	* sim_calls.c (sim_open): Fix parsing of `target sim' options.

	* device_tree.c (device_tree_add_string): Wasn't saving the value
 	of the string being entered into the tree.

	* psim.c (create_filed_device_tree): Not terminating string device
 	names with a null.

	* psim.c (psim_create): Use `env' instead of
 	`environment-architecture' to be consistent with configure.
  	Reconize user/uea, virtual/vea and operating/oea.

Sat Nov  4 12:29:45 1995  Fred Fish  <fnf@cygnus.com>

	* core.c:  Rename to corefile.c
	* core.h:  Rename to corefile.h
	* inline.c: Include corefile.h, renamed from core.h.
	* cpu.h: Include corefile.h, renamed from core.h
	* vm.c: Include corefile.h, renamed from core.h
	* corefile.c: Include corefile.h rather than core.h
	* README.psim (KNOWN PROBLEMS): Change core.* references to corefile.*
	references.
	* Makefile.in (CPU_H): Change core.h to corefile.h
	(vm.o):  Change dependency to corefile.h
	(LIB_SRC): Change core.c to corefile.c.
	(LIB_OBJ): Change core.o to corefile.o.
	(corefile.o):  Change dependencies to corefile.c, corefile.h.

Fri Nov  3 11:37:24 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* ppc-instructions (data cache instructions): Make all data cache
	instructions nops instead of invalid instructions.

	* Makefile.in (CONFIG_CFLAGS): Add ALIGNMENT_CFLAGS and
	TIMEBASE_CFLAGS which weren't included.

Thu Nov  2 08:54:04 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in: Uncomment built file dependencies.

	* configure.in: Rewrite --enable-sim switch handling to use the
	autoconf builtins so it works correctly if the configure or
	Makefile.in files are modified and make decides to rebuild
	Makefile.  Also document all of the --enable-sim switches
	supported.  Check whether getrusage and sys/resource.h are
	supported.
	* config.in: Regenerate.
	* configure: Regenerate.
	* Makefile.in: Add support for all of the variables set with
	--enable-sim switches.

	* Makefile.in (clean): make clean now removes all built sources as
	well.

	* cpu.c: Use HAVE_STRING_H, HAVE_STRINGS_H, HAVE_UNISTD_H,
	HAVE_TIME_H, HAVE_SYS_TIMES_H, HAVE_SYS_RESOURCE_H defined in
	the generated config.h.
	* debug.c: Ditto.
	* device_tree.c: Ditto.
	* devices.c: Ditto.
	* dgen.c: Ditto.
	* emul_netbsd.c: Ditto.
	* igen.c: Ditto.
	* lf.c: Ditto.
	* misc.c: Ditto.
	* psim.c: Ditto.
	* registers.c: Ditto.
	* sim_calls.c: Ditt.
	* table.c: Ditto.


	* main.c (main): Call psim_print_info with verbose == 2.

	* mon.c (mon_print_info): Align the cpu number and number of
	instructions fields.  Do not print an instruction category if the
	CPU did not execute any of those instructions.  Print out number
	of reads and writes.  If getrusage is supported, print out number
	of simulated instructins per second.

	* configure.in: Add support for --enable-sim-opcode=stupid.
	* configure: Regenerate.

Wed Nov  1 23:46:59 1995  Andrew Cagney   <cagney@highland.com.au>

	* std-config (INLINE_DEVICE_TREE): Don't inline either of
        device_tree.c or devices.c.  There is no significant gain.

	* configure.in, Makefile.in: add --enable-sim-icache=[0-9]* and
 	IGEN_ICACHE macro.

Wed Nov  1 23:46:59 1995  Andrew Cagney   <cagney@highland.com.au>

	* igen.c (main), misc.h (target_a2i, i2target), misc.c: Add
        functions to convert between target and igen internal bit numbers.
        Make IO go through these functions. Add -b (bit size) and -h (high
        bit nr) options to igen.  Typical usage would be: ./igen -b 16 -h
        15 for a 16 bit instruction format with the msb given a number 15.

Wed Nov  1 22:17:32 1995  Andrew Cagney   <cagney@highland.com.au>

	* dgen.c (main): Was outputting optarg even when it was NULL.

Tue Oct 31 23:48:33 1995  Andrew Cagney   <cagney@highland.com.au>

	* vm_n.h (vm_data_map_load_N, vm_data_map_store_n), debug.h,
        debug.c: Add tracing of load/store unit (virtual) with -t
        load-store.

Tue Oct 31 21:44:01 1995  Andrew Cagney   <cagney@highland.com.au>

        * std-config.h (WITH_ENVIRONMENT): Add USER_ENVIRONMENT which does
        not include things such as the time base and events.

	* interrupt.c, sim_calls.c, cpu.h, vm.c, configure.in: Add UEA to
 	all environment switches for above.

	* psim.c (psim_create): ditto - new device tree node name is
        /options/environment-architecture with values user, virtual and
        operating.

Tue Oct 31 21:31:32 1995  Andrew Cagney   <cagney@highland.com.au>

	* ppc-opcode-stupid: Third example of use of opcode table - this
        one expands all mtspr/mfspr and branch instructions.  Appears to
        give about a 10% gain in performance if everything enabled.  Also
        takes about 150mb of swap to build.

Wed Nov  1 10:49:48 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* emul_netbsd.c (do_exit): Print arguments and close parenthesis
	if tracing, since exit doesn't go through emul_exit_call.
	(do_read): Print arguments if tracing.
	(do_write): Ditto.
	(do_open): Ditto.
	(do_break): Ditto.
	(do_kill): Ditto.
	(do_dup): Ditto.
	(do_sigprocmask): Replace trace with printing arguments if
	tracing.
	(do_ioctl): Print arguments if tracing.
	(do_umask): Ditto.
	(do_dup2): Ditto.
	(do_fcntl): Ditto.
	(do_gettimeofday): Ditto.
	(do_getrusage): Ditto.
	(do_fstatfs): Ditto.

	* filter_filename.c: New file to provide filter_filename to strip
	the directory prefix from a file.
	* filter_filename.h: New include file to declare filter_filename.

	* debug.h: Include filter_filename.h.
	(TRACE,DTRACE,ERROR): Use filter_filename on __FILE__.

	* misc.h: Include filter_filename.h.
 	(ASSERT): Use filter_filename on __FILE__.

	* igen.c (lf_print_my_prefix): Use filter_filename on the filename
	argument.

	* Makefile.in: Add filter_filename support.

	* ppc-instructions (dcbi, icbi): Make these NOPs rather than
	invalid instructions.

	* configure.in: Add support for more --enable-sim-* switches.
	Use config.make and config.hdr to write to Makefile and config.h
	respectively.  Don't rewrite Makefile, just append to it.
	* configure: Regenerate.
	* config.{make,hdr}: New shell scripts.

	* Makefile.in: Remove all variables set by configure.in.
	(psim.o): Depend on $(BUILT_SRC) also.

	* emul_netbsd.c (do_gettimeofday,do_getrusage): When comparing an
	integer, use 0, not NULL.

Tue Oct 31 15:20:04 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure.in: Add support for --enable-sim-inline,
	--enable-sim-bswap, --enable-sim-cflags, --enable-sim-complex,
	--enable-sim-switch, --enable-sim-duplicate, --enable-sim-filter,
	and --enable-sim-endian switch to control various Makefile
	variables.
	* configure: Regenerate from configure.in.
	* Makefile.in: Add various Make variables that the various
	switches alter.

	* std-config.h (DEFAULT_INLINE): Don't set this to 2 if using GCC
	and optimizing by default.

Fri Oct 27 19:26:27 1995  Andrew Cagney  <cagney@highland.com.au>

	* bits.h (ROTL32, ROTL64): Were functions, made them macros, now
 	make them functions again.  Appears 2.6.3 is confused by just a
 	macro.

Thu Oct 26 18:31:58 1995  Andrew Cagney  <cagney@highland.com.au>

	* ppc-endian.c (SWAP_8): Fix 8 byte swap!

	* psim.c (psim_create): Not correctly checking that runtime
 	configuration of things like ENDIAN, ENVIRONMENT and ALIGNMENT
 	matched the compiled in ones.

	* debug.h (ITRACE), igen.c: Tidy up more tracing flags -
 	trace_semantics is now different to trace_idecode, the former
 	checks the cache.

Tue Oct 24 21:54:13 1995  Andrew Cagney  <cagney@highland.com.au>

	* ppc-instructions (mtsrin): Missing instruction
	* ppc-instructions (mfsrin): Missing instruction
	* ppc-instructions (eieio): Missing instruction

Tue Oct 24 20:55:29 1995  Andrew Cagney  <cagney@highland.com.au>

	* build-psim: New shell script - see internals for usage,
 	simplifies the process of building custom simulators.

Mon Oct 23 23:48:59 1995  Andrew Cagney  <cagney@highland.com.au>

	* std-config.h (SEMANTICS_INLINE): Tidy up notes on each of the
        INLINE macros.  Make SEMANTICS_INLINE == 1 if DEFAULT_INLINE == 2.
        Don't use DEFAULT_INLINE to define REGISTERS_INLINE DEVICES_INLINE
        DEVICE_TREE_INLINE or INTERRUPTS_INLINE as none of these are on
        the instruction or data critical paths.

	* FIXME: devices.c/emul_netbsd.c would benefit (slightly) from
 	the inclusion of device_tree.c/emul_generic.c.

Mon Oct 23 00:31:50 1995  Andrew Cagney  <cagney@highland.com.au>

	* os_emul.[hc], emul_generic.[hc], emul_netbsd.[hc]: replace
        system.[hc].  Start of suport for multiple emulations and
        emulation state (os_emul object).

	* emul_generic.[hc]: Start of code to implement proper system call
	tracing (from spy).

Sun Oct 22 21:33:51 1995  Andrew Cagney  <cagney@highland.com.au>

	* cpu.h, cpu.c (cpu_init): New function, zero the registers before
        the processor is started. Fixes problem of registers being
        undefined when restarting from within gdb.

	* cpu.h, cpu.c (cpu_flush_icache): New function, flushes the
        instruction cache (if present).  Fixes problem of cpu caching gdb
        breakpoint instructions.

	FIXME: PSIM sometimes aborts calling error(), it should instead
 	call sim_error() say which takes care of housekeeping such as
 	saving the CIA before calling error.

	* NOTE: cpu_flush_cache() instead of cpu_synchronize_context() is
 	used when restarting a simulation because the latter has the
 	unwanted side effect (well I as a kernel hacker think it is) of
 	performing an isync when the instruction stream doesn't contain
 	one.

Sun Oct 22 19:27:48 1995  Andrew Cagney  <cagney@highland.com.au>

	* mon.h (new), mon.c (new), std-config.h (WITH_MON): Performance
        monitoring module. Counts both instructions issued and
        load/stores.

	* NOTE: mon does not contain to count instruction loads as this
 	information is already available from the mon_issue() hook.

	* igen.c (lf_print_c_semantic), vm_n.h: Add counting code.

	* psim.h, psim.c (psim_create), cpu.h, cpu.c (cpu_create): Attach
        a common monitor to each of the cpus. Delete
        cpu_increment_number_of_insns() and cpu_get_number_of_insns()
        replaced by copied code in mon.[hc].

Sun Oct 22 18:42:45 1995  Andrew Cagney  <cagney@highland.com.au>

	* sim_calls.c, main.c, psim.c (psim_create): always create
        `WITH_SMP' cpus.  The actual number of CPU's active in a
        simulation run is taken from the device node: /init/smp (an
        integer). WITH_SMP changed to 2 (remember to put it back to 0).

Fri Oct 20 17:26:54 1995  Andrew Cagney  <cagney@highland.com.au>

	* system.c: More system call emulation.  If code appears NetBSD
 	specific, make conditional to being compiled on a NetBSD system
 	(sigh).

Wed Oct 18 23:02:20 1995  Andrew Cagney  <cagney@highland.com.au>

	* Makefile.in, gen.c(delete), igen.c(new), dgen.c(new),
 	lf.[ch](new), table.[ch](new): Split into two generators - igen
 	that outputs the instruction tables and dgen that outputs the spr
 	tables.  Add -f (filter out) flag to igen to filter out certain
 	instructions (ex 64 bit ones) from the created tables.  Include
 	$(LIBIBERTY_LIB) in link options in case host lacks some libc
 	functions.

	* NOTE: igen, since it was originally written for the
 	PowerPC/RS6000, things the MSB is 0 and the LSB is 63{31}.

	* Makefile.in, std-config.h, ppc-cache-rules(new),
 	ppc-opcode-complex(new), ppc-opcode-simple(new): (for igen) Create
 	cache-rule and opcode-rule tables from macros found std-config.h.
 	Delete corresponding macro's from std-config.h.

	* igen.c (gen_itable_c, gen_itable_h), Makefile.in: code to output
 	an table of all the instructions.  Code to output a type
 	enumerating all the instructin names.

	* igen.c(lf_print_c_semantic): Move call to increment instruction
 	counter so that it occures _after_ the instruction has been fully
 	validated, was double counting illegal/invalid instructions.  Add
 	conditional so only compiled in when WITH_PROFILE enabled (enabled
 	by default).

	* igen.c, cpu.h, cpu.c(cpu_increment_number_of_insns): Include
 	itable.h, count individual instruction types not just total,
 	adjust reporting functions to output this.

	* ppc-instructions (64 bit Load Doubleword with Update Indexed):
 	Had 32./ instead of 31./

	* ppc-instructions (64 bit Store Double Word Conditional Indexed):
 	bitrot - updated to use newer CR register operators.

	* ppc-instructions (64bit Floating Convert from Integer
 	Doubleword): Correct call to Round_Float().

Mon Oct 16 00:31:20 1995  Andrew Cagney  <cagney@highland.com.au>

	* basics.h: #include "sim_callbacks.h" earlier so that its
 	prototypes are declared in all other header files.

	* bits.h, bits.c, idecode_expression.h (ROTL32, ROTL64): Update
 	doc in bits.h, remove dead code in bits.c, move ROTL32/ROTL64 into
 	bits.h.

	* cpu.c(cpu_add_commas), device_tree.h, device_tree.c(scand_*):
 	Add size of buffer argument to functions writing a string into a
 	buffer.  Check for buffer overflow.

Sun Oct 15 22:16:11 1995  Andrew Cagney  <cagney@highland.com.au>

	* devices.h, devices.c, debug.h, debug.c: add macro's for tracing
        of each device.  Make parameter names consistent so macros work.
        Use macro's in device functions.

	* device_tree.c, devices.h, devices.c: include path to device in a
        devices node when creating it.

	* device_tree.c, debug.h, debug.c: Add tracing of `device-tree'.

	* core.c: add tracing of core-device, adjust parameter names in
 	core functions to be consistent with those in devices*.

Sun Oct 15 20:33:20 1995  Andrew Cagney  <cagney@highland.com.au>

        * debug.h, debug.c (trace_option): New function. Parses the trace
        option, updating the trace array.

	* debug.h, debug.c (trace_usage): New function. Outputs the list
        of all possible trace options.

	* sim_calls.c (sim_open), main.c (main): Use new trace_option() to
 	parse trace options specified with the simpler -t flag.  Adjust
 	usage.

	* FIXME: basic parsing of command line options is still duplicated
 	by main.c and sim_calls.c

Thu Oct 26 10:42:28 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (clean): Delete *.i and *.out files.

	* ppc-endian.c (SWAP_n): Add SET argument to allow use of SWAP
	macros for either assignment or return.  Fix SWAP_8 to use a
	union, and two SWAP_4's.  Delete SWAP_N, since nobody uses it now.
	(ENDIAN_N): Add SET argument to SWAP_n calls.  Delete macro defs
	that hardwired swapping on/off, let optimizer delete dead code.

	* main.c (main): Add printf that we caught a signal and print out
	the failing address.

Thu Oct 19 21:43:39 1995  Fred Fish  <fnf@fishfood.amigalib.com>

	* Makefile.in:  Remove tabs from otherwise empty line.
	Confuses many non-GNU versions of "make".

Wed Oct 18 08:51:25 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (clean): Delete files produced by gen.

Mon Oct 16 17:34:24 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* gen.c (lf_print_c_semantic_function): Move counting # of
	instructions here so it works with caching.
	(gen_idecode_c): Move from here.

Wed Oct 11 17:13:15 1995  Andrew Cagney  <cagney@highland.com.au>

	* gen.c, ppc-instructions, psim.c: Fix code for generating
	cracking instruction cache.  Delete the code that cached just the
	result from doing an instruction lookup - this ran slower than no
	cache at all.

Fri Oct 13 09:58:43 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (gen.o): Include $(INLINE_CFLAGS).

	* debug.h (ppc_trace): Rename from trace, to avoid a conflict with
	TCL when gdb is linked with the simulator.
	* debug.c (ppc_trace): Ditto.
	* sim_calls.c (sim_open): Change trace -> ppc_trace.
	* main.c (main): Ditto.

	* cpu.c (cpu_add_commas): Remove extra static.

Thu Oct 12 11:35:53 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (psim.o): Now that inlines are turned on, make
	psim.o depend on all sources.

	* cpu.c (cpu_add_commas): New function to format a long with
	commas.
	(cpu_print_info): Use it to print number_of_insns.

	* ppc-endian.c (SWAP_n): New macros to speed up byte swapping for
	2, 4, and 8 bytes.
	(ENDIAN_N): If both target and host byte orders are known, don't
	bother testing CURRENT_{TARGET,HOST}_BYTE_ORDER.

	* ppc-endian.h (target specific H2T_n/T2H_n macros): Remove #if 0
	to allow target specific H2T_n/T2H_n macros to be used.
	(htonl, ntohl): If compiled on a 486 by GCC and WITH_BSWAP is
	non-zero, redefine the htonl/ntohl macros to use the BSWAP instead
	of the 3 instruction sequence that runs on 386s.

	* std-config.h (WITH_{HOST,TARGET}_BYTE_ORDER): Don't override if
	specified on the compile line.
	(WITH_BSWAP): If not defined, define as 0.

	* Makefile.in (INLINE_CFLAGS): Add -DDEFAULT_INLINE=2 to add
	default inline support.  Pass INLINE_CFLAGS when compiling.

	* devices.{h,c} (unimp_device_ioctl): Use STATIC_DEVICES, not
	INLINE_DEVICES since GCC doesn't like inline functions that
	accept variable arguments.
	(stack_ioctl_callback): Make function just static because GCC
	doesn't like inline functions that accept variable arguments.

	* devices.h (STATIC_DEVICES): Define as empty if not defined.

	* inline.c: Correct pathnames of included C files to match current
	implementation.

	* inline.h (STATIC_DEVICES): If DEVICES_INLINE is defined to be
	non-zero, define STATIC_DEVICES to be static.

	* std-config.h (INLINE): If GNU C and optimizing, define this as
	__inline__.
	(DEFAULT_INLINE): If not defined, define as 0.
	(ENDIAN_INLINE): If not defined, define as DEFAULT_INLINE.
	({CORE,VM,CPU,EVENTS,REGISTERS,INTERRUPTS}_INLINE): Ditto.
	({SPREG,IDECODE}_INLINE): Ditto.

Wed Oct 11 17:13:15 1995  Andrew Cagney  <cagney@highland.com.au>

        * ppc-instructions: Initial cut of floating point suport added.
  	Of note include - use of host IEEE floating point instructions,
 	use of PowerPC manual pseudo code to handle the FPSCR.  It is not
 	currently a pretty sight.

	* memory_map.h, memory_map.c, memory_map_n.h, core.h, core.c:
 	merge into core.h, core.c, core_n.h. The type memory_map replaced
 	with core_map.  This removes a level of pointer indirection when
 	translating an address.

	* memory_map.h, memory_map.c, memory_map_n.h: delete.

	* Makefile.in et.al (sorry): tweek to use new core, core_map and
 	core.h.

Wed Oct 11 12:10:26 1995  Andrew Cagney  <cagney@highland.com.au>

	* sim_calls.c, main.c: Add -g (trace_gdb) option, add tracing to
 	most of the other functions in sim_calls.c.

	* basics.h (CONCAT3), memory_map.c, memory_map_n.h, Makefile.in:
 	Add macros to better cover up `generic' code.  Makes it possible
 	to step through the generic code!

	* vm.c, vm_n.h, Makefile.in: ditto

Tue Oct 10 15:42:59 1995  Andrew Cagney  <cagney@highland.com.au>

	* devices.h, devices.c, memory_map.h, memory_map.c: Changed
 	callback interface so that there is a read/write buffer but no
 	read/write_word.  VEA default memory read/write handler sometimes
 	couldn't resolve an access and of those some were for a memory
 	fault and some were because gdb was making a bogus request.

	* devices.h, devices.c, memory_map.h, memory_map.c, vm.h, vm.c:
 	eliminate transfer_mode (raw or cooked) parameter from read/write
 	buffer.

Fri Oct  6 20:23:56 1995  Andrew Cagney  <cagney@highland.com.au>

	* ppc-instructions (fmul, fmuls): correct instruction format - had
 	FRB instead of FRC.

Wed Oct  4 17:31:12 1995  Andrew Cagney  <cagney@highland.com.au>

	* psim.c, device_tree.h, device_tree.c, devices.c (printd_*,
 	scand_*): new functions to parse/print fields in device names
 	while hiding any machine dependency.

	* devices.c, psim.c: Change the stack init code so that it is
 	handled by a device.  Arguments passed across using a device ioctl
 	(hack).

	* devices.h, devices.c: device ioctl callback changed to allow a
 	variable number of arguments.  This gives greater flexability and
 	greater chance of bugs.

Tue Oct  3 22:01:56 1995  Andrew Cagney  <cagney@highland.com.au>

	* main.c (printf_filtered, error): Missing va_end() to close off
        variable argument use.

	* Makefile.in (tmp-gencode): comment out hack to get around some
        versions of make not handling files being created as side-effects.

	* gen.c (lf_open): Add -n (real_file_name) option.  Specifies an
        alternative file name to use in output files for things like #line
        macros.

        Makefile.in (tmp-gencode): Use gen -n so that debug info is
        correct.

	* Makefile.in (TARGETLIB): Use this instead of libsim.a in the
	Makefile.

Sat Oct  7 22:40:59 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* sim_calls.c (sim_set_callbacks): Define new function.

Fri Oct  6 17:23:10 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* psim.c (psim_print_info): Print exit status or signal number.

Mon Oct  2 11:46:37 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* cpu.c (struct _cpu): Add number_of_insns field to trace how many
	instructions are executed.
	(cpu_increment_number_of_insns): New function to increment the
	number of instructions issued.
	(cpu_get_number_of_insns): New function to return the number of
	instructions issued.
	(cpu_print_info): New function to print cpu related information.
	At present, print the number of instructions executed.

	* gen_idecode_c: Emit call to cpu_increment_number_of_insns within
	idecode_issue.

	* psim.c (psim_print_info): New function to iterate over each of
	the CPU's calling cpu_print_info.

	* psim.h,cpu.h: Add new declarations.

	* sim_calls.c (sim_open): Add argument processing to add the same
	switches main.c accepts for the standalone processor.
	(sim_close): Call psim_print_info if -I.

	* main.c (main): Add comment saying to update sim_calls.c when
	adding switches.  Add -I to call psim_print_info when done.
	(usage): Update usage message.

Sun Oct  1 13:52:59 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* main.c (printf_filtered): Correct to match new prototype.

Sat Sep 30 20:47:05 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* sim_callbacks.h (printf_filtered): Correct prototype.

Thu Sep 21 16:26:49 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* device_tree.c (OEA_MEMORY_SIZE): Define if not defined to
	0x100000.
	(clayton_memory_size): Define as OEA_MEMORY_SIZE.

	* std-config.h (WITH_TRACE): Default to 1 now.

	* psim.c (write_stack_arguments): Don't write any stack arguments
	if OEA.

	* main.c (main): Switch to using getopt.  Make -p also set
	trace_semantics.  Make -a turn on all trace flags.  Make -C turn
	on console tracing.

	* device_tree.c (create_option_device_node): Assume a program is
	OEA if the start address is < 4096, not just == 0.

Wed Sep 20 13:36:06 1995  Ian Lance Taylor  <ian@cygnus.com>

	* Makefile.in (maintainer-clean): New synonym for realclean.

Sun Sep 10 10:23:56 1995  Michael Tiemann  <tiemann@axon.cygnus.com>

	* registers.c (register_description): Add gdb synonyms for cr
	(cnd) and msr (ps).

Fri Sep  8 13:16:10 1995  Ian Lance Taylor  <ian@cygnus.com>

	* Makefile.in (install): Don't install in $(tooldir).

	* configure.in: Call AC_CONFIG_HEADER.  Don't try to use
	bfd/hosts/*.h file or bfd/config/*.mh file.  Call AC_PROG_CC and
	AC_PROG_RANLIB.  Substitute in values for CFLAGS, HDEFINES, AR,
	and CC_FOR_BUILD.  Call AC_CHECK_HEADERS for various header files.
	Touch stamp.h if creating config.h.
	* configure: Rebuild.
	* config.in: New file, created by autoheader.
	* Makefile.in (AR): Define as @AR@.
	(CC): New variable, defined as @CC@.
	(CFLAGS): Define as @CFLAGS@.
	(CC_FOR_BUILD): New variable, defined as @CC_FOR_BUILD@.
	(RANLIB): Define as @RANLIB@.
	(HDEFINES, TDEFINES): New variables.
	(@host_makefile_frag@): Remove.
	(mostlyclean): Make the same as clean, not distclean.
	(clean): Remove config.log.
	(distclean): Remove config.h and stamp-h.
	(Makefile): Don't depend upon @frags@.  Just rebuild Makefile when
	invoking config.status.
	(config.h, stamp-h): New targets.
	(gen, gen.o): Build with CC_FOR_BUILD, not CC.
	(ppc-config.h): Rename from old config.h build.
	* (basics.h,gen.c,ppc-endian.c,psim.c): Include ppc-config.h.

Fri Sep  8 09:51:03 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* configure{,.in}: Don't include sysdep.h from bfd, since bfd no
	longer provides it.
	* basics.h (sysdep.h): Don't include it.
	* Makefile.in (BASICS_H): Remove sysdep.h.

Wed Sep  6 13:25:42 1995  Andrew Cagney  <cagney@highland.com.au>

 	* core.c (core_add_data): First growth of bss was being put at
        wrong address (0) instead of &end.

 	* core.c (core_add_stack, core_add_data): Was not handling case
        where bss/stack is grown across the current end-of-{bss,stack}.

Wed Sep  6 00:46:10 1995  Andrew Cagney  <cagney@highland.com.au>

	* system.c (system_call): Fix SYS_break - was aligning bss to a
        page boundary instead of just an 8 byte one; On first call sbrk(0)
        != sbrk(0).

Thu Aug 24 14:48:54 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* Makefile.in (install): Fix install rule.

Tue Aug 22 09:31:18 1995  Michael Meissner  <meissner@tiktok.cygnus.com>

	* system.c (system_call): Add read support.

	* main.c (main): -t sets trace_device_tree.  Correct usage message
	to current reality.

	* device_tree.c (update_memory_node_for_section): Make tracing
	output line up.  If not code or readonly, assume that the section
	is a data section and has read/write permissions.  Add readonly
	support.

	* core.c (create_core_from_addresses): Print end address in traces
	and make tracing output line up.

	* Makefile.in: Rewrite from Makefile to work with the Cygnus
	environment, and support compiling in a different directory than
	the sources reside in.

	* ppc-endian.h: Rename from endian.h so that it doesn't get
	confused with /usr/include/sys/endian.h on Linux.  Add Linux
	endian support.

	* ppc-endian.c: Rename to be consistant with ppc-endian.h.
	Include ppc-endian.h, not endian.h.

	* basics.h (sysdep.h): Include sysdep.h that configure makes.
	Include ppc-endian.h, not endian.h.

	* std-config.h: Rename from ppc-config.  Put #ifndefs around most
	configuration macros, so they can be overridden via CFLAGS.  By
	default, turn off tracing.

	* configure.in: Clone from other simulator targets.
	* configure: Generate via autoconf from configure.in.

Sat Aug 19 09:05:32 1995  Andrew Cagney  <cagney@highland.com.au>

	* ppc-instructions: fix srawi (was geting XER[CA] real wrong).

	* interrupts.c (data_storage_interrupt): allow stack to grow by
        upto one MB per increment.

	* ppc-instructions: divw was computing rA / rA not rA / rB

	* main.c (main): really stupid. Wasn't exiting with correct status

Fri Aug 18 00:38:01 1995  Andrew Cagney  <cagney@highland.com.au>

	* system.c (system_call): add system calls kill(2) and getpid(2).

	* main.c (main): Check/return exit status when simulation
        finishes.

Thu Aug 17 14:29:18 1995  Andrew Cagney  <cagney@highland.com.au>

	* device_tree.c (create_option_device_node): Alignment rules (at
 	least for the moment) now are for strict alignment only for LE OEA
 	mode.  (Because of compiler problems).

	* system.c (system_call) SYS_exit: Wasn't exiting with correct status.

Thu Aug 17 01:16:38 1995  Andrew Cagney  <cagney@highland.com.au>

	* vm.c (DEFINE_VM_DATA_MAP_WRITE_N): For miss aligned transfer
        forgot to return.

	* system.c (system_call): didn't page align break argument before
        determining increment break increment.

	* psim/ppc: Re-arange entire directory structure so that
        everything lives in the one directory.  While a pain for cleaning,
        makes building across multiple architectures much simpler.

	* devices.c, device_tree.c: Added code that provides a simple
        illustration of how an interrupt control device could be
        implemented.

	* devices.c: Added code so that the dumb console device can read
        (from stdin) as well as write to stdout.
