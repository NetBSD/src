# Copyright 2012-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is a dejagnu "board file" and is used to run the testsuite
# against local host, in remote host mode.
#
# To use this file:
# bash$ cd ${build_dir}/gdb
# bash$ make check RUNTESTFLAGS="--host_board=local-remote-host"

# Like local-remote-host-notty, but with readline/editing enabled.

global GDB
set GDB [file join [pwd] "../gdb"]

set_board_info hostname 127.0.0.1

set_board_info username $env(USER)

# The ssh key should be correctly set up that you ssh to 127.0.0.1
# without having to type password.
set_board_info rsh_prog /usr/bin/ssh
set_board_info rcp_prog /usr/bin/scp
set_board_info file_transfer "rsh"

proc ${board}_file { dest op args } {
    if { $op == "delete" } {
	return 0
    }
    return [eval [list standard_file $dest $op] $args]
}

proc ${board}_download { board src dest } {

    # If file name is a relative, convert it to absolute, otherwise file can't
    # be found on host, because the current directory usually is /home/$USER.
    # This also bypasses the real download to the host.
    if { [file pathtype $src] == "relative" } {
	return [file join [pwd] $src]
    } else {
	return $src
    }
}

# Like standard_spawn, but force pseudo-tty allocation, with 'ssh -t'.

proc ${board}_spawn { board cmd } {
    global board_info

    set remote [board_info $board hostname]
    set username [board_info $board username]
    set RSH [board_info $board rsh_prog]

    spawn $RSH -t -l $username $remote $cmd
    set board_info($board,fileid) $spawn_id
    return $spawn_id
}

set GDBFLAGS "${GDBFLAGS} -iex \"set style enabled off\""
