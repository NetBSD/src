# Copyright 2006-2015 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@gnu.org

# This file is part of the gdb testsuite.

# Test that GDB can see the sizes of symbols.

if { ![is_x86_like_target] } then {
    verbose "Skipping i386 unwinder tests."
    return
}

set testfile "i386-size"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}

# some targets have leading underscores on assembly symbols.
set additional_flags [gdb_target_symbol_prefix_flags]

if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" \
	  executable [list debug $additional_flags]] != "" } {
    untested "i386-size"
    return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

# We use gdb_run_cmd so this stands a chance to work for remote
# targets too.
gdb_run_cmd
gdb_test "" "Program received signal SIGTRAP.*" "run past main"

set message "backtrace shows no function"
gdb_test_multiple "backtrace 10" $message {
    -re "#1\[ \t]*$hex in main.*$gdb_prompt $" {
	fail $message
    }
    -re "#1\[ \t]*$hex in \\?\\? \\(\\).*$gdb_prompt $" {
	pass $message
    }
}

set message "disassemble stops at end of main"
gdb_test_multiple "disassemble main" $message {
    -re "call.*<trap>.*$gdb_prompt $" {
	fail $message
    }
    -re "<\\+8>:\[ \t\]+ret\[ \t\r\n\]+End of.*$gdb_prompt $" {
	pass $message
    }
}
