# Copyright 2009-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is part of the gdb testsuite.

# Test UNsigned extension of the 32-bit inferior address on a 64-bit host.
# On native 32-bit host the test always PASSed.

if { (![istarget "x86_64-*-*"] && ![istarget "i?86-*-*"]) || ![is_lp64_target]
     || [istarget "*-*-openbsd*"] } then {
    verbose "Skipping amd64->i386 adress test."
    return
}

if [prepare_for_testing "failed to prepare" amd64-i386-address amd64-i386-address.S [list debug "additional_flags=-m32 -nostdlib"]] {
    return -1
}

gdb_run_cmd

set test "trap stop"
gdb_test_multiple "" $test {
    -re "Program received signal SIGTRAP,.*_start .*$gdb_prompt $" {
	pass $test
    }
}

gdb_test "x/wx \$esp" "0x\[0-9a-f\]*:\t0xdeadf00d"

# Failure case would be:
# 	0xff8d7f00:     Cannot access memory at address 0xff8d7f00
gdb_test "x/wx \$ebx" "0x\[0-9a-f\]*:\t0xdeadf00d"
