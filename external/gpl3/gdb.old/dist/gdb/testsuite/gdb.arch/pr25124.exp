# Copyright 2019-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test proper disassembling of ARM thumb instructions when reloading a symbol
# file.

if {![is_aarch32_target]} {
    verbose "Skipping ARM tests."
    return
}

standard_testfile .S

if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable debug] != "" } {
    untested "failed to compile"
    return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir

# Load the symbol file the first time.
gdb_load ${binfile}

# Check if the disassemble ouput is correct.
gdb_test "x /i main+8" \
	"$hex <main\\+8>:\[ \t\]+bx\[ \t\]+lr" \
	"disassemble thumb instruction (1st try)"

# Reload the symbol file to trigger the bug.
gdb_load ${binfile}

# Check if the disassemble output is the same as above.
gdb_test "x /i main+8" \
	"$hex <main\\+8>:\[ \t\]+bx\[ \t\]+lr" \
	"disassemble thumb instruction (2nd try)"
