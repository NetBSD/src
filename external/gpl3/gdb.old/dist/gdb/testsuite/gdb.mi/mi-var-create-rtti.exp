# Copyright 2012-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib mi-support.exp
set MIFLAGS "-i=mi"

standard_testfile .c
set opts {debug}

if [build_executable $testfile.exp $testfile $srcfile $opts] {
    return -1
}

mi_clean_restart $binfile

if {[mi_runto_main] < 0} {
    return -1
}

# Test creating a register-based variable.  We pick
# register SP since it is a pointer to data.  This checks
# for a regression when creating MI variables from pointers
# with "print object" enabled.

# Enable "print object"
mi_gdb_test "-gdb-set print object on" ".*"

# Test creating a variable for $sp.
# We use a explicit cast to (void *) as that is the
# type that caused the bug this testcase is testing for.
mi_gdb_test "-var-create sp1 * ((void*)\$sp)" \
	    "\\^done,name=\"sp1\",numchild=\"0\",value=\"$hex\",type=\"void \\*\",thread-id=\"$decimal\",has_more=\"0\"" \
	    "-var-create sp1 * \$sp"
mi_gdb_test "-var-create sp2 @ ((void*)\$sp)" \
	    "\\^done,name=\"sp2\",numchild=\"0\",value=\"$hex\",type=\"void \\*\",has_more=\"0\"" \
	    "-var-create sp2 @ \$sp"
gdb_exit
