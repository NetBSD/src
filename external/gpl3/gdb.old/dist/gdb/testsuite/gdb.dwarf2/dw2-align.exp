# Copyright 2018-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2 and use gas.
if {![dwarf2_support]} {
    return 0
}

standard_testfile main.c -dw.S

# Make some DWARF for the test.

set asm_file [standard_output_file $srcfile2]
Dwarf::assemble $asm_file {
    global srcdir subdir srcfile

    cu {} {
	DW_TAG_compile_unit {
                {DW_AT_language @DW_LANG_C_plus_plus}
                {DW_AT_name     $srcfile}
                {DW_AT_comp_dir /tmp}
        } {
	    declare_labels itype ptype

            itype: DW_TAG_base_type {
                {DW_AT_byte_size 4 DW_FORM_sdata}
                {DW_AT_encoding  @DW_ATE_signed}
                {DW_AT_name int_4096}
		{DW_AT_alignment 4096 DW_FORM_sdata}
            }

            ptype: DW_TAG_pointer_type {
                {DW_AT_byte_size 8 DW_FORM_sdata}
                {DW_AT_type :$itype}
		{DW_AT_alignment 4096 DW_FORM_sdata}
            }

            DW_TAG_typedef {
                {DW_AT_name ptr_4096}
                {DW_AT_type :$ptype}
            }

	    DW_TAG_structure_type {
		{DW_AT_name "struct_4096"}
		{DW_AT_byte_size 4096 DW_FORM_sdata}
		{DW_AT_alignment 4096 DW_FORM_udata}
	    } {
		member {
		    {name a}
		    {type :$itype}
		    {data_member_location 0 data1}
		}
	    }
	}
    }
}

if { [prepare_for_testing "failed to prepare" ${testfile} \
	  [list $srcfile $asm_file] {nodebug}] } {
    return -1
}

if ![runto_main] {
    return -1
}

gdb_test_no_output "set lang c++"
gdb_test "print alignof(int_4096)" " = 4096"
gdb_test "print alignof(ptr_4096)" " = 4096"
gdb_test "print alignof(struct_4096)" " = 4096"
