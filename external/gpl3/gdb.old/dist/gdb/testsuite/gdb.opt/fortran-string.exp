# Copyright 2009-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/> .

# Test GDB can cope with Fortran strings having their length present in a CPU
# register.  With -O0 the string length is passed on the stack.  To make this
# test meaningful the follow assertion should pass.  It is not being checked
# here as the "_s" symbol is compiler dependent:
#   (gdb) info address _s
#   Symbol "_s" is a variable in register XX.

standard_testfile .f90

if { [prepare_for_testing "prepare for testing" ${testfile} ${srcfile} \
	  {debug f90 additional_flags=-O1}] } {
    return -1
}

if {![runto f]} {
    return
}

gdb_test_no_output "set print frame-arguments all"
gdb_test "frame" ".*s='foo'.*"
gdb_test "ptype s" "type = character \\(3\\)"
gdb_test "p s" "\\$\[0-9\]* = 'foo'"
