# Copyright 2021-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Ensure that calling a member function works correctly even when the
# language is forced to 'C' (this should be fine, so long at no
# overload resolution is required), or when overload-resolution is
# off.

standard_testfile .cc

if { [prepare_for_testing "failed to prepare" $testfile $srcfile] } {
    return -1
}

if {![runto_main]} {
    return 0
}

gdb_breakpoint [gdb_get_line_number "Break here"]
gdb_continue_to_breakpoint "Break here"

set result 123
foreach_with_prefix lang { c++ c } {
    foreach_with_prefix overload_resolution { on off } {
	gdb_test_no_output "set overload-resolution ${overload_resolution}"
	gdb_test "set language ${lang}"

	gdb_test "print foo.func (b, f)" " = ${result}"
	incr result

	set result [expr $result + 3]
	gdb_test "print foo += b" \
	    " = \\((?:struct )?foo_type &\\) @${hex}: \\\{var = ${result}\\\}"

	gdb_test "print foo.static_method (f, b)" " = 4"
	gdb_test "print foo_type::static_method (f, b)" " = 4"
    }
}
