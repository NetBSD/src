# Copyright 2011-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

standard_testfile .cc

if {[prepare_for_testing "failed to prepare" $testfile $srcfile {debug c++}]} {
    return -1
}

if ![runto_main] {
    return -1
}

gdb_breakpoint [gdb_get_line_number "Break here"]
gdb_continue_to_breakpoint "Break here"

gdb_test "up" "#1 .*~Derived.*" "go up to ~Derived"

foreach setting {on off} {
    gdb_test_no_output "set print object $setting"

    # Here we are in ~Derived.  At this point, Derived has been
    # destroyed, so *this looks like a Base.  But, the static type of
    # *this is still Derived, and printing it should show us all the
    # fields, regardless of what "set print object" says.
    gdb_test "print *this" \
	" = .*, z = 23." \
	"print *this with print object = $setting"
}
