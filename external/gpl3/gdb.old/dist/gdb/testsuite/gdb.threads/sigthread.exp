# sigthread.exp -- Expect script to test thread and signal interaction
# Copyright (C) 2007-2016 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

standard_testfile

if {[gdb_compile_pthreads "${srcdir}/${subdir}/${srcfile}" "${binfile}" \
	 executable { debug }] != "" } {
    return -1
}

clean_restart ${binfile}

if ![runto_main] then {
   fail "Can't run to main"
   return 0
}

gdb_test "handle SIGUSR1 nostop noprint pass"
gdb_test "handle SIGUSR2 nostop noprint pass"

gdb_test_multiple "continue" "continue" {
    -re "Continuing" {
	pass "continue"
    }
}

# This test requires sending ^C to interrupt the running target.
if [target_info exists gdb,nointerrupts] {
    verbose "Skipping sigthread.exp because of nointerrupts."
    return
}

# For this to work we must be sure to consume the "Continuing."
# message first, or GDB's signal handler may not be in place.
after 500 {send_gdb "\003"}

# Make sure we do not get an internal error from hitting Control-C
# while many signals are flying back and forth.
gdb_test "" "Thread .* received signal SIGINT.*" "stop with control-c"
