# Copyright (C) 2007-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test running "info threads" while threads are being created and
# exiting, in non-stop mode.  Originally based on multi-create.exp.

standard_testfile multi-create.c

if {[prepare_for_testing "failed to prepare" $testfile $srcfile {debug pthreads}] == -1} {
    return -1
}

gdb_test_no_output "set pagination off"
gdb_test_no_output "set non-stop on"

if ![runto_main] {
    return -1
}

# Create a breakpoint that does "info threads" when hit, which will be
# just while other threads are being created or exiting.
set bp_location1 [gdb_get_line_number "set breakpoint 1 here"]
gdb_breakpoint $srcfile:$bp_location1
gdb_test "commands\ninfo threads\ncontinue&\nend" ".*" "set breakpoint commands"

set test "continue -a&"
gdb_test_multiple $test $test {
    -re "$gdb_prompt " {
	pass $test
    }
}

for {set i 0} {$i < 32} {incr i} {
    set test "continue to breakpoint $i"
    gdb_test_multiple "" $test {
	-re "Breakpoint $decimal,.*$srcfile:$bp_location1" {
	    pass $test
	}
    }
}
