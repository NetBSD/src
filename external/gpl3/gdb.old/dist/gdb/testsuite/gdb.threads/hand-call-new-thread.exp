# Copyright (C) 2015 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Ensure that new threads created while an infcall is ongoing are set
# to stopped state once the call finishes.

standard_testfile

if [prepare_for_testing "failed to prepare" $testfile $srcfile {debug pthreads}] {
    return -1
}

if ![runto_main] {
    continue
}

# Set a thread-specific breakpoint that the wrong thread trips on
# while running the infcall.  Check that no thread ends up in stale
# "running" state once the call finishes.
gdb_test "b foo thread 1" "Breakpoint .*$srcfile.*"

for {set i 0} {$i < 3} {incr i} {
    with_test_prefix "iter $i" {
	gdb_test "p new_thread ()" " = void"

	set message "no thread marked running"
	gdb_test_multiple "info threads" $message {
	    -re "\\\(running\\\).*$gdb_prompt $" {
		fail $message
	    }
	    -re "$gdb_prompt $" {
		pass $message
	    }
	}
    }
}
