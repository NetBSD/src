# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2013-2017 Free Software Foundation, Inc.
#
# Contributed by Intel Corp. <markus.t.metzger@intel.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Test that we can reverse-next over the dynamic linker's symbol
# lookup code.

if { [skip_btrace_tests] } {
    unsupported "target does not support record-btrace"
    return -1
}

standard_testfile
if [prepare_for_testing "failed to prepare" $testfile $srcfile {c++ debug}] {
    return -1
}

if ![runto_main] {
    untested "failed to run to main"
    return -1
}

# trace the code for the call to test
gdb_test_no_output "record btrace"
gdb_test "next" ".*main\.2.*"

# just dump the function-call-history to help debugging
gdb_test_no_output "set record function-call-history-size 0"
gdb_test "record function-call-history /cli 1" ".*"

# check that we can reverse-next and next
gdb_test "reverse-next" ".*main\.1.*"
gdb_test "next" ".*main\.2.*"

# now go into test and try to reverse-next and next over the library call
gdb_test "reverse-step" ".*test\.3.*"
gdb_test "reverse-step" ".*test\.2.*"
gdb_test "reverse-next" ".*test\.1.*"
gdb_test "next" ".*test\.2.*"
