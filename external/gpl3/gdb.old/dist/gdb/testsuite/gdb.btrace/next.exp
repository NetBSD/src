# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2013-2015 Free Software Foundation, Inc.
#
# Contributed by Intel Corp. <markus.t.metzger@intel.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# check for btrace support
if { [skip_btrace_tests] } { return -1 }

# start inferior
standard_testfile x86-record_goto.S
if [prepare_for_testing next.exp $testfile $srcfile] {
    return -1
}

if ![runto_main] {
    return -1
}

# trace the call to the test function
gdb_test_no_output "record btrace"
gdb_test "next"

proc check_replay_at { insn } {
  gdb_test "info record" [join [list \
    "Active record target: record-btrace" \
    "Recorded 40 instructions in 16 functions for .*" \
    "Replay in progress\.  At instruction $insn\." \
    ] "\r\n"]
}

# we start with stepping to make sure that the trace is fetched automatically
# the call is outside of our trace
gdb_test "reverse-next" ".*main\.2.*"
with_test_prefix "reverse-next - 1" { check_replay_at 1 }

# we can't reverse-step any further
gdb_test "reverse-next" "No more reverse-execution history\.\r\n.*main\.2.*"
with_test_prefix "reverse-next - 2" { check_replay_at 1 }

# but we can step back again
gdb_test "next" ".*main\.3.*"
gdb_test "info record" [join [list \
  "Active record target: record-btrace" \
  "Recorded 40 instructions in 16 functions for \[^\\\r\\\n\]*" \
  ] "\r\n"] "next back"

# let's go somewhere where we can step some more
gdb_test "record goto 22" ".*fun3\.2.*"
with_test_prefix "goto 22" { check_replay_at 22 }

gdb_test "next" ".*fun3\.3.*"
with_test_prefix "next to 27" { check_replay_at 27 }

gdb_test "next" ".*fun3\.4.*"
with_test_prefix "next to 37" { check_replay_at 37 }

# and back again
gdb_test "reverse-next" ".*fun3\.3.*"
with_test_prefix "reverse-next to 27" { check_replay_at 27 }

gdb_test "reverse-next" ".*fun3\.2.*"
with_test_prefix "reverse-next to 22" { check_replay_at 22 }
