# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2020-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test that new threads of recorded inferiors also get recorded.

if { [skip_btrace_tests] } {
    unsupported "target does not support record-btrace"
    return -1
}

standard_testfile
if [prepare_for_testing "failed to prepare" $testfile $srcfile {debug pthreads}] {
    return -1
}

if ![runto_main] {
    return -1
}

# Record the main thread.  Recording will automatically be enabled for the
# other thread.
gdb_test "record btrace"

gdb_breakpoint [gdb_get_line_number "bp.1" $srcfile]
gdb_continue_to_breakpoint "cont to bp.1" ".*/\\* bp\.1 \\*/.*"

proc check_thread_recorded { num } {
    global decimal

    with_test_prefix "thread $num" {
	gdb_test "thread $num" "Switching to thread $num.*"

	gdb_test "info record" [multi_line \
	    "Active record target: record-btrace" \
	    ".*" \
	    "Recorded $decimal instructions in $decimal functions \[^\\\r\\\n\]*" \
       ]
    }
}

check_thread_recorded 1
check_thread_recorded 2
