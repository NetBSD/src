#   Copyright 1998-2015 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file was written by Michael Snyder (msnyder@cygnus.com)

load_lib "trace-support.exp"


gdb_exit
gdb_start

standard_testfile actions.c
set executable $testfile
if { [gdb_compile "$srcdir/$subdir/$srcfile" $binfile \
	  executable {debug nowarnings}] != "" } {
    untested while-dyn.exp
    return -1
}
gdb_load $binfile
gdb_test "tstop"       ".*" ""
gdb_test "tfind none"  ".*" ""
runto_main
gdb_reinitialize_dir $srcdir/$subdir

if { ![gdb_target_supports_trace] } then {
    unsupported "Current target does not support trace"
    return 1
}

#
# test while-stepping dynamically (live target)
#

if [is_amd64_regs_target] {
    set fpreg "\$rbp"
} elseif [is_x86_like_target] {
    set fpreg "\$ebp"
} else {
    set fpreg "\$fp"
}

proc test_while_stepping { while_stepping } {
    global fpreg
    global decimal
    global gdb_prompt
    global executable

    clean_restart $executable

    gdb_test "tstop" ".*" ""
    gdb_test "tfind none" ".*" ""
    runto_main

    ## verify number of trace frames collected matches stepcount

    gdb_delete_tracepoints
    gdb_test "trace gdb_c_test" \
	"Tracepoint $decimal at .*" \
	"$while_stepping: Set tracepoint at gdb_c_test"

    gdb_trace_setactions "5.12: define $while_stepping <stepcount>" \
	"" \
	"collect $fpreg" "^$" \
	"$while_stepping 5" "^$" \
	"collect p" "^$" \
	"end" "^$" \
	"end" ""

    gdb_test "tstart" ".*" ""

    gdb_test "break end" ".*" ""
    gdb_test "continue" \
	"Continuing.*Breakpoint $decimal, end.*" \
	"$while_stepping: run trace experiment"

    gdb_test "tstop" ".*" ""

    gdb_tfind_test "$while_stepping: frame 5 should be the last one collected" "5" "5"

    set test "$while_stepping: trace stopped after 5 stepping frames"
    gdb_test_multiple "tfind 6" "$test" {
	-re "failed to find.*$gdb_prompt $" {
	    pass "$test"
	}
	-re ".*$gdb_prompt $" {
	    fail "$test"
	}
    }

    gdb_test "tfind none" ".*" ""
}

# Test all while-stepping aliases.

test_while_stepping "while-stepping"
test_while_stepping "stepping"
test_while_stepping "ws"
