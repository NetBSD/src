# This testcase is part of GDB, the GNU debugger.

# Copyright 2010-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test GDB stabs problem with qualified parameter of forward types.


set testfile "gdb11479"

proc do_test {version} {
    if ![runto_main] {
        fail "can't run to main $version"
        return -1
    }
    gdb_test "rb test" "" "set breakpoints $version"
    gdb_test "continue" "Breakpoint .* test2 .*" "stop at first breakpoint $version"
    # Check that the struct is read in correctly
    gdb_test "print *t" ".*\{x = 5, y = 25, b = 2.5\}.*" \
	"Inspect t in test2 $version"
    # Check that the enum type length has been set to a non-zero value
    gdb_test "print sizeof (*e)" "= \[1-9\]*" "sizeof (*e) in test2 $version"
    gdb_test "continue" "Breakpoint .* test .*" \
	"Stop at first breakpoint $version"
    gdb_test "print *t" ".*\{x = 5, y = 25, b = 2.5\}.*" \
	"Inspect t in test $version"
    # Check that the enum type length has been set to a non-zero value
    gdb_test "print sizeof (*e)" "= \[1-9\]*" "sizeof (*e) in test $version"
}

if { [prepare_for_testing "failed to prepare" $testfile $testfile.c {debug additional_flags=-gstabs}] == 0 } {
    do_test forced_stabs
}

# Without this gdb_exit the executable is still opened
# by GDB which can generate a compilation failure. 
gdb_exit

if { [prepare_for_testing "failed to prepare" $testfile $testfile.c {debug}] == 0 } {
    do_test natural_debug_format
}

