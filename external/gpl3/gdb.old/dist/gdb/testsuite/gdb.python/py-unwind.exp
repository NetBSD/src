# Copyright (C) 2015-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is part of the GDB testsuite.  It verifies that frame
# unwinders can be implemented in Python.

load_lib gdb-python.exp

standard_testfile

# Stack protection can make the stack look a bit different, breaking the
# assumptions this test has about its layout.

set flags "additional_flags=-fno-stack-protector"

if { [prepare_for_testing "failed to prepare" ${testfile} ${srcfile} "debug $flags"] } {
    return -1
}

# Skip all tests if Python scripting is not enabled.
if { [skip_python_tests] } { continue }

# This test runs on a specific platform.
if { ![istarget x86_64-*-* ] || ![is_lp64_target] } { continue }

# The following tests require execution.

if {![runto_main]} {
    return 0
}

set pyfile [gdb_remote_download host ${srcdir}/${subdir}/${testfile}.py]

gdb_breakpoint [gdb_get_line_number "break backtrace-broken"]

gdb_test "source ${pyfile}" "Python script imported" \
         "import python scripts"

gdb_continue_to_breakpoint "break backtrace-broken"
gdb_test_sequence "where"  "Backtrace restored by unwinder" {
    "\\r\\n#0 .* corrupt_frame_inner \\(\\) at "
    "\\r\\n#1 .* corrupt_frame_outer \\(\\) at "
    "\\r\\n#2 .* main \\(.*\\) at"
}

# Check that the Python unwinder frames can be flushed / released.
gdb_test "maint flush register-cache" "Register cache flushed\\." "flush frames"

# Check that invalid register names cause errors.
gdb_test "python print(add_saved_register_error)" "True" \
    "add_saved_register error"
gdb_test "python print(read_register_error)" "True" \
    "read_register error"
