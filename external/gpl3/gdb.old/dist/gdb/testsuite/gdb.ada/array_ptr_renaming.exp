# Copyright 2015-2016 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

standard_ada_testfile foo

if {[gdb_compile_ada "${srcfile}" "${binfile}" executable [list debug]] != "" } {
  return -1
}

clean_restart ${testfile}

set bp_location [gdb_get_line_number "BREAK" ${testdir}/foo.adb]
runto "foo.adb:$bp_location"

gdb_test "print nt"    " = \\(10, 20\\)"
gdb_test "print nt(1)" " = 10"

# Accesses to arrays and unconstrained arrays have the same runtime
# representation with GNAT (fat pointers).  In this case, GDB "forgets" that
# it's dealing with an access and prints directly the array contents.  This
# should be fixed some day.
setup_kfail "gdb/NNNN" *-*-*
gdb_test "print ntp"     " = \\(access pack\\.table_type\\) $hex.*"
gdb_test "print ntp.all" " = \\(3 => 30, 40\\)"
gdb_test "print ntp(3)"  " = 30"
