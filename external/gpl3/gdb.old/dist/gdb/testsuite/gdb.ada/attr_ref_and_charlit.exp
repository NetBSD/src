# Copyright 2015-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

if { [skip_ada_tests] } { return -1 }

standard_ada_testfile "foo"

if {[gdb_compile_ada "${srcfile}" "${binfile}" executable [list debug]] != "" } {
  return -1
}

clean_restart ${testfile}
set bp_location [gdb_get_line_number "BREAK" "${testdir}/foo.adb"]

# Check with the same array at two different points in the execution that using
# both an attribute reference and a character literal in the same expression
# work as expected. They used to yield syntax error.

runto "foo.adb:$bp_location"
with_test_prefix "run" {
    gdb_test "print s'first" " = 2"
    gdb_test "print s'last"  " = 3"
    gdb_test "print s(s'first) = 'a'" " = true"
    gdb_test "print s(s'last) /= 'b'" " = false"
}

gdb_test "continue" \
         ".*Breakpoint \[0-9\]+, foo\\.p \\(s=.*\\) at .*foo.adb:\[0-9\]+.*"

with_test_prefix "cont" {
    gdb_test "print s'first" " = 4"
    gdb_test "print s'last"  " = 5"
    gdb_test "print s(s'first) = 'c'" " = true"
    gdb_test "print s(s'last) /= 'd'" " = false"
}
