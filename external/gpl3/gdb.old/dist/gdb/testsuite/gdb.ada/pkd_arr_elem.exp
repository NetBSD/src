# Copyright 2014-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

if { [skip_ada_tests] } { return -1 }

standard_ada_testfile failure

if {[gdb_compile_ada "${srcfile}" "${binfile}" executable {debug}] != ""} {
    return -1
}

clean_restart ${testfile}

set bp_location \
    failure.adb:[gdb_get_line_number "START" ${testdir}/failure.adb]

# Workaround gcc PR101575.
#runto "$bp_location"
gdb_breakpoint "$bp_location"
gdb_run_cmd
set re "Breakpoint $decimal, failure \\(\\) at .*:$decimal.*"
set re_xfail "Breakpoint $decimal, failure__bounded_funny_stringIP.0 \\(\\) at .*:$decimal.*"
set ok 1
gdb_test_multiple "" "Runto to $bp_location" {
    -re -wrap $re {
	if { $ok } {
	    pass $gdb_test_name
	} else {
	    xfail $gdb_test_name
	}
    }
    -re -wrap $re_xfail {
	set ok 0
	send_gdb "continue\n"
	exp_continue
    }
}

# Print Test.  The order of the components depends on which version of
# the compiler being used, as newer version can re-order the order
# of the components.  Accept both known orders.
set test "print test"
gdb_test_multiple "$test" $test {
  -re "= \\(size => 100, length => 1, str => \\(33 'A', nul <repeats 99 times>\\)\\).*$gdb_prompt $" {
    pass $test
    }
  -re "= \\(size => 100, str => \\(33 'A', nul <repeats 99 times>\\), length => 1\\).*$gdb_prompt $" {
    pass $test
    }
}

gdb_test "print test.str" \
         "= \\(33 'A', nul <repeats 99 times>\\)"

gdb_test "print test.str(1)" \
         "= 33 'A'"
