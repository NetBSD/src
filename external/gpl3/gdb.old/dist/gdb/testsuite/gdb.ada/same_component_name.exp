# Copyright 2017-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

if { [skip_ada_tests] } { return -1 }

standard_ada_testfile foo

foreach_with_prefix scenario {all minimal} {
    set flags [list debug additional_flags=-fgnat-encodings=$scenario]

    if {[gdb_compile_ada "${srcfile}" "${binfile}-${scenario}" executable $flags] != "" } {
	return -1
    }

    clean_restart ${testfile}-${scenario}

    set bp_top_location [gdb_get_line_number "BREAK_TOP" ${testdir}/pck.adb]
    set bp_middle_location [gdb_get_line_number "BREAK_MIDDLE" ${testdir}/pck.adb]
    set bp_bottom_location [gdb_get_line_number "BREAK_BOTTOM" ${testdir}/pck.adb]
    set bp_dyn_middle_location [gdb_get_line_number "BREAK_DYN_MIDDLE" ${testdir}/pck.adb]
    set bp_foo [gdb_get_line_number "STOP" ${testdir}/foo.adb]

    gdb_breakpoint "pck.adb:$bp_top_location"
    gdb_breakpoint "pck.adb:$bp_middle_location"
    gdb_breakpoint "pck.adb:$bp_bottom_location"
    gdb_breakpoint "pck.adb:$bp_dyn_middle_location"
    gdb_breakpoint "foo.adb:$bp_foo"

    gdb_run_cmd

    gdb_test "" \
	".*Breakpoint $decimal, pck.top.assign \\(.*\\).*" \
	"run to top assign breakpoint"

    gdb_test "print obj.n" " = 1" "Print top component field"

    gdb_test "continue" \
	".*Breakpoint $decimal, pck.assign \\(.*\\).*" \
	"continue to bottom assign breakpoint"

    gdb_test "print obj.n" " = 4\\.0" "Print bottom component field"

    gdb_test "continue" \
	".*Breakpoint $decimal, pck.middle.assign \\(.*\\).*" \
	"continue to middle assign breakpoint"

    gdb_test "print obj.a" " = 48" \
	"Print top component field in middle assign function"

    gdb_test "continue" \
	".*Breakpoint $decimal, pck.assign \\(.*\\).*" \
	"continue to bottom assign breakpoint, 2nd time"

    gdb_test "print obj.x" " = 6" \
	"Print field existing only in bottom component"

    gdb_test "continue" \
	".*Breakpoint $decimal, pck.dyn_middle.assign \\(.*\\).*" \
	"continue to dyn_middle assign breakpoint"

    gdb_test "print obj.u" " = 42" \
	"Print field existing only in dyn_middle component"

    gdb_test "continue" \
	".*Breakpoint $decimal, foo \\(.*\\).*" \
	"continue to foo breakpoint"

    gdb_test "print dma.a" " = 48" \
	"print field in dynamic tagged type via access"
}
