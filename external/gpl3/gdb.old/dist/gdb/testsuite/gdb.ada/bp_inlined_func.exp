# Copyright 2017-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

if { [skip_ada_tests] } { return -1 }

standard_ada_testfile foo

if {[gdb_compile_ada "${srcfile}" "${binfile}" executable [list debug ]] != "" } {
  return -1
}

clean_restart ${testfile}

if {![runto_main]} {
   return 0
}

# Check that inserting breakpoint on read_small inlined function inserts
# 4 breakpoints (or possibly 5, including the read_small function itself).

gdb_test "break read_small" \
         "Breakpoint $decimal at $hex: read_small\\. \\(\[45\] locations\\)" \
         "set breakpoint at read_small"

# We do not verify each breakpoint info, but use continue commands instead
# to verify that we properly stop on each expected breakpoint.

for {set i 0} {$i < 4} {incr i} {
    with_test_prefix "iteration $i" {
	gdb_test "continue" \
	    "Breakpoint $bkptno_num_re, b\\.read_small \\(\\).*" \
	    "stopped in read_small"
    }
}

gdb_test "continue" \
         "Continuing\..*$inferior_exited_re.*" \
         "continuing to program completion"
