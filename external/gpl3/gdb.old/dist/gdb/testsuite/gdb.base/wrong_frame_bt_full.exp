# Copyright (C) 2015-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Build wrong_frame_bt_full-main using two C files:
#   - wrong_frame_bt_full-opaque.c, which needs to be built without
#     debugging info;
#   - wrong_frame_bt_full-main.c, which needs to be built with
#     debugging info.
# This is why we use gdb_compile instead of relying on he usual call
# to prepare_for_testing.

set main_testfile wrong_frame_bt_full-main
set opaque_testfile wrong_frame_bt_full-opaque
set opaque_objfile [standard_output_file "$opaque_testfile.o"]

if {[gdb_compile "${srcdir}/${subdir}/$opaque_testfile.c" \
                 $opaque_objfile \
                 object {}] != ""} {
  untested "failed to compile"
  return -1
}

if {[gdb_compile \
      [list ${srcdir}/${subdir}/$main_testfile.c $opaque_objfile] \
      [standard_output_file ${main_testfile}] \
      executable {debug}] != ""} {
    untested "failed to build $main_testfile"
    return -1
}

clean_restart ${main_testfile}

if ![runto opaque_routine] {
    untested "could not run to opaque_routine"
    return -1
}

# Make sure that "bt full" command is capable of displaying MY_TABLE
# correctly when frame #0 (the frame which does not have any debugging
# info) is the selected frame.

gdb_test "bt full" \
         ".*\[\r\n\]+ *my_table = \\{0, 1, 2\\}\[\r\n\]+.*"

