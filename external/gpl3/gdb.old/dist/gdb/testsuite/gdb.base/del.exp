# Copyright 2006-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# The intent of this testcase is to verify that various aliases and
# shortcuts of the "delete" command never stop working.


standard_testfile

if {[prepare_for_testing "failed to prepare" $testfile $srcfile debug]} {
    return -1
}

# A function to test that ALIAS is working as a shortcut of the "delete"
# command.

proc test_delete_alias { alias } {
    global srcfile

    # First of all, remove all previous breakpoints if there were any,
    # and then verify that we do not have any breakpoint lying around.
    gdb_test_no_output "delete" \
             "remove all breakpoints"

    gdb_test "info break" \
             "No breakpoints or watchpoints." \
             "info break after clearing breakpoints"


    # Now, insert a breakpoint at an easy location, and then remove it
    # using $alias. We verified that the removal worked by checking
    # the list of breakpoints.
    gdb_test "break -q main" \
             "Breakpoint.*at.* file .*$srcfile, line.*" \
             "breakpoint insertion"

    gdb_test_no_output "$alias \$bpnum" \
             "Remove last breakpoint"

    gdb_test "info break" \
             "No breakpoints or watchpoints." \
             "info break after removing break on main"
}

# Test various shortcut forms of the "delete" command.

foreach_with_prefix alias {"del" "d"} {
    test_delete_alias $alias
}
