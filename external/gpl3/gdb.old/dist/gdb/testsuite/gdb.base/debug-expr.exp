# Copyright 2012-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test "set debug expr 1" on c expressions.

# Test relies on checking gdb debug output. Do not run if gdb debug is
# enabled as any debug will be redirected to the log.
if [gdb_debug_enabled] {
    untested "debug is enabled"
    return 0
}

standard_testfile .c

if {[prepare_for_testing "failed to prepare" $testfile $srcfile {debug}]} {
    return -1
}

if ![runto_main] {
    return -1
}

for { set i 0 } { $i < 4 } { incr i } {
    gdb_test_no_output "set variable array\[$i\] = $i"
}

gdb_test_no_output "set debug expression 1"

# This caused gdb to segfault.
gdb_test_debug_expr "print /x {char\[4\]} array" \
    "\[$\]$decimal = \\{0x0, 0x1, 0x2, 0x3\\}"

# This caused gdb to output garbage and possibly segfault
gdb_test_debug_expr "print \"hello\"" \
    ".*OP_STRING\[^\r\n\]*.*: ordinary string.*\[\r\n\]\\$$decimal = \"hello\"" \
    "string evaluation with debug expr"

# An expression using a function call.
gdb_test_debug_expr "print call_me ( &val )" \
    ".*OP_FUNCALL\[^\r\n\]*.*UNOP_ADDR.*\[\r\n\]\\$$decimal = 0.*" \
    "function call expression"
