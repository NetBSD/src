# Copyright 2004-2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# The program sigrepeat.c creates a repeating timer and then waits for
# it to fire multiple times.  The objective is to create a backlog if
# sigalrm signals and hence cause repeated signal delivery without any
# cpu advancment.

if [target_info exists gdb,nosignals] {
    verbose "Skipping sigrepeat.exp because of nosignals."
    continue
}


standard_testfile .c

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
    untested "failed to compile"
    return -1
}

# get things started
clean_restart ${binfile}

# Advance to main
if { ![runto_main] } then {
    gdb_suppress_tests
}

# Run to the signal handler wait loop.
set infinite_loop [gdb_get_line_number {infinite loop}]
gdb_test "advance $infinite_loop" ".*" "advance to infinite loop"

# Make the first of many signals come pending
sleep 1

# Try to step off this line
gdb_test "next" "return 0;.*"
