# Copyright 2019-2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Some basic testing of 'info variables'.

standard_testfile info-var-f1.c info-var-f2.c

if {[prepare_for_testing "failed to prepare" \
	 "${testfile}" "$srcfile $srcfile2" "debug"]} {
    return -1
}

# Note: we do not run to main, as otherwise, the output of info variables
# can be very long, showing thousands of glibc variables.
# This long output then causes expect's buffer to overflow.

gdb_test "info variables" \
    [multi_line \
	 "All defined variables:" \
	 "" \
	 "File .*${srcfile}:" \
	 "19:\\s+int \\* const foo_1\\\[3\\\];" \
	 "20:\\s+const int \\*foo_2\\\[3\\\];" \
	 "21:\\s+int \\*foo_3\\\[3\\\];" \
	 "22:\\s+const int foo_4\\\[3\\\];" \
	 "23:\\s+const int foo_5\\\[3\\\];" \
	 "24:\\s+int foo_6\\\[3\\\];" \
	 "26:\\s+static int f1_var;" \
	 "" \
	 "File .*${srcfile2}:" \
	 "18:\[ \t\]+int global_var;" \
	 "20:\[ \t\]+static int f2_var;" \
	 "(" \
	 "File .*:(" \
	 "$decimal:.*" \
	 ")+)*" \
	 "Non-debugging symbols:" \
	 ".*"]

gdb_test "info variables -n" \
    [multi_line \
	 "All defined variables:" \
	 "" \
	 "File .*${srcfile}:" \
	 "19:\\s+int \\* const foo_1\\\[3\\\];" \
	 "20:\\s+const int \\*foo_2\\\[3\\\];" \
	 "21:\\s+int \\*foo_3\\\[3\\\];" \
	 "22:\\s+const int foo_4\\\[3\\\];" \
	 "23:\\s+const int foo_5\\\[3\\\];" \
	 "24:\\s+int foo_6\\\[3\\\];" \
	 "26:\\s+static int f1_var;" \
	 "" \
	 "File .*${srcfile2}:" \
	 "18:\[ \t\]+int global_var;" \
	 "20:\[ \t\]+static int f2_var;(" \
	 "" \
	 "File .*:(" \
	 "$decimal:.*)+)*"]

gdb_test "info variables -n global" \
    [multi_line \
	 "All variables matching regular expression \"global\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "18:\[ \t\]+int global_var;" ]
