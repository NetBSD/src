# Copyright 2015-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

standard_testfile "vla-sub.f90"
load_lib fortran.exp

if {[skip_fortran_tests]} { return -1 }

if { [prepare_for_testing "failed to prepare" ${testfile} ${srcfile} \
    {debug f90 quiet}] } {
    return -1
}

if ![fortran_runto_main] {
    return -1
}

# "up" works with GCC but other Fortran compilers may copy the values into the
# outer function only on the exit of the inner function.
# We need both variants as depending on the arch we optionally may still be
# executing the caller line or not after `finish'.

gdb_test_no_output "set print repeats unlimited"

gdb_breakpoint [gdb_get_line_number "array2-almost-filled"]
gdb_continue_to_breakpoint "array2-almost-filled"
# array2 size is 296352 bytes.
gdb_test_no_output "set max-value-size 1024*1024"
gdb_test "print array2" " = \\( *\\( *\\( *30, *3, *3,\[()3, .\]*\\)" \
  "print array2 in foo after it was filled"
gdb_test "print array2(2,1,1)=20" " = 20" \
  "set array(2,2,2) to 20 in subroutine"
gdb_test "print array2" " = \\( *\\( *\\( *30, *20, *3,\[()3, .\]*\\)" \
  "print array2 in foo after it was mofified in debugger"

gdb_test "finish" \
  ".*(foo\\\(sub_arr1\\\(5:10, 5:10\\\), sub_arr2\\\(10:15,10:15,10:15\\\)\\\)|foo \\\(array1=..., array2=...\\\).*)" \
  "finish function"
gdb_test "p sub_arr1(5, 7)" " = 5" "sub_arr1(5, 7) after finish"
gdb_test "p sub_arr1(1, 1)" " = 30" "sub_arr1(1, 1) after finish"
gdb_test "p sub_arr2(1, 1, 1)" " = 30" "sub_arr2(1, 1, 1) after finish"
gdb_test "p sub_arr2(2, 1, 1)" " = 20" "sub_arr2(2, 1, 1) after finish"

