#! /bin/sh

# Test C support: extraction of contexts, disambiguating according to the
# argument count.

tmpfiles=""
trap 'rm -fr $tmpfiles' 1 2 3 15

tmpfiles="$tmpfiles xg-c-11.c"
cat <<\EOF > xg-c-11.c
// (KDE) The 1-argument i18n macro is a simple gettext without context.
print (i18n ("help"));
// (KDE) The 2-argument i18n macro has the context first.
print (i18n ("Help", "about"));
// (KDE) The 3-argument i18n macro is an ngettext without context.
print (i18n ("error", "errors", 7));
EOF

tmpfiles="$tmpfiles xg-c-11.po"
: ${XGETTEXT=xgettext}
${XGETTEXT} --omit-header --no-location \
  --keyword=i18n:1 --keyword=i18n:1c,2,2t --keyword=i18n:1,2,3t \
  -d xg-c-11 xg-c-11.c
test $? = 0 || { rm -fr $tmpfiles; exit 1; }

tmpfiles="$tmpfiles xg-c-11.ok"
cat <<EOF > xg-c-11.ok
msgid "help"
msgstr ""

msgctxt "Help"
msgid "about"
msgstr ""

msgid "error"
msgid_plural "errors"
msgstr[0] ""
msgstr[1] ""
EOF

: ${DIFF=diff}
${DIFF} xg-c-11.ok xg-c-11.po
result=$?

rm -fr $tmpfiles

exit $result
