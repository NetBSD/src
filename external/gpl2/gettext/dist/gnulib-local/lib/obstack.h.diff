*** obstack.h	2005-10-15 01:23:50.000000000 +0200
--- obstack.h	2006-07-22 17:48:51.000000000 +0200
***************
*** 193,202 ****
     more memory.  This can be set to a user defined function which
     should either abort gracefully or use longjump - but shouldn't
     return.  The default action is to print a message and abort.  */
! extern void (*obstack_alloc_failed_handler) (void);
  
  /* Exit value used when `print_and_abort' is used.  */
! extern int obstack_exit_failure;
  
  /* Pointer to beginning of object being allocated or to be allocated next.
     Note that this might not be the final address of the object
--- 192,201 ----
     more memory.  This can be set to a user defined function which
     should either abort gracefully or use longjump - but shouldn't
     return.  The default action is to print a message and abort.  */
! extern DLL_VARIABLE void (*obstack_alloc_failed_handler) (void);
  
  /* Exit value used when `print_and_abort' is used.  */
! extern DLL_VARIABLE int obstack_exit_failure;
  
  /* Pointer to beginning of object being allocated or to be allocated next.
     Note that this might not be the final address of the object
