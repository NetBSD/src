.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. [Deleted.  See
.\"     ftp://ftp.cs.berkeley.edu/pub/4bsd/README.Impt.License.Change]
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)doc-syms	8.1 (Berkeley) 06/08/93
.\"
.\"     %beginstrip%
.
.
.eo
.
.\" NS Ux user macro
.\" NS   print UNIX
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-str-Ux
.\" NS
.\" NS width register `Ux' defined in doc-common
.
.de Ux
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.ps]
.  ds doc-str-Ux \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Ux
.      doc-parse-args \$@
.    \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] \*[doc-Tn-font-size]UNIX\*[doc-str-Ux]
.  nr doc-type\n[doc-arg-ptr] 2
.  ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.
.  \" recompute space vector for remaining arguments
.  nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.  nr doc-arg-limit \n[doc-arg-ptr]
.  if \n[doc-num-args] \
.    doc-parse-space-vector
.
.  doc-print-recursive
..
.
.
.\" NS Bx user macro
.\" NS   print BSD (fix smaller nroff version)
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-str-Bx
.\" NS   doc-str-Bx1
.\" NS   doc-str-Bx-XXX
.\" NS
.\" NS width register `Bx' defined in doc-common
.
.ds doc-str-Bx-Reno  \-Reno
.ds doc-str-Bx-reno  \-Reno
.ds doc-str-Bx-Tahoe \-Tahoe
.ds doc-str-Bx-tahoe \-Tahoe
.ds doc-str-Bx-Lite  \-Lite
.ds doc-str-Bx-lite  \-Lite
.ds doc-str-Bx-Lite2 \-Lite2
.ds doc-str-Bx-lite2 \-Lite2
.
.de Bx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.ps]
.  ds doc-str-Bx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.  \" default value if no argument
.  ds doc-str-Bx1 \*[doc-Tn-font-size]BSD\*[doc-str-Bx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Bx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      ie        "\*[doc-arg\n[doc-arg-ptr]]"-alpha" \
.        as doc-str-Bx1 " (currently in alpha test)
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-beta" \
.        as doc-str-Bx1 " (currently in beta test)
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-devel" \
.        as doc-str-Bx1 " (currently under development)
.      el \{\
.        ds doc-str-Bx1 \&\*[doc-arg\n[doc-arg-ptr]]\^\*[doc-Tn-font-size]
.        as doc-str-Bx1 BSD\*[doc-str-Bx]
.
.        if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.          nr doc-arg-ptr +1
.          ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.            ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.              ie d doc-str-Bx-\*[doc-arg\n[doc-arg-ptr]] \
.                as doc-str-Bx1 "\*[doc-str-Bx-\*[doc-arg\n[doc-arg-ptr]]]
.              el \
.                nr doc-arg-ptr -1
.            \}
.            el \
.              nr doc-arg-ptr -1
.          \}
.          el \
.            nr doc-arg-ptr -1
.    \}\}\}\}\}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Bx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.
.  \" recompute space vector for remaining arguments
.  nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.  nr doc-arg-limit \n[doc-arg-ptr]
.  if \n[doc-num-args] \
.    doc-parse-space-vector
.
.  doc-print-recursive
..
.
.
.\" NS Ud user macro (not parsed, not callable)
.\" NS   print "currently under development" (HISTORY section)
.\" NS
.\" NS width register `Ud' defined in doc-common
.
.de Ud
.  nop \&currently under development.
..
.
.
.\" NS At user macro
.\" NS   print AT&T UNIX
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-str-At
.\" NS   doc-str-At1
.\" NS   doc-str-At-XXX
.\" NS
.\" NS width register `At' defined in doc-common
.
.ds doc-str-At-32v \&Version\~32V
.as doc-str-At-32v " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-v1  \&Version\~1
.as doc-str-At-v1  " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-v2  \&Version\~2
.as doc-str-At-v2  " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-v3  \&Version\~3
.as doc-str-At-v3  " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-v4  \&Version\~4
.as doc-str-At-v4  " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-v5  \&Version\~5
.as doc-str-At-v5  " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-v6  \&Version\~6
.as doc-str-At-v6  " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-v7  \&Version\~7
.as doc-str-At-v7  " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.ds doc-str-At-V   \*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V
.as doc-str-At-V   " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.ds doc-str-At-V.1 \*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V.1
.as doc-str-At-V.1 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.ds doc-str-At-V.2 \*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V.2
.as doc-str-At-V.2 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.ds doc-str-At-V.3 \*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V.3
.as doc-str-At-V.3 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.ds doc-str-At-V.4 \*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V.4
.as doc-str-At-V.4 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.
.de At
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.ps]
.  ds doc-str-At \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.  \" default value if no argument
.  ds doc-str-At1 \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name At
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      ie \A\*[doc-arg\n[doc-arg-ptr]] \{\
.        ie d doc-str-At-\*[doc-arg\n[doc-arg-ptr]] \
.          ds doc-str-At1 "\*[doc-str-At-\*[doc-arg\n[doc-arg-ptr]]]
.        el \{\
.          tmc mdoc warning: .At: Unknown AT&T UNIX version
.          tm1 " `\*[doc-arg\n[doc-arg-ptr]]' (#\n[.c])
.          nr doc-arg-ptr -1
.      \}\}
.      el \
.        nr doc-arg-ptr -1
.    \}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-At1]
.  nr doc-type\n[doc-arg-ptr] 2
.  ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.
.  \" recompute space vector for remaining arguments
.  nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.  nr doc-arg-limit \n[doc-arg-ptr]
.  if \n[doc-num-args] \
.    doc-parse-space-vector
.
.  doc-print-recursive
..
.
.
.\" NS Fx user macro
.\" NS   print FreeBSD
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-str-Fx
.\" NS   doc-str-Fx1
.\" NS
.\" NS width register `Fx' defined in doc-common
.
.\" we use the doc-operating-system-FreeBSD-* strings defined in doc-common
.
.de Fx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.ps]
.  ds doc-str-Fx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.  \" default value if no argument
.  ds doc-str-Fx1 \*[doc-Tn-font-size]\%FreeBSD\*[doc-str-Fx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Fx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      ie \A\*[doc-arg\n[doc-arg-ptr]] \{\
.        ie d doc-operating-system-FreeBSD-\*[doc-arg\n[doc-arg-ptr]] \
.          as doc-str-Fx1 \~\*[doc-operating-system-FreeBSD-\*[doc-arg\n[doc-arg-ptr]]]
.        el \{\
.          tmc mdoc warning: .Fx: Unknown FreeBSD version
.          tm1 " `\*[doc-arg\n[doc-arg-ptr]]' (#\n[.c])
.          as doc-str-Fx1 \~\*[doc-arg\n[doc-arg-ptr]]
.      \}\}
.      el \
.        as doc-str-Fx1 \~\*[doc-arg\n[doc-arg-ptr]]
.    \}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Fx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.
.  \" recompute space vector for remaining arguments
.  nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.  nr doc-arg-limit \n[doc-arg-ptr]
.  if \n[doc-num-args] \
.    doc-parse-space-vector
.
.  doc-print-recursive
..
.
.
.\" NS Nx user macro
.\" NS   print NetBSD
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-str-Nx
.\" NS   doc-str-Nx1
.\" NS
.\" NS width register `Nx' defined in doc-common
.
.\" we use the doc-operating-system-NetBSD-* strings defined in doc-common
.
.de Nx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.ps]
.  ds doc-str-Nx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.  \" default value if no argument
.  ds doc-str-Nx1 \*[doc-Tn-font-size]\%N\s[\n[doc-curr-size]u]et
.  as doc-str-Nx1 \*[doc-Tn-font-size]BSD\*[doc-str-Nx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Nx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      ie \A\*[doc-arg\n[doc-arg-ptr]] \{\
.        ie d doc-operating-system-NetBSD-\*[doc-arg\n[doc-arg-ptr]] \
.          as doc-str-Nx1 \~\*[doc-operating-system-NetBSD-\*[doc-arg\n[doc-arg-ptr]]]
.        el \{\
.          tmc mdoc warning: .Nx: Unknown NetBSD version
.          tm1 " `\*[doc-arg\n[doc-arg-ptr]]' (#\n[.c])
.          as doc-str-Nx1 \~\*[doc-arg\n[doc-arg-ptr]]
.      \}\}
.      el \
.        as doc-str-Nx1 \~\*[doc-arg\n[doc-arg-ptr]]
.    \}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Nx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.
.  \" recompute space vector for remaining arguments
.  nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.  nr doc-arg-limit \n[doc-arg-ptr]
.  if \n[doc-num-args] \
.    doc-parse-space-vector
.
.  doc-print-recursive
..
.
.
.\" NS Ox user macro
.\" NS   print OpenBSD
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-str-Ox
.\" NS   doc-str-Ox1
.\" NS
.\" NS width register `Ox' defined in doc-common
.
.de Ox
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.ps]
.  ds doc-str-Ox \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.  \" default value if no argument
.  ds doc-str-Ox1 \*[doc-Tn-font-size]\%OpenBSD\*[doc-str-Ox]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Ox
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \
.      as doc-str-Ox1 \~\*[doc-arg\n[doc-arg-ptr]]
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Ox1]
.  nr doc-type\n[doc-arg-ptr] 2
.  ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.
.  \" recompute space vector for remaining arguments
.  nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.  nr doc-arg-limit \n[doc-arg-ptr]
.  if \n[doc-num-args] \
.    doc-parse-space-vector
.
.  doc-print-recursive
..
.
.
.\" NS Bsx user macro
.\" NS   print BSD/OS
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-str-Bsx
.\" NS   doc-str-Bsx1
.\" NS
.\" NS width register `Bsx' defined in doc-common
.
.de Bsx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.ps]
.  ds doc-str-Bsx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.  \" default value if no argument
.  ds doc-str-Bsx1 \*[doc-Tn-font-size]BSD/OS\*[doc-str-Bsx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Bsx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \
.      as doc-str-Bsx1 \~\*[doc-arg\n[doc-arg-ptr]]
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Bsx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.
.  \" recompute space vector for remaining arguments
.  nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.  nr doc-arg-limit \n[doc-arg-ptr]
.  if \n[doc-num-args] \
.    doc-parse-space-vector
.
.  doc-print-recursive
..
.
.
.\" The Bt macro should go away now
.
.\" NS Bt user macro (not parsed, not callable)
.\" NS   print "is currently in beta test." (HISTORY section)
.\" NS
.\" NS width register `Bt' defined in doc-common
.
.de Bt
.  nop \&is currently in beta test.
..
.
.
.\" NS Px user macro
.\" NS   print POSIX
.
.ds Px \*[doc-Tn-font-size]\%POSIX
.
.
.\" NS Ai user macro
.\" NS   print ANSI
.
.ds Ai \*[doc-Tn-font-size]\%ANSI
.
.
.\" NS St user macro
.\" NS   standards (posix, ansi - formal standard names)
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-reg-St
.\" NS   doc-str-St
.\" NS   doc-str-St1
.\" NS   doc-str-St-XXX
.\" NS
.\" NS width register `St' defined in doc-common
.
.\" ANSI/ISO C
.ds doc-str-St--ansiC-89       \*[Ai] \*[doc-str-St]X\^3.159-1989
.as doc-str-St--ansiC-89       " (\*[Lq]\)\*[Ai]\~C89\*[doc-str-St]\*[Rq])
.als doc-str-St--ansiC doc-str-St--ansiC-89
.ds doc-str-St--isoC           \*[doc-Tn-font-size]ISO/IEC\*[doc-str-St] 9899:1990
.as doc-str-St--isoC           " (\*[Lq]\*[doc-Tn-font-size]ISO\~C\^90\*[doc-str-St]\*[Rq])
.als doc-str-St--isoC-90 doc-str-St--isoC
.ds doc-str-St--isoC-99        \*[doc-Tn-font-size]ISO/IEC\*[doc-str-St] 9899:1999
.as doc-str-St--isoC-99        " (\*[Lq]\*[doc-Tn-font-size]ISO\~C\^99\*[doc-str-St]\*[Rq])
.
.\" POSIX Part 1: System API
.ds doc-str-St--p1003.1        \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1
.as doc-str-St--p1003.1        " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.ds doc-str-St--p1003.1-88     \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1-1988
.as doc-str-St--p1003.1-88     " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.ds doc-str-St--p1003.1-90     \*[doc-Tn-font-size]ISO/IEC\*[doc-str-St] 9945-1:1990
.as doc-str-St--p1003.1-90     " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.als doc-str-St--iso9945-1-90 doc-str-St--p1003.1-90
.ds doc-str-St--p1003.1b-93    \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1b-1993
.as doc-str-St--p1003.1b-93    " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.ds doc-str-St--p1003.1c-95    \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1c-1995
.as doc-str-St--p1003.1c-95    " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.ds doc-str-St--p1003.1i-95    \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1i-1995
.as doc-str-St--p1003.1i-95    " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.ds doc-str-St--p1003.1-96     \*[doc-Tn-font-size]ISO/IEC\*[doc-str-St] 9945-1:1996
.as doc-str-St--p1003.1-96     " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.als doc-str-St--iso9945-1-96 doc-str-St--p1003.1-96
.ds doc-str-St--p1003.1g-2000  \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1g-2000
.as doc-str-St--p1003.1g-2000  " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.ds doc-str-St--p1003.1-2001   \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1-2001
.as doc-str-St--p1003.1-2001   " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.ds doc-str-St--p1003.1-2004   \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.1-2004
.as doc-str-St--p1003.1-2004   " (\*[Lq]\)\*[Px]\*[doc-str-St].1\*[Rq])
.
.\" POSIX Part 2: Shell and Utilities
.ds doc-str-St--p1003.2        \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.2
.as doc-str-St--p1003.2        " (\*[Lq]\)\*[Px]\*[doc-str-St].2\*[Rq])
.ds doc-str-St--p1003.2-92     \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.2-1992
.as doc-str-St--p1003.2-92     " (\*[Lq]\)\*[Px]\*[doc-str-St].2\*[Rq])
.ds doc-str-St--p1003.2a-92    \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 1003.2a-1992
.as doc-str-St--p1003.2a-92    " (\*[Lq]\)\*[Px]\*[doc-str-St].2\*[Rq])
.ds doc-str-St--iso9945-2-93   \*[doc-Tn-font-size]ISO/IEC\*[doc-str-St] 9945-2:1993
.as doc-str-St--iso9945-2-93   " (\*[Lq]\)\*[Px]\*[doc-str-St].2\*[Rq])
.
.\" X/Open
.ds doc-str-St--susv2          Version\~2 of the Single \*[doc-Tn-font-size]UNIX\*[doc-str-St] Specification
.as doc-str-St--susv2          " (\*[Lq]\*[doc-Tn-font-size]SUSv2\*[doc-str-St]\*[Rq])
.ds doc-str-St--svid4          System\~V Interface Definition, Fourth Edition
.as doc-str-St--svid4          " (\*[Lq]\*[doc-Tn-font-size]SVID\*[doc-str-St]\^4\*[Rq])
.ds doc-str-St--xbd5           \*[doc-Tn-font-size]X/Open\*[doc-str-St] System Interface Definitions Issue\~5
.as doc-str-St--xbd5           " (\*[Lq]\*[doc-Tn-font-size]XBD\*[doc-str-St]\^5\*[Rq])
.ds doc-str-St--xcu5           \*[doc-Tn-font-size]X/Open\*[doc-str-St] Commands and Utilities Issue\~5
.as doc-str-St--xcu5           " (\*[Lq]\*[doc-Tn-font-size]XCU\*[doc-str-St]\^5\*[Rq])
.ds doc-str-St--xcurses4.2     \*[doc-Tn-font-size]X/Open\*[doc-str-St] Curses Issue\~4, Version\~2
.as doc-str-St--xcurses4.2     " (\*[Lq]\*[doc-Tn-font-size]XCURSES\*[doc-str-St]\^4.2\*[Rq])
.ds doc-str-St--xns5           \*[doc-Tn-font-size]X/Open\*[doc-str-St] Networking Services Issue\~5
.as doc-str-St--xns5           " (\*[Lq]\*[doc-Tn-font-size]XNS\*[doc-str-St]\^5\*[Rq])
.ds doc-str-St--xns5.2         \*[doc-Tn-font-size]X/Open\*[doc-str-St] Networking Services Issue\~5.2
.as doc-str-St--xns5.2         " (\*[Lq]\*[doc-Tn-font-size]XNS\*[doc-str-St]\^5.2\*[Rq])
.ds doc-str-St--xpg3           \*[doc-Tn-font-size]X/Open\*[doc-str-St] Portability Guide Issue\~3
.as doc-str-St--xpg3           " (\*[Lq]\*[doc-Tn-font-size]XPG\*[doc-str-St]\^3\*[Rq])
.ds doc-str-St--xpg4           \*[doc-Tn-font-size]X/Open\*[doc-str-St] Portability Guide Issue\~4
.as doc-str-St--xpg4           " (\*[Lq]\*[doc-Tn-font-size]XPG\*[doc-str-St]\^4\*[Rq])
.ds doc-str-St--xpg4.2         \*[doc-Tn-font-size]X/Open\*[doc-str-St] Portability Guide Issue\~4, Version\~2
.as doc-str-St--xpg4.2         " (\*[Lq]\*[doc-Tn-font-size]XPG\*[doc-str-St]\^4.2\*[Rq])
.ds doc-str-St--xsh5           \*[doc-Tn-font-size]X/Open\*[doc-str-St] System Interfaces and Headers Issue\~5
.as doc-str-St--xsh5           " (\*[Lq]\*[doc-Tn-font-size]XSH\*[doc-str-St]\^5\*[Rq])
.
.\" Miscellaneous
.ds doc-str-St--ieee754        \*[doc-Tn-font-size]\%IEEE\*[doc-str-St] Std 754-1985
.ds doc-str-St--iso8802-3      \*[doc-Tn-font-size]ISO/IEC\*[doc-str-St] 8802-3:1989
.
.de St
.  if !\n[doc-arg-limit] \{\
.    ie \n[.$] \{\
.      ds doc-macro-name St
.      doc-parse-args \$@
.    \}
.    el \
.      doc-St-usage
.  \}
.
.  if !\n[doc-arg-limit] \
.    return
.
.  nr doc-arg-ptr +1
.  ie (\n[doc-arg-limit] >= \n[doc-arg-ptr]) \{\
.    nr doc-curr-font \n[.f]
.    nr doc-curr-size \n[.ps]
.    ds doc-str-St \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.    ds doc-str-St1
.    ie \A\*[doc-arg\n[doc-arg-ptr]] \{\
.      ie d doc-str-St-\*[doc-arg\n[doc-arg-ptr]] \
.        ds doc-str-St1 "\*[doc-str-St-\*[doc-arg\n[doc-arg-ptr]]]
.      el \{\
.        tmc "mdoc warning: .St: Unknown standard abbreviation
.        tm1 " `\*[doc-arg\n[doc-arg-ptr]]' (#\n[.c])
.        tm1 "              Please refer to the groff_mdoc(7) manpage for a
.        tm1 "              list of available standard abbreviations.
.    \}\}
.    el \
.      doc-St-usage
.
.    \" replacing argument with result
.    ds doc-arg\n[doc-arg-ptr] "\*[doc-str-St1]
.
.    doc-print-recursive
.  \}
.  el \{\
.    doc-St-usage
.    doc-reset-args
.  \}
..
.
.
.\" NS doc-St-usage macro
.
.de doc-St-usage
.  tm1 "Usage: .St standard (#\n[.c])
.  tm1 "       Please refer to the groff_mdoc(7) manpage for a list of
.  tm1 "       available standard abbreviations.
..
.
.
.\" NS Lb user macro
.\" NS   formal library names for LIBRARY sections
.\" NS
.\" NS modifies:
.\" NS   doc-arg-ptr
.\" NS   doc-curr-font
.\" NS   doc-curr-size
.\" NS   doc-macro-name
.\" NS
.\" NS local variable:
.\" NS   doc-reg-Lb
.\" NS   doc-str-Lb
.\" NS   doc-str-Lb1
.\" NS   doc-str-Lb-XXX
.\" NS
.\" NS width register `Lb' defined in doc-common
.
.ds doc-str-Lb-libarm      ARM Architecture Library (libarm, \-larm)
.ds doc-str-Lb-libarm32    ARM32 Architecture Library (libarm32, \-larm32)
.ds doc-str-Lb-libc        Standard C\~Library (libc, \-lc)
.ds doc-str-Lb-libcdk      Curses Development Kit Library (libcdk, \-lcdk)
.ds doc-str-Lb-libcompat   Compatibility Library (libcompat, \-lcompat)
.ds doc-str-Lb-libcrypt    Crypt Library (libcrypt, \-lcrypt)
.ds doc-str-Lb-libcurses   Curses Library (libcurses, \-lcurses)
.ds doc-str-Lb-libedit     Command Line Editor Library (libedit, \-ledit)
.ds doc-str-Lb-libevent    Event Notification Library (libevent, \-levent)
.ds doc-str-Lb-libform     Curses Form Library (libform, \-lform)
.ds doc-str-Lb-libi386     i386 Architecture Library (libi386, \-li386)
.ds doc-str-Lb-libintl     Internationalized Message Handling Library (libintl, \-lintl)
.ds doc-str-Lb-libipsec    IPsec Policy Control Library (libipsec, \-lipsec)
.ds doc-str-Lb-libkvm      Kernel Data Access Library (libkvm, \-lkvm)
.ds doc-str-Lb-libm        Math Library (libm, \-lm)
.ds doc-str-Lb-libm68k     m68k Architecture Library (libm68k, \-lm68k)
.ds doc-str-Lb-libmagic    Magic Number Recognition Library (libmagic, \-lmagic)
.ds doc-str-Lb-libmenu     Curses Menu Library (libmenu, \-lmenu)
.ds doc-str-Lb-libossaudio OSS Audio Emulation Library (libossaudio, \-lossaudio)
.ds doc-str-Lb-libpam      Pluggable Authentication Module Library (libpam, \-lpam)
.ds doc-str-Lb-libpcap     Packet Capture Library (libpcap, \-lpcap)
.ds doc-str-Lb-libpci      PCI Bus Access Library (libpci, \-lpci)
.ds doc-str-Lb-libpmc      Performance Counters Library (libpmc, \-lpmc)
.ds doc-str-Lb-libposix    \*[Px] \*[doc-str-Lb]Compatibility Library (libposix, \-lposix)
.ds doc-str-Lb-libpthread  \*[Px] \*[doc-str-Lb]Threads Library (libpthread, \-lpthread)
.ds doc-str-Lb-libresolv   DNS Resolver Library (libresolv, \-lresolv)
.ds doc-str-Lb-librt       \*[Px] \*[doc-str-Lb]Real-time Library (librt, \-lrt)
.ds doc-str-Lb-libtermcap  Termcap Access Library (libtermcap, \-ltermcap)
.ds doc-str-Lb-libusbhid   USB Human Interface Devices Library (libusbhid, \-lusbhid)
.ds doc-str-Lb-libutil     System Utilities Library (libutil, \-lutil)
.ds doc-str-Lb-libx86_64   x86_64 Architecture Library (libx86_64, \-lx86_64)
.ds doc-str-Lb-libz        Compression Library (libz, \-lz)
.
.de Lb
.  if !\n[doc-arg-limit] \{\
.    ie \n[.$] \{\
.      ds doc-macro-name Lb
.      doc-parse-args \$@
.    \}
.    el \
.      tm Usage: .Lb library_name ... (#\n[.c])
.  \}
.
.  if !\n[doc-arg-limit] \
.    return
.
.  nr doc-arg-ptr +1
.  ie (\n[doc-arg-limit] >= \n[doc-arg-ptr]) \{\
.    nr doc-curr-font \n[.f]
.    nr doc-curr-size \n[.ps]
.    ds doc-str-Lb \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.
.    ie d doc-str-Lb-\*[doc-arg\n[doc-arg-ptr]] \
.      ds doc-str-Lb1 "\*[doc-str-Lb-\*[doc-arg\n[doc-arg-ptr]]]
.    el \{\
.      tmc "mdoc warning: .Lb: no description for library
.      tm1 " `\*[doc-arg\n[doc-arg-ptr]]' available (#\n[.c])
.      ds doc-str-Lb1 library \*[Lq]\*[doc-arg\n[doc-arg-ptr]]\*[Rq]
.    \}
.
.    \" replacing argument with result
.    ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Lb1]
.
.    if \n[doc-in-library-section] \
.      br
.    doc-print-recursive
.    if \n[doc-in-library-section] \
.      br
.  \}
.  el \{\
.    tm Usage: .Lb library_name ... (#\n[.c])
.    doc-reset-args
.  \}
..
.
.
.ec
.
.\" EOF
