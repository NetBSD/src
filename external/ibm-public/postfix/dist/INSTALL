PPoossttffiixx IInnssttaallllaattiioonn FFrroomm SSoouurrccee CCooddee

-------------------------------------------------------------------------------

11 -- PPuurrppoossee ooff tthhiiss ddooccuummeenntt

If you are using a pre-compiled version of Postfix, you should start with
BASIC_CONFIGURATION_README and the general documentation referenced by it.
INSTALL is only a bootstrap document to get Postfix up and running from scratch
with the minimal number of steps; it should not be considered part of the
general documentation.

This document describes how to build, install and configure a Postfix system so
that it can do one of the following:

  * Send mail only, without changing an existing Sendmail installation.
  * Send and receive mail via a virtual host interface, still without any
    change to an existing Sendmail installation.
  * Run Postfix instead of Sendmail.

Topics covered in this document:

 1. Purpose of this document
 2. Typographical conventions
 3. Documentation
 4. Building on a supported system
 5. Porting Postfix to an unsupported system
 6. Installing the software after successful compilation
 7. Configuring Postfix to send mail only
 8. Configuring Postfix to send and receive mail via virtual interface
 9. Running Postfix instead of Sendmail
10. Mandatory configuration file edits
11. To chroot or not to chroot
12. Care and feeding of the Postfix system

22 -- TTyyppooggrraapphhiiccaall ccoonnvveennttiioonnss

In the instructions below, a command written as

    # command

should be executed as the superuser.

A command written as

    $ command

should be executed as an unprivileged user.

33 -- DDooccuummeennttaattiioonn

Documentation is available as README files (start with the file README_FILES/
AAAREADME), as HTML web pages (point your browser to "html/index.html") and as
UNIX-style manual pages.

You should view the README files with a pager such as more(1) or less(1),
because the files use backspace characters in order to produce bboolldd font. To
print a README file without backspace characters, use the col(1) command. For
example:

    $ col -bx <file | lpr

In order to view the manual pages before installing Postfix, point your MANPATH
environment variable to the "man" subdirectory; be sure to use an absolute
path.

    $ export MANPATH; MANPATH="`pwd`/man:$MANPATH"
    $ setenv MANPATH "`pwd`/man:$MANPATH"

Of particular interest is the postconf(5) manual page that lists all the 500+
configuration parameters. The HTML version of this text makes it easy to
navigate around.

All Postfix source files have their own built-in manual page. Tools to extract
those embedded manual pages are available in the mantools directory.

44 -- BBuuiillddiinngg oonn aa ssuuppppoorrtteedd ssyysstteemm

At some point in time, a version of Postfix was supported on:

    AIX 3.2.5, 4.1.x, 4.2.0, 4.3.x, 5.2
    BSD/OS 2.x, 3.x, 4.x
    FreeBSD 2.x .. 9.x
    HP-UX 9.x, 10.x, 11.x
    IRIX 5.x, 6.x
    Linux Debian 1.3.1 and later
    Linux RedHat 3.x (January 2004) and later
    Linux Slackware 3.x and later
    Linux SuSE 5.x and later
    Linux Ubuntu 4.10 and later
    Mac OS X
    NEXTSTEP 3.x
    NetBSD 1.x and later
    OPENSTEP 4.x
    OSF1.V3 - OSF1.V5 (Digital UNIX)
    Reliant UNIX 5.x
    SunOS 4.1.4 (March 2007)
    SunOS 5.4 - 5.10 (Solaris 2.4..10)
    Ultrix 4.x (well, that was long ago)

or something closely resemblant.

44..11 -- GGeettttiinngg ssttaarrtteedd

On Solaris, the "make" command and other utilities for software development are
in /usr/ccs/bin, so you MUST have /usr/ccs/bin in your command search path. If
these files do not exist, install the development packages first. See the
Solaris FAQ item "Which packages do I need to install to support a C
compiler?".

If you need to build Postfix for multiple architectures, use the "lndir"
command to build a shadow tree with symbolic links to the source files. "lndir"
is part of X11R6.

If at any time in the build process you get messages like: "make: don't know
how to ..." you should be able to recover by running the following command from
the Postfix top-level directory:

    $ make -f Makefile.init makefiles

If you copied the Postfix source code after building it on another machine, it
is a good idea to cd into the top-level directory and first do this:

    $ make tidy

This will get rid of any system dependencies left over from compiling the
software elsewhere.

44..22 -- WWhhaatt ccoommppiilleerr ttoo uussee

To build with GCC, or with the native compiler if people told me that is better
for your system, just cd into the top-level Postfix directory of the source
tree and type:

    $ make

To build with a non-default compiler, you need to specify the name of the
compiler. Here are a few examples:

    $ make makefiles CC=/opt/SUNWspro/bin/cc        (Solaris)
    $ make

    $ make makefiles CC="/opt/ansic/bin/cc -Ae"     (HP-UX)
    $ make

    $ make makefiles CC="purify cc"
    $ make

and so on. In some cases, optimization is turned off automatically.

44..33 -- BBuuiillddiinngg wwiitthh ooppttiioonnaall eexxtteennssiioonnss

By default, Postfix builds as a mail system with relatively few bells and
whistles. Support for third-party databases etc. must be configured when
Postfix is compiled. The following documents describe how to build Postfix with
support for extensions:

     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
    |PPoossttffiixx eexxtteennssiioonn                 |DDooccuummeenntt     |AAvvaaiillaabbiilliittyy|
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |Berkeley DB database              |DB_README    |Postfix 1.0 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |LDAP database                     |LDAP_README  |Postfix 1.0 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |MySQL database                    |MYSQL_README |Postfix 1.0 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |Perl compatible regular expression|PCRE_README  |Postfix 1.0 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |PostgreSQL database               |PGSQL_README |Postfix 2.0 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |SASL authentication               |SASL_README  |Postfix 1.0 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |SQLite database                   |SQLITE_README|Postfix 2.8 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |
    |STARTTLS session encryption       |TLS_README   |Postfix 2.2 |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ |

Note: IP version 6 support is compiled into Postfix on operating systems that
have IPv6 support. See the IPV6_README file for details.

44..44 -- OOvveerrrriiddiinngg bbuuiilltt--iinn ppaarraammeetteerr ddeeffaauulltt sseettttiinnggss

All Postfix configuration parameters can be changed by editing a Postfix
configuration file, except for one: the parameter that specifies the location
of Postfix configuration files. In order to build Postfix with a configuration
directory other than /etc/postfix, use:

    $ make makefiles CCARGS='-DDEF_CONFIG_DIR=\"/some/where\"'
    $ make

IMPORTANT: Be sure to get the quotes right. These details matter a lot.

Parameters whose defaults can be specified in this way are:

     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
    |MMaaccrroo nnaammee       |ddeeffaauulltt vvaalluuee ffoorr|ttyyppiiccaall ddeeffaauulltt     |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_COMMAND_DIR  |command_directory|/usr/sbin           |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_CONFIG_DIR   |config_directory |/etc/postfix        |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_DAEMON_DIR   |daemon_directory |/usr/libexec/postfix|
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_DATA_DIR     |data_directory   |/var/lib/postfix    |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_MAILQ_PATH   |mailq_path       |/usr/bin/mailq      |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_HTML_DIR     |html_directory   |no                  |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_MANPAGE_DIR  |manpage_directory|/usr/local/man      |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_NEWALIAS_PATH|newaliases_path  |/usr/bin/newaliases |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_QUEUE_DIR    |queue_directory  |/var/spool/postfix  |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_README_DIR   |readme_directory |no                  |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
    |DEF_SENDMAIL_PATH|sendmail_path    |/usr/sbin/sendmail  |
    |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |

Note: the data_directory parameter (for caches and pseudo-random numbers) was
introduced with Postfix version 2.5.

44..55 -- OOvveerrrriiddiinngg ootthheerr ccoommppiillee--ttiimmee ffeeaattuurreess

The general method to override Postfix compile-time features is as follows:

    $ make makefiles name=value name=value...
    $ make

The following is an extensive list of names and values.

 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
|NNaammee//VVaalluuee                    |DDeessccrriippttiioonn                                   |
|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
|AUXLIBS="object_library..."   |Specifies one or more non-default object      |
|                              |libraries.                                    |
|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
|CC=compiler_command           |Specifies a non-default compiler. On many     |
|                              |systems, the default is gcc.                  |
|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
|                              |Specifies non-default compiler arguments, for |
|CCARGS="compiler_arguments..."|example, a non-default include directory. The |
|                              |following directives turn off Postfix features|
|                              |at compile time:                              |
|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Do not build with Berkeley DB support. By     |
||-DNO_DB                      |default, Berkeley DB support is compiled in on|
||                             |platforms that are known to support this      |
||                             |feature.                                      |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Do not build with Solaris /dev/poll support.  |
||-DNO_DEVPOLL                 |By default, /dev/poll support is compiled in  |
||                             |on Solaris versions that are known to support |
||                             |this feature.                                 |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Do not build with Linux EPOLL support. By     |
||-DNO_EPOLL                   |default, EPOLL support is compiled in on      |
||                             |platforms that are known to support this      |
||                             |feature.                                      |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Do not build with IPv6 support. By default,   |
||                             |IPv6 support is compiled in on platforms that |
||-DNO_IPV6                    |are known to have IPv6 support. Note: this    |
||                             |directive is for debugging and testing only.  |
||                             |It is not guaranteed to work on all platforms.|
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Do not build with FreeBSD / NetBSD / OpenBSD /|
||-DNO_KQUEUE                  |MacOSX KQUEUE support. By default, KQUEUE     |
||                             |support is compiled in on platforms that are  |
||                             |known to support it.                          |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Do not build with NIS or NISPLUS support. NIS |
||-DNO_NIS                     |is not available on some recent Linux or      |
||                             |Solaris distributions.                        |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Do not build with PCRE support. By default,   |
||-DNO_PCRE                    |PCRE support is compiled in when the pcre-    |
||                             |config utility is installed.                  |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Disable support for POSIX getpwnam_r/         |
||-DNO_POSIX_GETPW_R           |getpwuid_r. By default Postfix uses these     |
||                             |where they are known to be available.         |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
||                             |Use setjmp()/longjmp() instead of sigsetjmp()/|
||-DNO_SIGSETJMP               |siglongjmp(). By default, Postfix uses        |
||                             |sigsetjmp()/siglongjmp() when they are known  |
||                             |to be available.                              |
|_|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
|                              |Specifies a non-default compiler debugging    |
|DEBUG=debug_level             |level. The default is -g. Specify DEBUG= to   |
|                              |turn off debugging.                           |
|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
|                              |Specifies a non-default optimization level.   |
|OPT=optimization_level        |The default is -O. Specify OPT= to turn off   |
|                              |optimization.                                 |
|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |
|                              |Specifies non-default gcc compiler warning    |
|WARN="warning_flags..."       |options for use when "make" is invoked in a   |
|                              |source subdirectory only.                     |
|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |

44..66 -- SSuuppppoorrtt ffoorr tthhoouussaannddss ooff pprroocceesssseess

The number of connections that Postfix can manage simultaneously is limited by
the number of processes that it can run. This number in turn is limited by the
number of files and sockets that a single process can open. For example, the
Postfix queue manager has a separate connection to each delivery process, and
the anvil(8) server has one connection per smtpd(8) process.

Postfix version 2.4 and later have no built-in limits on the number of open
files or sockets, when compiled on systems that support one of the following:

  * BSD kqueue(2) (FreeBSD 4.1, NetBSD 2.0, OpenBSD 2.9),
  * Solaris 8 /dev/poll,
  * Linux 2.6 epoll(4).

With other Postfix versions or operating systems, the number of file
descriptors per process is limited by the value of the FD_SETSIZE macro. If you
expect to run more than 1000 mail delivery processes, you may need to override
the definition of the FD_SETSIZE macro to make select() work correctly:

    $ make makefiles CCARGS=-DFD_SETSIZE=2048

Warning: the above has no effect on some Linux versions. Apparently, on these
systems the FD_SETSIZE value can be changed only by using undocumented
interfaces. Currently, that means including <bits/types.h> directly (which is
not allowed) and overriding the __FD_SETSIZE macro. Beware, undocumented
interfaces can change at any time and without warning.

But wait, there is more: none of this will work unless the operating system is
configured to handle thousands of connections. See the TUNING_README guide for
examples of how to increase the number of open sockets or files.

44..77 -- CCoommppiilliinngg PPoossttffiixx,, aatt llaasstt

If the command

    $ make

is successful, then you can proceed to install Postfix (section 6).

If the command produces compiler error messages, it may be time to search the
web or to ask the postfix-users@postfix.org mailing list, but be sure to search
the mailing list archives first. Some mailing list archives are linked from
http://www.postfix.org/.

55 -- PPoorrttiinngg PPoossttffiixx ttoo aann uunnssuuppppoorrtteedd ssyysstteemm

Each system type that Postfix knows is identified by a unique name. Examples:
SUNOS5, FREEBSD4, and so on. When porting Postfix to a new system, the first
step is to choose a SYSTEMTYPE name for the new system. You must use a name
that includes at least the major version of the operating system (such as
SUNOS4 or LINUX2), so that different releases of the same system can be
supported without confusion.

Add a case statement to the "makedefs" shell script in the source code top-
level directory that recognizes the new system reliably, and that emits the
right system-specific information. Be sure to make the code robust against user
PATH settings; if the system offers multiple UNIX flavors (e.g. BSD and SYSV)
be sure to build for the native flavor, instead of the emulated one.

Add an "#ifdef SYSTEMTYPE" section to the central util/sys_defs.h include file.
You may have to invent new feature macro names. Please choose sensible feature
macro names such as HAS_DBM or FIONREAD_IN_SYS_FILIO_H.

I strongly recommend against using "#ifdef SYSTEMTYPE" in individual source
files. While this may look like the quickest solution, it will create a mess
when newer versions of the same SYSTEMTYPE need to be supported. You're likely
to end up placing "#ifdef" sections all over the source code again.

66 -- IInnssttaalllliinngg tthhee ssooffttwwaarree aafftteerr ssuucccceessssffuull ccoommppiillaattiioonn

This text describes how to install Postfix from source code. See the
PACKAGE_README file if you are building a package for distribution to other
systems.

66..11 -- SSaavvee eexxiissttiinngg SSeennddmmaaiill bbiinnaarriieess

IMPORTANT: if you are REPLACING an existing Sendmail installation with Postfix,
you may need to keep the old sendmail program running for some time in order to
flush the mail queue.

  * Some systems implement a mail switch mechanism where different MTAs
    (Postfix, Sendmail, etc.) can be installed at the same time, while only one
    of them is actually being used. Examples of such switching mechanisms are
    the FreeBSD mailwrapper(8) or the Linux mail switch. In this case you
    should try to "flip" the switch to "Postfix" before installing Postfix.

  * If your system has no mail switch mechanism, execute the following commands
    (your sendmail, newaliases and mailq programs may be in a different place):

    # mv /usr/sbin/sendmail /usr/sbin/sendmail.OFF
    # mv /usr/bin/newaliases /usr/bin/newaliases.OFF
    # mv /usr/bin/mailq /usr/bin/mailq.OFF
    # chmod 755 /usr/sbin/sendmail.OFF /usr/bin/newaliases.OFF \
        /usr/bin/mailq.OFF

66..22 -- CCrreeaattee aaccccoouunntt aanndd ggrroouuppss

Before you install Postfix for the first time you need to create an account and
a group:

  * Create a user account "postfix" with a user id and group id that are not
    used by any other user account. Preferably, this is an account that no-one
    can log into. The account does not need an executable login shell, and
    needs no existing home directory. My password and group file entries look
    like this:

        /etc/passwd:
            postfix:*:12345:12345:postfix:/no/where:/no/shell

        /etc/group:
            postfix:*:12345:

    Note: there should be no whitespace before "postfix:".

  * Create a group "postdrop" with a group id that is not used by any other
    user account. Not even by the postfix user account. My group file entry
    looks like:

        /etc/group:
            postdrop:*:54321:

    Note: there should be no whitespace before "postdrop:".

66..33 -- IInnssttaallll PPoossttffiixx

To install or upgrade Postfix from compiled source code, run one of the
following commands as the super-user:

    # make install       (interactive version, first time install)

    # make upgrade       (non-interactive version, for upgrades)

  * The interactive version ("make install") asks for pathnames for Postfix
    data and program files, and stores your preferences in the main.cf file. IIff
    yyoouu ddoonn''tt wwaanntt PPoossttffiixx ttoo oovveerrwwrriittee nnoonn--PPoossttffiixx ""sseennddmmaaiill"",, ""mmaaiillqq"" aanndd
    ""nneewwaalliiaasseess"" ffiilleess,, ssppeecciiffyy ppaatthhnnaammeess tthhaatt eenndd iinn ""..ppoossttffiixx"".

  * The non-interactive version ("make upgrade") needs the /etc/postfix/main.cf
    file from a previous installation. If the file does not exist, use
    interactive installation ("make install") instead.

66..44 -- CCoonnffiigguurree PPoossttffiixx

Proceed to the section on how you wish to run Postfix on your particular
machine:

  * Send mail only, without changing an existing Sendmail installation (section
    7).

  * Send and receive mail via a virtual host interface, still without any
    change to an existing Sendmail installation (section 8).

  * Run Postfix instead of Sendmail (section 9).

77 -- CCoonnffiigguurriinngg PPoossttffiixx ttoo sseenndd mmaaiill oonnllyy

If you are going to use Postfix to send mail only, there is no need to change
your existing sendmail setup. Instead, set up your mail user agent so that it
calls the Postfix sendmail program directly.

Follow the instructions in the "Mandatory configuration file edits" in section
10, and review the "To chroot or not to chroot" text in section 11.

You MUST comment out the "smtp inet" entry in /etc/postfix/master.cf, in order
to avoid conflicts with the real sendmail. Put a "#" character in front of the
line that defines the smtpd service:

    /etc/postfix/master.cf:
        #smtp      inet  n       -       n       -       -       smtpd

Start the Postfix system:

    # postfix start

or, if you feel nostalgic, use the Postfix sendmail command:

    # sendmail -bd -qwhatever

and watch your maillog file for any error messages. The pathname is /var/log/
maillog, /var/log/mail, /var/log/syslog, or something else. Typically, the
pathname is defined in the /etc/syslog.conf file.

    $ egrep '(reject|warning|error|fatal|panic):' /some/log/file

Note: the most important error message is logged first. Later messages are not
as useful.

In order to inspect the mail queue, use one of the following commands:

    $ mailq

    $ sendmail -bp

    $ postqueue -p

See also the "Care and feeding" section 12 below.

88 -- CCoonnffiigguurriinngg PPoossttffiixx ttoo sseenndd aanndd rreecceeiivvee mmaaiill vviiaa vviirrttuuaall iinntteerrffaaccee

Alternatively, you can use the Postfix system to send AND receive mail while
leaving your Sendmail setup intact, by running Postfix on a virtual interface
address. Simply configure your mail user agent to directly invoke the Postfix
sendmail program.

To create a virtual network interface address, study your system ifconfig
manual page. The command syntax could be any of:

    # iiffccoonnffiigg llee00::11 <<aaddddrreessss>> nneettmmaasskk <<mmaasskk>> uupp
    # iiffccoonnffiigg eenn00 aalliiaass <<aaddddrreessss>> nneettmmaasskk 225555..225555..225555..225555

In the /etc/postfix/main.cf file, I would specify

    /etc/postfix/main.cf:
        myhostname = virtual.host.tld
        inet_interfaces = $myhostname
        mydestination = $myhostname

Follow the instructions in the "Mandatory configuration file edits" in section
10, and review the "To chroot or not to chroot" text in section 11.

Start the Postfix system:

    # postfix start

or, if you feel nostalgic, use the Postfix sendmail command:

    # sendmail -bd -qwhatever

and watch your maillog file for any error messages. The pathname is /var/log/
maillog, /var/log/mail, /var/log/syslog, or something else. Typically, the
pathname is defined in the /etc/syslog.conf file.

    $ egrep '(reject|warning|error|fatal|panic):' /some/log/file

Note: the most important error message is logged first. Later messages are not
as useful.

In order to inspect the mail queue, use one of the following commands:

    $ mailq

    $ sendmail -bp

    $ postqueue -p

See also the "Care and feeding" section 12 below.

99 -- RRuunnnniinngg PPoossttffiixx iinnsstteeaadd ooff SSeennddmmaaiill

Prior to installing Postfix you should save any existing sendmail program files
as described in section 6. Be sure to keep the old sendmail running for at
least a couple days to flush any unsent mail. To do so, stop the sendmail
daemon and restart it as:

    # /usr/sbin/sendmail.OFF -q

Note: this is old sendmail syntax. Newer versions use separate processes for
mail submission and for running the queue.

After you have visited the "Mandatory configuration file edits" section below,
you can start the Postfix system with:

    # postfix start

or, if you feel nostalgic, use the Postfix sendmail command:

    # sendmail -bd -qwhatever

and watch your maillog file for any error messages. The pathname is /var/log/
maillog, /var/log/mail, /var/log/syslog, or something else. Typically, the
pathname is defined in the /etc/syslog.conf file.

    $ egrep '(reject|warning|error|fatal|panic):' /some/log/file

Note: the most important error message is logged first. Later messages are not
as useful.

In order to inspect the mail queue, use one of the following commands:

    $ mailq

    $ sendmail -bp

    $ postqueue -p

See also the "Care and feeding" section 12 below.

1100 -- MMaannddaattoorryy ccoonnffiigguurraattiioonn ffiillee eeddiittss

Note: the material covered in this section is covered in more detail in the
BASIC_CONFIGURATION_README document. The information presented below is
targeted at experienced system administrators.

1100..11 -- PPoossttffiixx ccoonnffiigguurraattiioonn ffiilleess

By default, Postfix configuration files are in /etc/postfix. The two most
important files are main.cf and master.cf; these files must be owned by root.
Giving someone else write permission to main.cf or master.cf (or to their
parent directories) means giving root privileges to that person.

In /etc/postfix/main.cf, you will have to set up a minimal number of
configuration parameters. Postfix configuration parameters resemble shell
variables, with two important differences: the first one is that Postfix does
not know about quotes like the UNIX shell does.

You specify a configuration parameter as:

    /etc/postfix/main.cf:
        parameter = value

and you use it by putting a "$" character in front of its name:

    /etc/postfix/main.cf:
        other_parameter = $parameter

You can use $parameter before it is given a value (that is the second main
difference with UNIX shell variables). The Postfix configuration language uses
lazy evaluation, and does not look at a parameter value until it is needed at
runtime.

Whenever you make a change to the main.cf or master.cf file, execute the
following command in order to refresh a running mail system:

    # postfix reload

1100..22 -- DDeeffaauulltt ddoommaaiinn ffoorr uunnqquuaalliiffiieedd aaddddrreesssseess

First of all, you must specify what domain will be appended to an unqualified
address (i.e. an address without @domain.tld). The "myorigin" parameter
defaults to the local hostname, but that is probably OK only for very small
sites.

Some examples (use only one):

    /etc/postfix/main.cf:
        myorigin = $myhostname    (send mail as "user@$myhostname")
        myorigin = $mydomain      (send mail as "user@$mydomain")

1100..33 -- WWhhaatt ddoommaaiinnss ttoo rreecceeiivvee llooccaallllyy

Next you need to specify what mail addresses Postfix should deliver locally.

Some examples (use only one):

    /etc/postfix/main.cf:
        mydestination = $myhostname, localhost.$mydomain, localhost
        mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain
        mydestination = $myhostname

The first example is appropriate for a workstation, the second is appropriate
for the mailserver for an entire domain. The third example should be used when
running on a virtual host interface.

1100..44 -- PPrrooxxyy//NNAATT iinntteerrffaaccee aaddddrreesssseess

The proxy_interfaces parameter specifies all network addresses that Postfix
receives mail on by way of a proxy or network address translation unit. You may
specify symbolic hostnames instead of network addresses.

IMPORTANT: You must specify your proxy/NAT external addresses when your system
is a backup MX host for other domains, otherwise mail delivery loops will
happen when the primary MX host is down.

Example: host behind NAT box running a backup MX host.

    /etc/postfix/main.cf:
        proxy_interfaces = 1.2.3.4 (the proxy/NAT external network address)

1100..55 -- WWhhaatt llooccaall cclliieennttss ttoo rreellaayy mmaaiill ffrroomm

If your machine is on an open network then you must specify what client IP
addresses are authorized to relay their mail through your machine into the
Internet. The default setting includes all subnetworks that the machine is
attached to. This may give relay permission to too many clients. My own
settings are:

    /etc/postfix/main.cf:
        mynetworks = 168.100.189.0/28, 127.0.0.0/8

1100..66 -- WWhhaatt rreellaayy ddeessttiinnaattiioonnss ttoo aacccceepptt ffrroomm ssttrraannggeerrss

If your machine is on an open network then you must also specify whether
Postfix will forward mail from strangers. The default setting will forward mail
to all domains (and subdomains of) what is listed in $mydestination. This may
give relay permission for too many destinations. Recommended settings (use only
one):

    /etc/postfix/main.cf:
        relay_domains =            (do not forward mail from strangers)
        relay_domains = $mydomain  (my domain and subdomains)
        relay_domains = $mydomain, other.domain.tld, ...

1100..77 -- OOppttiioonnaall:: ccoonnffiigguurree aa ssmmaarrtt hhoosstt ffoorr rreemmoottee ddeelliivveerryy

If you're behind a firewall, you should set up a relayhost. If you can, specify
the organizational domain name so that Postfix can use DNS lookups, and so that
it can fall back to a secondary MX host when the primary MX host is down.
Otherwise just specify a hard-coded hostname.

Some examples (use only one):

    /etc/postfix/main.cf:
        relayhost = $mydomain
        relayhost = [mail.$mydomain]

The form enclosed with [] eliminates DNS MX lookups.

By default, the SMTP client will do DNS lookups even when you specify a relay
host. If your machine has no access to a DNS server, turn off SMTP client DNS
lookups like this:

    /etc/postfix/main.cf:
        disable_dns_lookups = yes

The STANDARD_CONFIGURATION_README file has more hints and tips for firewalled
and/or dial-up networks.

1100..88 -- CCrreeaattee tthhee aalliiaasseess ddaattaabbaassee

Postfix uses a Sendmail-compatible aliases(5) table to redirect mail for local
(8) recipients. Typically, this information is kept in two files: in a text
file /etc/aliases and in an indexed file /etc/aliases.db. The command "postconf
alias_maps" will tell you the exact location of the text file.

First, be sure to update the text file with aliases for root, postmaster and
"postfix" that forward mail to a real person. Postfix has a sample aliases file
/etc/postfix/aliases that you can adapt to local conditions.

    /etc/aliases:
        root: you
        postmaster: root
        postfix: root
        bin: root
        etcetera...

Note: there should be no whitespace before the ":".

Finally, build the indexed aliases file with one of the following commands:

    # newaliases
    # sendmail -bi

1111 -- TToo cchhrroooott oorr nnoott ttoo cchhrroooott

Postfix daemon processes can be configured (via master.cf) to run in a chroot
jail. The processes run at a fixed low privilege and with access only to the
Postfix queue directories (/var/spool/postfix). This provides a significant
barrier against intrusion. The barrier is not impenetrable, but every little
bit helps.

With the exception of Postfix daemons that deliver mail locally and/or that
execute non-Postfix commands, every Postfix daemon can run chrooted.

Sites with high security requirements should consider to chroot all daemons
that talk to the network: the smtp(8) and smtpd(8) processes, and perhaps also
the lmtp(8) client. The author's own porcupine.org mail server runs all daemons
chrooted that can be chrooted.

The default /etc/postfix/master.cf file specifies that no Postfix daemon runs
chrooted. In order to enable chroot operation, edit the file /etc/postfix/
master.cf. Instructions are in the file.

Note that a chrooted daemon resolves all filenames relative to the Postfix
queue directory (/var/spool/postfix). For successful use of a chroot jail, most
UNIX systems require you to bring in some files or device nodes. The examples/
chroot-setup directory in the source code distribution has a collection of
scripts that help you set up Postfix chroot environments on different operating
systems.

Additionally, you almost certainly need to configure syslogd so that it listens
on a socket inside the Postfix queue directory. Examples for specific systems:

FreeBSD:

    # mkdir -p /var/spool/postfix/var/run
    # syslogd -l /var/spool/postfix/var/run/log

Linux, OpenBSD:

    # mkdir -p /var/spool/postfix/dev
    # syslogd -a /var/spool/postfix/dev/log

1122 -- CCaarree aanndd ffeeeeddiinngg ooff tthhee PPoossttffiixx ssyysstteemm

Postfix daemon processes run in the background, and log problems and normal
activity to the syslog daemon. The names of logfiles are specified in /etc/
syslog.conf. At the very least you need something like:

    /etc/syslog.conf:
        mail.err                                    /dev/console
        mail.debug                                  /var/log/maillog

IMPORTANT: the syslogd will not create files. You must create them before
(re)starting syslogd.

IMPORTANT: on Linux you need to put a "-" character before the pathname, e.g.,
-/var/log/maillog, otherwise the syslogd will use more system resources than
Postfix does.

Hopefully, the number of problems will be small, but it is a good idea to run
every night before the syslog files are rotated:

    # postfix check
    # egrep '(reject|warning|error|fatal|panic):' /some/log/file

  * The first line (postfix check) causes Postfix to report file permission/
    ownership discrepancies.

  * The second line looks for problem reports from the mail software, and
    reports how effective the relay and junk mail access blocks are. This may
    produce a lot of output. You will want to apply some postprocessing to
    eliminate uninteresting information.

The DEBUG_README document describes the meaning of the "warning" etc. labels in
Postfix logging.

