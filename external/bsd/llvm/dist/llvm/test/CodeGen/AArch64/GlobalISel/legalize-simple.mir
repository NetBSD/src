# RUN: llc -O0 -run-pass=legalizer -global-isel %s -o - 2>&1 | FileCheck %s

--- |
  target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
  target triple = "aarch64--"
  define void @test_simple() {
  entry:
    ret void
  next:
    ret void
  }
...

---
name:            test_simple
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
  - { id: 3, class: _ }
  - { id: 4, class: _ }
  - { id: 5, class: _ }
  - { id: 6, class: _ }
  - { id: 7, class: _ }
  - { id: 8, class: _ }
  - { id: 9, class: _ }
  - { id: 10, class: _ }
  - { id: 11, class: _ }
  - { id: 12, class: _ }
  - { id: 13, class: _ }
  - { id: 14, class: _ }
  - { id: 15, class: _ }
  - { id: 16, class: _ }
  - { id: 17, class: _ }
  - { id: 18, class: _ }
  - { id: 19, class: _ }
  - { id: 20, class: _ }
  - { id: 21, class: _ }
  - { id: 22, class: _ }
  - { id: 23, class: _ }
  - { id: 24, class: _ }
  - { id: 25, class: _ }
  - { id: 26, class: _ }
  - { id: 27, class: _ }
  - { id: 28, class: _ }
  - { id: 29, class: _ }
  - { id: 30, class: _ }
  - { id: 31, class: _ }
  - { id: 32, class: _ }
  - { id: 33, class: _ }
  - { id: 34, class: _ }
body: |
  bb.0.entry:
    liveins: %x0, %x1, %x2, %x3
    %0(s64) = COPY %x0

    ; CHECK-LABEL: name: test_simple
    ; CHECK: %1(p0) = G_INTTOPTR %0
    ; CHECK: %2(s64) = G_PTRTOINT %1
    %1(p0) = G_INTTOPTR %0
    %2(s64) = G_PTRTOINT %1

    ; CHECK: G_BRCOND %3(s1), %bb.1.next
    %3(s1) = G_TRUNC %0
    G_BRCOND %3, %bb.1.next

  bb.1.next:
    %4(s32) = G_TRUNC %0

    ; CHECK: %5(s1) = G_FPTOSI %4
    ; CHECK: %6(s8) = G_FPTOUI %4
    ; CHECK: %7(s16) = G_FPTOSI %4
    ; CHECK: %8(s32) = G_FPTOUI %4
    ; CHECK: %9(s64) = G_FPTOSI %4
    %5(s1) = G_FPTOSI %4
    %6(s8) = G_FPTOUI %4
    %7(s16) = G_FPTOSI %4
    %8(s32) = G_FPTOUI %4
    %9(s64) = G_FPTOSI %4

    ; CHECK: %10(s1) = G_FPTOUI %0
    ; CHECK: %11(s8) = G_FPTOSI %0
    ; CHECK: %12(s16) = G_FPTOUI %0
    ; CHECK: %13(s32) = G_FPTOSI %0
    ; CHECK: %14(s32) = G_FPTOUI %0
    %10(s1) = G_FPTOUI %0
    %11(s8) = G_FPTOSI %0
    %12(s16) = G_FPTOUI %0
    %13(s32) = G_FPTOSI %0
    %14(s32) = G_FPTOUI %0

    ; CHECK: %15(s32) = G_UITOFP %5
    ; CHECK: %16(s32) = G_SITOFP %11
    ; CHECK: %17(s32) = G_UITOFP %7
    ; CHECK: %18(s32) = G_SITOFP %4
    ; CHECK: %19(s32) = G_UITOFP %0
    %15(s32) = G_UITOFP %5
    %16(s32) = G_SITOFP %11
    %17(s32) = G_UITOFP %7
    %18(s32) = G_SITOFP %4
    %19(s32) = G_UITOFP %0

    ; CHECK: %20(s64) = G_SITOFP %5
    ; CHECK: %21(s64) = G_UITOFP %11
    ; CHECK: %22(s64) = G_SITOFP %7
    ; CHECK: %23(s64) = G_UITOFP %4
    ; CHECK: %24(s64) = G_SITOFP %0
    %20(s64) = G_SITOFP %5
    %21(s64) = G_UITOFP %11
    %22(s64) = G_SITOFP %7
    %23(s64) = G_UITOFP %4
    %24(s64) = G_SITOFP %0

    ; CHECK: %25(s1) = G_SELECT %10(s1), %10, %5
    ; CHECK: %26(s8) = G_SELECT %10(s1), %6, %11
    ; CHECK: %27(s16) = G_SELECT %10(s1), %12, %7
    ; CHECK: %28(s32) = G_SELECT %10(s1), %15, %16
    ; CHECK: %29(s64) = G_SELECT %10(s1), %9, %24
    %25(s1) = G_SELECT %10, %10, %5
    %26(s8) = G_SELECT %10, %6, %11
    %27(s16) = G_SELECT %10, %12, %7
    %28(s32) = G_SELECT %10, %15, %16
    %29(s64) = G_SELECT %10, %9, %24

    ; CHECK: %30(<2 x s32>) = G_BITCAST %9
    ; CHECK: %31(s64) = G_BITCAST %30
    ; CHECK: %32(s32) = G_BITCAST %15
    %30(<2 x s32>) = G_BITCAST %9
    %31(s64) = G_BITCAST %30
    %32(s32) = G_BITCAST %15
    %33(<4 x s8>) = G_BITCAST %15
    %34(<2 x s16>) = G_BITCAST %15
...
