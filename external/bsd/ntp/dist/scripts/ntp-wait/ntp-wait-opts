
# DO NOT EDIT THE FOLLOWING
#
# It's auto generated option handling code  

use Getopt::Long qw(GetOptionsFromArray);
Getopt::Long::Configure(qw(no_auto_abbrev no_ignore_case_always));

my $usage;

sub usage {
    my ($ret) = @_;
    print STDERR $usage;
    exit $ret;
}

sub paged_usage {
    my ($ret) = @_;
    my $pager = $ENV{PAGER} || '(less || more)';

    open STDOUT, "| $pager" or die "Can't fork a pager: $!";
    print $usage;

    exit $ret;
}

sub processOptions {
    my $args = shift;

    my $opts = {
        'tries' => '100',
        'sleep' => '6',
        'verbose' => '',
        'help' => '', 'more-help' => ''
    };
    my $argument = '';
    my $ret = GetOptionsFromArray($args, $opts, (
        'tries|n=i', 'sleep|s=i', 'verbose|v',
        'help|?', 'more-help'));

    $usage = <<'USAGE';
ntp-wait - Wait for ntpd to stabilize the system clock
USAGE: ntp-wait [ -<flag> [<val>] | --<name>[{=| }<val>] ]... 

    -n, --tries=num              Number of times to check ntpd
    -s, --sleep=num              How long to sleep between tries
    -v, --verbose                Be verbose
    -?, --help                   Display usage information and exit
      , --more-help              Pass the extended usage information through a pager

Options are specified by doubled hyphens and their name or by a single
hyphen and the flag character.
USAGE

    usage(0)       if $opts->{'help'};
    paged_usage(0) if $opts->{'more-help'};
    $_[0] = $opts;
    return $ret;
}

END { close STDOUT };

