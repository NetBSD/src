HESIOD(3)                                                            HESIOD(3)



NNAAMMEE
       hesiod,  hesiod_init, hesiod_resolve, hesiod_free_list, hesiod_to_bind,
       hesiod_end - Hesiod name server interface library

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<hheessiioodd..hh>>

       iinntt hheessiioodd__iinniitt((vvooiidd ****_c_o_n_t_e_x_t))
       cchhaarr ****hheessiioodd__rreessoollvvee((vvooiidd **_c_o_n_t_e_x_t,, ccoonnsstt cchhaarr **_n_a_m_e,,
            ccoonnsstt cchhaarr **_t_y_p_e))
       vvooiidd hheessiioodd__ffrreeee__lliisstt((vvooiidd **_c_o_n_t_e_x_t,, cchhaarr ****_l_i_s_t));;
       cchhaarr **hheessiioodd__ttoo__bbiinndd((vvooiidd **_c_o_n_t_e_x_t,, ccoonnsstt cchhaarr **_n_a_m_e,,
            ccoonnsstt cchhaarr **_t_y_p_e))
       vvooiidd hheessiioodd__eenndd((vvooiidd **_c_o_n_t_e_x_t))

DDEESSCCRRIIPPTTIIOONN
       This family of functions allows you to perform lookups of Hesiod infor-
       mation, which is stored as text records in the Domain Name Service.  To
       perform lookups, you must first initialize a _c_o_n_t_e_x_t, an opaque  object
       which  stores information used internally by the library between calls.
       _h_e_s_i_o_d___i_n_i_t initializes a context, storing a pointer to the context  in
       the  location pointed to by the _c_o_n_t_e_x_t argument.  _h_e_s_i_o_d___e_n_d frees the
       resources used by a context.

       _h_e_s_i_o_d___r_e_s_o_l_v_e is the primary interface to the library.  If successful,
       it  returns  a  list of one or more strings giving the records matching
       _n_a_m_e and _t_y_p_e.  The last element of the list  is  followed  by  a  NULL
       pointer.  It is the caller's responsibility to call _h_e_s_i_o_d___f_r_e_e___l_i_s_t to
       free the resources used by the returned list.

       _h_e_s_i_o_d___t_o___b_i_n_d converts _n_a_m_e and _t_y_p_e into the DNS name  used  by  _h_e_s_-
       _i_o_d___r_e_s_o_l_v_e.   It  is  the caller's responsibility to free the returned
       string using _f_r_e_e.

RREETTUURRNN VVAALLUUEESS
       If successful, _h_e_s_i_o_d___i_n_i_t returns 0; otherwise it returns -1 and  sets
       _e_r_r_n_o  to  indicate  the  error.   On  failure, _h_e_s_i_o_d___r_e_s_o_l_v_e and _h_e_s_-
       _i_o_d___t_o___b_i_n_d return NULL and set the global variable _e_r_r_n_o  to  indicate
       the error.

EENNVVIIRROONNMMEENNTT
       If  the  environment  variable  HHEESS__DDOOMMAAIINN is set, it will override the
       domain in the Hesiod configuration file.  If the  environment  variable
       HHEESSIIOODD__CCOONNFFIIGG  is set, it specifies the location of the Hesiod configu-
       ration file.

SSEEEE AALLSSOO
       `Hesiod - Project Athena Technical Plan -- Name Service'

EERRRROORRSS
       Hesiod calls may fail because of:

       ENOMEM Insufficient memory was available to  carry  out  the  requested
              operation.

       ENOEXEC
              _h_e_s_i_o_d___i_n_i_t  failed  because  the  Hesiod configuration file was
              invalid.

       ECONNREFUSED
              _h_e_s_i_o_d___r_e_s_o_l_v_e failed because no name server could be  contacted
              to answer the query.

       EMSGSIZE
              _h_e_s_i_o_d___r_e_s_o_l_v_e  failed because the query or response was too big
              to fit into the packet buffers.

       ENOENT _h_e_s_i_o_d___r_e_s_o_l_v_e failed  because  the  name  server  had  no  text
              records matching _n_a_m_e and _t_y_p_e, or _h_e_s_i_o_d___t_o___b_i_n_d failed because
              the _n_a_m_e argument had a domain  extension  which  could  not  be
              resolved with type ``rhs-extension'' in the local Hesiod domain.

AAUUTTHHOORR
       Steve Dyer, IBM/Project Athena
       Greg Hudson, MIT Team Athena
       Copyright 1987, 1988, 1995, 1996  by  the  Massachusetts  Institute  of
       Technology.

BBUUGGSS
       The  strings  corresponding to the _e_r_r_n_o values set by the Hesiod func-
       tions are not particularly indicative of what  went  wrong,  especially
       for _E_N_O_E_X_E_C and _E_N_O_E_N_T.



                               30 November 1996                      HESIOD(3)
