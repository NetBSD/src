GETIPNODEBYNAME(3)     FreeBSD Library Functions Manual     GETIPNODEBYNAME(3)

NNAAMMEE
     ggeettiippnnooddeebbyynnaammee, ggeettiippnnooddeebbyyaaddddrr -- get network host entry
     ffrreeeehhoosstteenntt -- free network host entry

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<nneettddbb..hh>>

     _s_t_r_u_c_t _h_o_s_t_e_n_t _*
     ggeettiippnnooddeebbyynnaammee(_c_o_n_s_t _c_h_a_r _*_n_a_m_e, _i_n_t _a_f, _i_n_t _f_l_a_g_s, _i_n_t _*_e_r_r_o_r);

     _s_t_r_u_c_t _h_o_s_t_e_n_t _*
     ggeettiippnnooddeebbyyaaddddrr(_c_o_n_s_t _v_o_i_d _*_a_d_d_r, _s_i_z_e___t _l_e_n, _i_n_t _a_f, _i_n_t _*_e_r_r_o_r);

     _v_o_i_d
     ffrreeeehhoosstteenntt(_s_t_r_u_c_t _h_o_s_t_e_n_t _*_h_e);

DDEESSCCRRIIPPTTIIOONN
     GGeettiippnnooddeebbyynnaammee(), and ggeettiippnnooddeebbyyaaddddrr() each return a pointer to a
     _h_o_s_t_e_n_t structure (see below) describing an internet host referenced by
     name or by address, as the function names indicate.  This structure con-
     tains either the information obtained from the name server, or broken-out
     fields from a line in _/_e_t_c_/_h_o_s_t_s.  If the local name server is not run-
     ning, these routines do a lookup in _/_e_t_c_/_h_o_s_t_s.

           struct  hostent {
                   char    *h_name;        /* official name of host */
                   char    **h_aliases;    /* alias list */
                   int     h_addrtype;     /* host address type */
                   int     h_length;       /* length of address */
                   char    **h_addr_list;  /* list of addresses from name server */
           };

           #define h_addr  h_addr_list[0]  /* address, for backward compatibility */

     The members of this structure are:

     h_name       Official name of the host.

     h_aliases    A zero-terminated array of alternate names for the host.

     h_addrtype   The type of address being returned.

     h_length     The length, in bytes, of the address.

     h_addr_list  A zero-terminated array of network addresses for the host.
                  Host addresses are returned in network byte order.

     h_addr       The first address in h_addr_list; this is for backward com-
                  patibility.

     This structure should be freed after use by calling ffrreeeehhoosstteenntt().

     When using the nameserver, ggeettiipphhoossttbbyyaaddddrr() will search for the named
     host in each parent domain given in the ``search'' directive of
     resolv.conf(5) unless the name contains a dot (``.'').  If the name con-
     tains no dot, and if the environment variable HOSTALIASES contains the
     name of an alias file, the alias file will first be searched for an alias
     matching the input name.  See hostname(7) for the domain search procedure
     and the alias file format.

     GGeettiipphhoossttbbyyaaddddrr() can be told to look for IPv4 addresses, IPv6 addresses
     or both IPv4 and IPv6.  If IPv4 addresses only are to be looked up then
     _a_f should be set to AF_INET, otherwise it should be set to AF_INET6.

     There are three flags that can be set

     AI_V4MAPPED    Return IPv4 addresses if no IPv6 addresses are found.
                    This flag is ignored unless _a_f is AF_INET6.

     AI_ALL         Return IPv4 addresses as well IPv6 addresses if
                    AI_V4MAPPED is set.  This flag is ignored unless _a_f is
                    AF_INET6.

     AI_ADDRCONFIG  Only return addresses of a given type if the system has an
                    active interface with that type.

     Also AI_DEFAULT is defined to be (AI_V4MAPPED|AI_ADDRCONFIG).

     GGeettiippnnooddeebbyyaaddddrr() will lookup IPv4 mapped and compatible addresses in the
     IPv4 name space and IPv6 name space

     FFrreeeehhoosstteenntt() frees the hostent structure allocated be ggeettiippnnooddeebbyynnaammee()
     and ggeettiippnnooddeebbyyaaddddrr().  The structures returned by ggeetthhoossttbbyynnaammee(),
     ggeetthhoossttbbyynnaammee22(), ggeetthhoossttbbyyaaddddrr() and ggeetthhoosstteenntt() should not be passed
     to ffrreeeehhoosstteenntt() as they are pointers to static areas.

EENNVVIIRROONNMMEENNTT
     HOSTALIASES    Name of file containing (_h_o_s_t _a_l_i_a_s, _f_u_l_l _h_o_s_t_n_a_m_e) pairs.

FFIILLEESS
     /etc/hosts     See hosts(5).

DDIIAAGGNNOOSSTTIICCSS
     Error return status from ggeettiippnnooddeebbyynnaammee() and ggeettiippnnooddeebbyyaaddddrr() is indi-
     cated by return of a null pointer.  In this case _e_r_r_o_r may then be
     checked to see whether this is a temporary failure or an invalid or
     unknown host.  _e_r_r_n_o can have the following values:

           NETDB_INTERNAL    This indicates an internal error in the library,
                             unrelated to the network or name service.  _e_r_r_n_o
                             will be valid in this case; see perror.

           HOST_NOT_FOUND    No such host is known.

           TRY_AGAIN         This is usually a temporary error and means that
                             the local server did not receive a response from
                             an authoritative server.  A retry at some later
                             time may succeed.

           NO_RECOVERY       Some unexpected server failure was encountered.
                             This is a non-recoverable error, as one might
                             expect.

           NO_ADDRESS        The requested name is valid but does not have an
                             IP address; this is not a temporary error.  This
                             means that the name is known to the name server
                             but there is no address associated with this
                             name.  Another type of request to the name server
                             using this domain name will result in an answer;
                             for example, a mail-forwarder may be registered
                             for this domain.

SSEEEE AALLSSOO
     hosts(5), hostname(7), resolver(3), resolver(5), gethostbyname(3),
     RFC2553.

4th Berkeley Distribution     September 17, 1999     4th Berkeley Distribution
