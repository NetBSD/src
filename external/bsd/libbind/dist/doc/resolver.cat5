RESOLVER(5)               FreeBSD File Formats Manual              RESOLVER(5)

NNAAMMEE
     rreessoollvveerr -- resolver configuration file

SSYYNNOOPPSSIISS
     _/_e_t_c_/_r_e_s_o_l_v_._c_o_n_f

DDEESSCCRRIIPPTTIIOONN
     The rreessoollvveerr is a set of routines in the C library (resolve(3)) that pro-
     vide access to the Internet Domain Name System.  The rreessoollvveerr configura-
     tion file contains information that is read by the rreessoollvveerr routines the
     first time they are invoked by a process.  The file is designed to be
     human readable and contains a list of keywords with values that provide
     various types of rreessoollvveerr information.

     On a normally configured system, this file should not be necessary.  The
     only name server to be queried will be on the local machine, the domain
     name is determined from the host name, and the domain search path is con-
     structed from the domain name.

     The different configuration directives are:

     nameserver
              Internet address (in dot notation) of a name server that the
              rreessoollvveerr should query.  Up to MAXNS (see _<_r_e_s_o_l_v_._h_>) name
              servers may be listed, one per keyword.  If there are multiple
              servers, the rreessoollvveerr library queries them in the order listed.
              If no nameserver entries are present, the default is to use the
              name server on the local machine.  (The algorithm used is to try
              a name server, and if the query times out, try the next, until
              out of name servers, then repeat trying all the name servers
              until a maximum number of retries are made).

     domain   Local domain name.  Most queries for names within this domain
              can use short names relative to the local domain.  If no domain
              entry is present, the domain is determined from the local host
              name returned by gethostname; the domain part is taken to be
              everything after the first `.'.  Finally, if the host name does
              not contain a domain part, the root domain is assumed.

     search   Search list for host-name lookup.  The search list is normally
              determined from the local domain name; by default, it contains
              only the local domain name.  This may be changed by listing the
              desired domain search path following the search keyword with
              spaces or tabs separating the names.  Most rreessoollvveerr queries will
              be attempted using each component of the search path in turn
              until a match is found.  Note that this process may be slow and
              will generate a lot of network traffic if the servers for the
              listed domains are not local, and that queries will time out if
              no server is available for one of the domains.

              The search list is currently limited to six domains with a total
              of 256 characters.

     sortlist
              Allows addresses returned by gethostbyname to be sorted.  A
              sortlist is specified by IP address netmask pairs. The netmask
              is optional and defaults to the natural netmask of the net. The
              IP address and optional network pairs are separated by slashes.
              Up to 10 pairs may be specified.  For example:

                    sortlist 130.155.160.0/255.255.240.0 130.155.0.0

     options  Allows certain internal rreessoollvveerr variables to be modified.  The
              syntax is
                    options _o_p_t_i_o_n _._._.
              where _o_p_t_i_o_n is one of the following:

              debug     sets RES_DEBUG in ___r_e_s_._o_p_t_i_o_n_s.

              ndots:_n   sets a threshold for the number of dots which must
                        appear in a name given to rreess__qquueerryy() (see
                        resolver(3)) before an _i_n_i_t_i_a_l _a_b_s_o_l_u_t_e _q_u_e_r_y will be
                        made.  The default for _n is ``1'', meaning that if
                        there are _a_n_y dots in a name, the name will be tried
                        first as an absolute name before any _s_e_a_r_c_h _l_i_s_t ele-
                        ments are appended to it.

              timeout:_n
                        sets the amount of time the resolver will wait for a
                        response from a remote name server before retrying the
                        query via a different name server.  Measured in sec-
                        onds, the default is RES_TIMEOUT (see _<_r_e_s_o_l_v_._h_>).

              attempts:_n
                        sets the number of times the resolver will send a
                        query to its name servers before giving up and return-
                        ing an error to the calling application.  The default
                        is RES_DFLRETRY (see _<_r_e_s_o_l_v_._h_>).

              rotate    sets RES_ROTATE in ___r_e_s_._o_p_t_i_o_n_s, which causes round
                        robin selection of nameservers from among those
                        listed.  This has the effect of spreading the query
                        load among all listed servers, rather than having all
                        clients try the first listed server first every time.

              no-check-names
                        sets RES_NOCHECKNAME in ___r_e_s_._o_p_t_i_o_n_s, which disables
                        the modern BIND checking of incoming host names and
                        mail names for invalid characters such as underscore
                        (_), non-ASCII, or control characters.

              inet6     sets RES_USE_INET6 in ___r_e_s_._o_p_t_i_o_n_s.  This has the
                        effect of trying a AAAA query before an A query inside
                        the _g_e_t_h_o_s_t_b_y_n_a_m_e function, and of mapping IPv4
                        responses in IPv6 ``tunnelled form'' if no AAAA
                        records are found but an A record set exists.

              no-tld-query
                        sets RES_NOTLDQUERY in ___r_e_s_._o_p_t_i_o_n_s.  This option
                        causes rreess__nnsseeaarrcchh() to not attempt to resolve a
                        unqualified name as if it were a top level domain
                        (TLD).  This option can cause problems if the site has
                        "localhost" as a TLD rather than having localhost on
                        one or more elements of the search list.  This option
                        has no effect if neither RES_DEFNAMES or RES_DNSRCH is
                        set.

     The domain and search keywords are mutually exclusive.  If more than one
     instance of these keywords is present, the last instance wins.

     The search keyword of a system's _r_e_s_o_l_v_._c_o_n_f file can be overridden on a
     per-process basis by setting the environment variable ``LOCALDOMAIN'' to
     a space-separated list of search domains.

     The options keyword of a system's _r_e_s_o_l_v_._c_o_n_f file can be amended on a
     per-process basis by setting the environment variable ``RES_OPTIONS to a
     space-separated list of'' rreessoollvveerr options as explained above under
     options.

     The keyword and value must appear on a single line, and the keyword
     (e.g., nameserver) must start the line.  The value follows the keyword,
     separated by white space.

FFIILLEESS
     _/_e_t_c_/_r_e_s_o_l_v_._c_o_n_f _<_r_e_s_o_l_v_._h_>

SSEEEE AALLSSOO
     gethostbyname(3), hostname(7), resolver(3), resolver(5).  ``Name Server
     Operations Guide for BBIINNDD''

4th Berkeley Distribution      November 11, 1993     4th Berkeley Distribution
