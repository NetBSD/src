/*
 * Copyright (C) 1984-2023  Mark Nudelman
 *
 * You may distribute under the terms of either the GNU General Public
 * License or the Less License, as specified in the README file.
 *
 * For more information, see the README file.
 */


/* OS/9 definition file for less.  */
/*
 * This file has 2 sections:
 * User preferences.
 * Settings always true for OS-9 systems. 
 */

/* User preferences.  */

/*
 * SECURE is 1 if you wish to disable a bunch of features in order to
 * be safe to run by unprivileged users.
 */
#define	SECURE		0

/*
 * SHELL_ESCAPE is 1 if you wish to allow shell escapes.
 * (This is possible only if your system supplies the system() function.)
 */
#define	SHELL_ESCAPE	(!SECURE)

/*
 * EXAMINE is 1 if you wish to allow examining files by name from within less.
 */
#define	EXAMINE		(!SECURE)

/*
 * TAB_COMPLETE_FILENAME is 1 if you wish to allow the TAB key
 * to complete filenames at prompts.
 */
#define	TAB_COMPLETE_FILENAME	1

/*
 * CMD_HISTORY is 1 if you wish to allow keys to cycle through
 * previous commands at prompts.
 */
#define	CMD_HISTORY	1

/*
 * HILITE_SEARCH is 1 if you wish to have search targets to be 
 * displayed in standout mode.
 */
#define	HILITE_SEARCH	1

/*
 * EDITOR is 1 if you wish to allow editor invocation (the "v" command).
 * (This is possible only if your system supplies the system() function.)
 * EDIT_PGM is the name of the (default) editor to be invoked.
 */
#define	EDITOR		(!SECURE)
#define	EDIT_PGM	"umacs"

/*
 * TAGS is 1 if you wish to support tag files.
 */
#define	TAGS		(!SECURE)

/*
 * USERFILE is 1 if you wish to allow a .less file to specify 
 * user-defined key bindings.
 */
#define	USERFILE	(!SECURE)

/*
 * GLOB is 1 if you wish to have shell metacharacters expanded in filenames.
 * This will generally work if your system provides the "popen" function
 * and the "echo" shell command.
 */
#define	GLOB		(!SECURE)

/*
 * PIPEC is 1 if you wish to have the "|" command
 * which allows the user to pipe data into a shell command.
 */
#define	PIPEC		(!SECURE)

/*
 * LOGFILE is 1 if you wish to allow the -o option (to create log files).
 */
#define	LOGFILE		(!SECURE)

/*
 * GNU_OPTIONS is 1 if you wish to support the GNU-style command
 * line options --help and --version.
 */
#define	GNU_OPTIONS	1

/*
 * ONLY_RETURN is 1 if you want RETURN to be the only input which
 * will continue past an error message.
 * Otherwise, any key will continue past an error message.
 */
#define	ONLY_RETURN	0

/*
 * LESSKEYFILE is the filename of the default lesskey output file 
 * (in the HOME directory).
 * LESSKEYFILE_SYS is the filename of the system-wide lesskey output file.
 * DEF_LESSKEYINFILE is the filename of the default lesskey input 
 * (in the HOME directory).
 * LESSHISTFILE is the filename of the history file
 * (in the HOME directory).
 */
#define	LESSKEYFILE		".less"
#define	LESSKEYFILE_SYS		"/.sysless"
#define	DEF_LESSKEYINFILE	".lesskey"
#define	LESSKEYINFILE_SYS	"/.syslesskey"
#define LESSHISTFILE		".lesshst"


/* Settings always true for OS-9.  */

/* This is not needed; it is defined by the compiler. */
/* #define _OSK 1 */
#define OS2 		0
#define MSDOS_COMPILER	0

/*
 * Pathname separator character.
 */
#define	PATHNAME_SEP	"/"

/*
 * HAVE_ANSI_PROTOS	is 1 if your compiler supports ANSI function prototypes.
 */
#define HAVE_ANSI_PROTOS	1

/*
 * HAVE_SYS_TYPES_H is 1 if your system has <sys/types.h>.
 */
#define HAVE_SYS_TYPES_H 0

/*
 * Define if you have the <sgstat.h> header file.
 */
#define HAVE_SGSTAT_H	1

/*
 * HAVE_PERROR is 1 if your system has the perror() call.
 * (Actually, if it has sys_errlist, sys_nerr and errno.)
 */
#if _OSK_MWC32
#define	HAVE_PERROR	0
#else
#define	HAVE_PERROR	1
#endif

/*
 * HAVE_TIME is 1 if your system has the time() call.
 */
#define	HAVE_TIME	1

/*
 * HAVE_SHELL is 1 if your system supports a SHELL command interpreter.
 */
#define	HAVE_SHELL 0

/*
 * Default shell metacharacters and meta-escape character.
 */
#define DEF_METACHARS   "; \t\n'\"()<>|&^`#\\"
#define DEF_METAESCAPE  "\\"

/* 
 * HAVE_DUP is 1 if your system has the dup() call.
 */
#define	HAVE_DUP 0

/* Define to 1 to support reading lesskey source files (not just binary). */
#define HAVE_LESSKEYSRC 1

/*
 * Sizes of various buffers.
 */
#if 0 /* old sizes for small memory machines
#define	CMDBUF_SIZE	512	/* Buffer for multichar commands */
#define	UNGOT_SIZE	100	/* Max chars to unget() */
#define	LINEBUF_SIZE	1024	/* Max size of line in input file */
#define	OUTBUF_SIZE	1024	/* Output buffer */
#define	PROMPT_SIZE	200	/* Max size of prompt string */
#define	TERMBUF_SIZE	2048	/* Termcap buffer for tgetent */
#define	TERMSBUF_SIZE	1024	/* Buffer to hold termcap strings */
#define	TAGLINE_SIZE	512	/* Max size of line in tags file */
#define	TABSTOP_MAX	32	/* Max number of custom tab stops */
#else /* more reasonable sizes for modern machines */
#define	CMDBUF_SIZE	2048	/* Buffer for multichar commands */
#define	UNGOT_SIZE	200	/* Max chars to unget() */
#define	LINEBUF_SIZE	1024	/* Initial max size of line in input file */
#define	OUTBUF_SIZE	1024	/* Output buffer */
#define	PROMPT_SIZE	2048	/* Max size of prompt string */
#define	TERMBUF_SIZE	2048	/* Termcap buffer for tgetent */
#define	TERMSBUF_SIZE	1024	/* Buffer to hold termcap strings */
#define	TAGLINE_SIZE	1024	/* Max size of line in tags file */
#define	TABSTOP_MAX	128	/* Max number of custom tab stops */
#endif

/* Define to `long' if <sys/types.h> doesn't define.  */
#define off_t long

/* Define if you need to in order for stat and other things to work.  */
#define _POSIX_SOURCE 0

/* Define as the return type of signal handlers (int or void).  */
#if _OSK_MWC32
#define RETSIGTYPE int
#else
#define RETSIGTYPE void
#endif


/*
 * Regular expression library.
 * Define exactly one of the following to be 1:
 * HAVE_POSIX_REGCOMP: POSIX regcomp() and regex.h
 * HAVE_RE_COMP: BSD re_comp()
 * HAVE_REGCMP: System V regcmp()
 * HAVE_V8_REGCOMP: Henry Spencer V8 regcomp() and regexp.h
 * NO_REGEX: pattern matching is supported, but without metacharacters.
 */
#define HAVE_POSIX_REGCOMP 0
#define HAVE_RE_COMP 0
#define HAVE_REGCMP 0
#define HAVE_V8_REGCOMP 1
#define NO_REGEX 0
#define HAVE_REGEXEC2 1

/* Define HAVE_VOID if your compiler supports the "void" type. */
#define HAVE_VOID 1

/* Define HAVE_CONST if your compiler supports the "const" modifier. */
#define HAVE_CONST 0

/* Define HAVE_TIME_T if your system supports the "time_t" type. */
#define HAVE_TIME_T 1

/* Define HAVE_STRERROR if you have the strerror() function. */
#define HAVE_STRERROR 0

/* Define HAVE_FILENO if you have the fileno() macro. */
#define HAVE_FILENO 1

/* Define HAVE_ERRNO if you have the errno variable */
/* Define MUST_DEFINE_ERRNO if you have errno but it is not define 
 * in errno.h */
#define HAVE_ERRNO 1
#define MUST_DEFINE_ERRNO 0

/* Define HAVE_SYS_ERRLIST if you have the sys_errlist[] variable */
#define HAVE_SYS_ERRLIST 0

/* Define HAVE_OSPEED if your termcap library has the ospeed variable */
/* Define MUST_DEFINE_OSPEED if you have ospeed but it is not defined
 * in termcap.h. */
#define HAVE_OSPEED 0
#define MUST_DEFINE_OSPEED 0

/* Define HAVE_LOCALE if you have locale.h and setlocale. */
#define HAVE_LOCALE 0

/* Define HAVE_TERMIOS_FUNCS if you have tcgetattr/tcsetattr */
#define HAVE_TERMIOS_FUNCS 0

/* Define HAVE_UPPER_LOWER if you have isupper, islower, toupper, tolower */
#define HAVE_UPPER_LOWER 1

/* Define if you have the _setjmp function.  */
#define HAVE__SETJMP 1

/* Define if you have the memcpy function.  */
#define HAVE_MEMCPY 1

/* Define if you have the popen function.  */
#define HAVE_POPEN 1

/* Define if you have the sigsetmask function.  */
#define HAVE_SIGSETMASK 0

/* Define if you have the sigprocmask function.  */
#define HAVE_SIGPROCMASK	0

/* Define if you have the sigset_t type and sigemptyset macro */
#define HAVE_SIGSET_T	0
#define HAVE_SIGEMPTYSET	0

/* Define if you have the stat function.  */
#define HAVE_STAT 0

/* Define if you have the strchr function.  */
#define HAVE_STRCHR 0

/* Define if you have the system function.  */
#define HAVE_SYSTEM 1

/* Define if you have the snprintf function.  */
#define HAVE_SNPRINTF	0

/* Define if you have the <ctype.h> header file.  */
#define HAVE_CTYPE_H 1

/* Define if you have the <wctype.h> header file.  */
#define HAVE_WCTYPE_H 0

/* Define if you have the <errno.h> header file.  */
#define HAVE_ERRNO_H 1

/* Define if you have the <fcntl.h> header file.  */
#define HAVE_FCNTL_H 0

/* Define if you have the <limits.h> header file.  */
#define HAVE_LIMITS_H  0

/* Define if you have the <stdio.h> header file.  */
#define HAVE_STDIO_H 1

/* Define if you have the <string.h> header file.  */
#define HAVE_STRING_H 1

/* Define if you have the <stdlib> header file. */
#if _OSK_MWC32
#define HAVE_STDLIB_H 0
#else
#define HAVE_STDLIB_H 1
#endif

/* Define if you have the <sys/ioctl.h> header file.  */
#define HAVE_SYS_IOCTL_H 0

/* Define if you have the <sys/ptem.h> header file.  */
#define HAVE_SYS_PTEM_H 0

/* Define if you have the <sys/stream.h> header file.  */
#define HAVE_SYS_STREAM_H 0

/* Define if you have the <termcap.h> header file.  */
#define HAVE_TERMCAP_H 1

/* Define if you have the <termio.h> header file.  */
#define HAVE_TERMIO_H 0

/* Define if you have the <termios.h> header file.  */
#define HAVE_TERMIOS_H 0

/* Define if you have the <time.h> header file.  */
#define HAVE_TIME_H 1

/* Define if you have the <unistd.h> header file.  */
#define HAVE_UNISTD_H 0

/* Define if you have the <values.h> header file.  */
#define HAVE_VALUES_H 0
