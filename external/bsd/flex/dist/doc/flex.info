This is flex.info, produced by makeinfo version 6.1 from flex.texi.

The flex manual is placed under the same licensing conditions as the
rest of flex:

   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2012 The Flex
Project.

   Copyright (C) 1990, 1997 The Regents of the University of California.
All rights reserved.

   This code is derived from software contributed to Berkeley by Vern
Paxson.

   The United States Government has rights in this work pursuant to
contract no.  DE-AC03-76SF00098 between the United States Department of
Energy and the University of California.

   Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

   Neither the name of the University nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

   THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* flex: (flex).      Fast lexical analyzer generator (lex replacement).
END-INFO-DIR-ENTRY


Indirect:
flex.info-1: 1622
flex.info-2: 318745

Tag Table:
(Indirect)
Node: Top1622
Node: Copyright9414
Node: Reporting Bugs10933
Node: Introduction11189
Node: Simple Examples12018
Node: Format15304
Node: Definitions Section15759
Ref: Definitions Section-Footnote-118017
Node: Rules Section18085
Node: User Code Section19243
Node: Comments in the Input19681
Node: Patterns21051
Ref: case and character ranges27883
Node: Matching31886
Node: Actions35171
Node: Generated Scanner44133
Node: Start Conditions49136
Node: Multiple Input Buffers59678
Ref: Scanning Strings66221
Node: EOF67850
Node: Misc Macros69436
Node: User Values72290
Node: Yacc74615
Node: Scanner Options75510
Node: Options for Specifying Filenames78299
Ref: option-header78525
Ref: option-outfile79239
Ref: option-stdout79564
Node: Options Affecting Scanner Behavior80547
Ref: option-case-insensitive80788
Ref: option-lex-compat81221
Ref: option-batch81753
Ref: option-interactive82272
Ref: option-7bit83626
Ref: option-8bit84930
Ref: option-default85342
Ref: option-always-interactive85406
Ref: option-posix86010
Ref: option-stack87157
Ref: option-stdinit87265
Ref: option-yylineno87744
Ref: option-yywrap88187
Node: Code-Level And API Options88454
Ref: option-ansi-definitions88681
Ref: option-ansi-prototypes88756
Ref: option-bison-bridge88829
Ref: option-bison-locations89170
Ref: option-noline89430
Ref: option-reentrant89944
Ref: option-c++90556
Ref: option-array90682
Ref: option-pointer90780
Ref: option-prefix90907
Ref: option-main92435
Ref: option-nounistd92619
Ref: option-yyclass93130
Node: Options for Scanner Speed and Size93614
Ref: option-align94164
Ref: option-ecs94666
Ref: option-meta-ecs95705
Ref: option-read96193
Ref: option-full98076
Ref: option-fast98271
Node: Debugging Options99195
Ref: option-backup99382
Ref: option-debug99927
Ref: option-perf-report100649
Ref: option-nodefault101275
Ref: option-trace101593
Ref: option-nowarn101884
Ref: option-verbose101952
Ref: option-warn102381
Node: Miscellaneous Options102600
Node: Performance103056
Node: Cxx113303
Node: Reentrant121395
Node: Reentrant Uses122129
Node: Reentrant Overview123691
Node: Reentrant Example124491
Node: Reentrant Detail125264
Node: Specify Reentrant125768
Node: Extra Reentrant Argument126418
Node: Global Replacement127670
Node: Init and Destroy Functions128905
Node: Accessor Methods131426
Node: Extra Data132773
Node: About yyscan_t135040
Node: Reentrant Functions135437
Ref: bison-functions136921
Node: Lex and Posix137660
Node: Memory Management145007
Ref: memory-management145153
Node: The Default Memory Management145387
Ref: The Default Memory Management-Footnote-1149207
Node: Overriding The Default Memory Management149360
Ref: Overriding The Default Memory Management-Footnote-1151774
Node: A Note About yytext And Memory151938
Node: Serialized Tables153178
Ref: serialization153322
Node: Creating Serialized Tables154102
Node: Loading and Unloading Serialized Tables155717
Node: Tables File Format157490
Node: Diagnostics164515
Node: Limitations167924
Node: Bibliography169872
Node: FAQ170542
Node: When was flex born?175705
Node: How do I expand backslash-escape sequences in C-style quoted strings?176082
Node: Why do flex scanners call fileno if it is not ANSI compatible?177385
Node: Does flex support recursive pattern definitions?178182
Node: How do I skip huge chunks of input (tens of megabytes) while using flex?179029
Node: Flex is not matching my patterns in the same order that I defined them.179496
Node: My actions are executing out of order or sometimes not at all.181242
Node: How can I have multiple input sources feed into the same scanner at the same time?182015
Node: Can I build nested parsers that work with the same input file?184000
Node: How can I match text only at the end of a file?185007
Node: How can I make REJECT cascade across start condition boundaries?185811
Node: Why cant I use fast or full tables with interactive mode?186825
Node: How much faster is -F or -f than -C?188082
Node: If I have a simple grammar cant I just parse it with flex?188394
Node: Why doesn't yyrestart() set the start state back to INITIAL?188876
Node: How can I match C-style comments?189503
Node: The period isn't working the way I expected.190313
Node: Can I get the flex manual in another format?191558
Node: Does there exist a "faster" NDFA->DFA algorithm?192048
Node: How does flex compile the DFA so quickly?192558
Node: How can I use more than 8192 rules?193524
Node: How do I abandon a file in the middle of a scan and switch to a new file?194934
Node: How do I execute code only during initialization (only before the first scan)?195488
Node: How do I execute code at termination?196265
Node: Where else can I find help?196591
Node: Can I include comments in the "rules" section of the file?196965
Node: I get an error about undefined yywrap().197345
Node: How can I change the matching pattern at run time?197821
Node: How can I expand macros in the input?198183
Node: How can I build a two-pass scanner?199215
Node: How do I match any string not matched in the preceding rules?200133
Node: I am trying to port code from AT&T lex that uses yysptr and yysbuf.201042
Node: Is there a way to make flex treat NULL like a regular character?201837
Node: Whenever flex can not match the input it says "flex scanner jammed".202357
Node: Why doesn't flex have non-greedy operators like perl does?203000
Node: Memory leak - 16386 bytes allocated by malloc.204353
Ref: faq-memory-leak204651
Node: How do I track the byte offset for lseek()?205622
Node: How do I use my own I/O classes in a C++ scanner?207131
Node: How do I skip as many chars as possible?207974
Node: deleteme00209049
Node: Are certain equivalent patterns faster than others?209489
Node: Is backing up a big deal?212907
Node: Can I fake multi-byte character support?214813
Node: deleteme01216254
Node: Can you discuss some flex internals?217363
Node: unput() messes up yy_at_bol219607
Node: The | operator is not doing what I want220709
Node: Why can't flex understand this variable trailing context pattern?222255
Node: The ^ operator isn't working223504
Node: Trailing context is getting confused with trailing optional patterns224739
Node: Is flex GNU or not?225982
Node: ERASEME53227655
Node: I need to scan if-then-else blocks and while loops228425
Node: ERASEME55229624
Node: ERASEME56230722
Node: ERASEME57232080
Node: Is there a repository for flex scanners?233078
Node: How can I conditionally compile or preprocess my flex input file?233394
Node: Where can I find grammars for lex and yacc?233867
Node: I get an end-of-buffer message for each character scanned.234214
Node: unnamed-faq-62234809
Node: unnamed-faq-63235827
Node: unnamed-faq-64237124
Node: unnamed-faq-65238090
Node: unnamed-faq-66238876
Node: unnamed-faq-67239991
Node: unnamed-faq-68240978
Node: unnamed-faq-69242120
Node: unnamed-faq-70242833
Node: unnamed-faq-71243594
Node: unnamed-faq-72244803
Node: unnamed-faq-73245846
Node: unnamed-faq-74246770
Node: unnamed-faq-75247715
Node: unnamed-faq-76248847
Node: unnamed-faq-77249553
Node: unnamed-faq-78250446
Node: unnamed-faq-79251444
Node: unnamed-faq-80253144
Node: unnamed-faq-81254462
Node: unnamed-faq-82257262
Node: unnamed-faq-83258219
Node: unnamed-faq-84259999
Node: unnamed-faq-85261102
Node: unnamed-faq-86262109
Node: unnamed-faq-87263047
Node: unnamed-faq-88263693
Node: unnamed-faq-90264524
Node: unnamed-faq-91265787
Node: unnamed-faq-92268215
Node: unnamed-faq-93268714
Node: unnamed-faq-94269641
Node: unnamed-faq-95271053
Node: unnamed-faq-96272571
Node: unnamed-faq-97273330
Node: unnamed-faq-98273997
Node: unnamed-faq-99274662
Node: unnamed-faq-100275591
Node: unnamed-faq-101276301
Node: What is the difference between YYLEX_PARAM and YY_DECL?277114
Node: Why do I get "conflicting types for yylex" error?277638
Node: How do I access the values set in a Flex action from within a Bison action?278168
Node: Appendices278597
Node: Makefiles and Flex278862
Ref: Makefiles and Flex-Footnote-1282064
Ref: Makefiles and Flex-Footnote-2282181
Ref: Makefiles and Flex-Footnote-3282368
Node: Bison Bridge282419
Ref: Bison Bridge-Footnote-1285086
Node: M4 Dependency285278
Ref: M4 Dependency-Footnote-1286692
Node: Common Patterns286828
Node: Numbers287151
Node: Identifiers288127
Node: Quoted Constructs288954
Node: Addresses290008
Node: Indices291320
Node: Concept Index291612
Node: Index of Functions and Macros318745
Node: Index of Variables323714
Node: Index of Data Types325380
Node: Index of Hooks326268
Node: Index of Scanner Options326836

End Tag Table
