%!PS-Adobe-2.0 EPSF-1.2
%%Title: Untitled-1
%%Creator: FreeHand 9.0
%%CreationDate: 2002/07/16 10:41 PM
%%BoundingBox: 0 0 27 27
%%FHPathName:Untitled:FreeHand 9:English:Untitled-1
%ALDOriginalFile:Untitled:FreeHand 9:English:Untitled-1
%ALDBoundingBox: -153 -436 442 406
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if 
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get 32 sub 0 exch put 
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub 
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed { 
_NXLevel2 not { 
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
} if
} if
/md defed{ 
md type /dicttype eq { 
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if 
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf 
}ifelse
/privrectpath { 
4 -2 roll m
dtransform round exch round exch idtransform 
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed 
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
false setoverprint 
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
/printerRes 
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency} 
{GrayAngle GrayFrequency} 
{0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
}
ifelse
} bdf
/nextrelease defed { 
/languagelevel defed not { 
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max 
printerRes div 
gradfrequency mul 
round 
5 max 
min 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known 
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup} 
{dup} ifelse 
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def 
{ 
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall 
NF
}bdf
/MN{
1 index length 
/Len exch def 
dup length Len add 
string dup 
Len 
4 -1 roll 
putinterval 
dup 
0 
4 -1 roll 
putinterval 
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll 
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFJ{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCJ} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup 
hasfont 
not 
{ 
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFJ{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/GS {
dup 
hasfont 
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFK 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFK{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCK} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup 
hasfont 
not 
{ 
pop
/JCsm
hasfont 
{
/JCsm
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFK{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFK 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFTC 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFTC{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCTC} 
ifelse
}bdf
/FDFTC
{
dup 
hasfont 
not 
{ 
pop
/DFMing-Lt-HK-BF
hasfont 
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFTC{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFTC 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/fps{
currentflat 
exch 
dup 0 le{pop 1}if 
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
}loop 
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf

userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
/Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog

%%BeginSetup

AltsysDict begin
_bfh 

_efh 
end %. AltsysDict

%%EndSetup
AltsysDict begin 

/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
max max max 
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{ 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx 
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop 
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
1 pop 
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 2 lt {pop 2} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop 
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
AltsysDict /cvc 2 index put 
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor} ifelse }
ifelse
}bdf 
0 setseparationgray
/imgr {1692.47 1570.59 2287.75 2412.48 } def 
/bleed 0 def 
/clpr {1692.47 1570.59 2287.75 2412.48 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 

userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
0.15 0.15 scale %JND
-1845 -2006 translate

/currentpacking defed{false setpacking}if 
/spots[

1 0 0 0 (Process Cyan) false newcmykcustomcolor

0 1 0 0 (Process Magenta) false newcmykcustomcolor

0 0 1 0 (Process Yellow) false newcmykcustomcolor

0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1848.4365 2094.0422 m
1848.4365 2140.987 1886.4917 2179.0422 1933.4365 2179.0422 C
1980.3813 2179.0422 2018.4365 2140.987 2018.4365 2094.0422 C
2018.4365 2047.0974 1980.3813 2009.0422 1933.4365 2009.0422 C
1886.4917 2009.0422 1848.4365 2047.0974 1848.4365 2094.0422 C
5.3858 w
3.863693 M
s 
n
true eomode
1880.5612 2118.7403 m
1880.5612 2121.7396 1881.6862 2124.8795 1883.9362 2128.1622 C
1886.1862 2131.4889 1888.4581 2133.1522 1890.7565 2133.1544 C
1892.2089 2133.1544 1893.4042 2132.5677 1894.3424 2131.3966 C
1895.3268 2130.2233 1895.819 2128.7467 1895.819 2126.9669 C
1895.819 2124.0599 1894.6237 2121.0826 1892.233 2118.0372 C
1889.8885 2114.9896 1887.6144 2113.4669 1885.4127 2113.4669 C
1884.0526 2113.4669 1882.9034 2113.9591 1881.9674 2114.9435 C
1881.0292 2115.974 1880.5612 2117.2396 1880.5612 2118.7403 C
h
1948.2018 2061.1544 m
1978.4362 2061.0138 L
1980.451 2062.6068 1981.9034 2064.3163 1982.7955 2066.1466 C
1983.7316 2068.0209 1984.1996 2070.2005 1984.2018 2072.6857 C
1984.2018 2073.2482 L
1969.2252 2099.6153 L
1969.2252 2099.3341 1969.2472 2098.8639 1969.2955 2098.2091 C
1969.3417 2097.5983 1969.3636 2097.1544 1969.3658 2096.8732 C
1969.3658 2089.888 1967.5597 2083.3732 1963.9518 2077.3263 C
1960.3878 2071.2794 1955.1385 2065.8873 1948.2018 2061.1544 C
h
1905.8737 2139.4825 m
1910.0924 2124.2247 L
1964.233 2092.5841 L
1964.6066 2094.3177 1964.8636 2095.724 1965.0065 2096.8028 C
1965.1471 2097.9278 1965.2174 2098.9122 1965.2174 2099.756 C
1965.2174 2100.4108 1965.1691 2101.5599 1965.0768 2103.2013 C
1964.9823 2103.5748 1964.9362 2103.8561 1964.9362 2104.045 C
1905.8737 2139.4825 L
h
1908.4752 2120.3575 m
1898.983 2105.5216 L
1954.3893 2072.8263 L
1956.4987 2074.7005 1958.2565 2076.8561 1959.6627 2079.295 C
1961.1151 2081.7779 1962.2863 2084.6608 1963.1783 2087.9435 C
1908.4752 2120.3575 L
h
1896.2408 2102.3575 m
1880.5612 2099.0528 L
1942.9283 2062.631 L
1944.5675 2063.5209 1946.0682 2064.5272 1947.4283 2065.6544 C
1948.7863 2066.7794 1950.0057 2068.0209 1951.0846 2069.381 C
1896.2408 2102.3575 L
h
1871.2096 2120.7794 m
1876.3424 2102.3575 L
1894.2018 2105.9435 L
1906.1549 2125.2794 L
1900.8815 2142.506 L
1882.7408 2139.2013 L
1871.2096 2120.7794 L
h
1866.7096 2121.4825 m
1880.1393 2142.3653 L
1901.3033 2146.5841 L
1963.6705 2109.3888 L
1968.0299 2106.8092 1971.005 2103.9747 1972.6002 2100.881 C
1972.8815 2100.2701 1973.1144 2099.8021 1973.3033 2099.4747 C
1991.444 2068.256 L
1991.6769 2067.8341 1992.0043 2067.2474 1992.4283 2066.4982 C
1994.0675 2064.013 1994.8871 2062.0904 1994.8893 2060.7325 C
1994.8893 2059.4186 1994.3971 2058.4825 1993.4127 2057.92 C
1992.4745 2057.4037 1990.6705 2057.1466 1987.9987 2057.1466 C
1948.0612 2057.1466 L
1946.4198 2057.1466 1944.7784 2057.4037 1943.1393 2057.92 C
1941.4979 2058.4825 1939.4127 2059.513 1936.8815 2061.0138 C
1873.6705 2098.631 L
1866.7096 2121.4825 L
true setoverprint
f 
false setoverprint
n
vmr
vmr
end
%%Trailer
