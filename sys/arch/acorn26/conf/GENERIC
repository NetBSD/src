# $NetBSD: GENERIC,v 1.81.2.2 2017/08/28 17:51:26 skrll Exp $
#
# GENERIC machine description file
# 
# This machine description file is used to generate the default NetBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

include 	"arch/acorn26/conf/std.acorn26"

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

maxusers 8

# CPU support
options 	CPU_ARM2
options 	CPU_ARM250
options 	CPU_ARM3

# Diagnostic/debugging support options
#options 	DIAGNOSTIC		# Cheap kernel consistency checks
#options 	DEBUG			# More expensive checks and printfs
options 	DDB			# kernel debugger
#options 	SYSCALL_DEBUG		# trace syscall entry/exit
#options 	SCSIDEBUG
#options 	UVMHIST

## Compile the kernel with debugging symbols (`netbsd.gdb' is the debug file),
## such that gdb(1) can be used on a kernel coredump.
#makeoptions	DEBUG="-g"

# File systems
file-system	FFS		# Fast file system
file-system	LFS		# log-structured file system
file-system	MFS		# Memory-based file system
file-system 	EXT2FS		# second extended file system (linux)
file-system	CD9660		# ISO-9660 CD-ROM FS (w/RockRidge extensions)
file-system	FILECORE	# Acorn filecore file system
file-system 	ADOSFS		# AmigaDOS-compatible file system
file-system	MSDOSFS		# MS-DOS-compatible file system
file-system	NTFS		# Windows/NT file system (experimental)
file-system	NFS		# Sun NFS-compatible file system client
file-system	NULLFS		# loopback file system
file-system 	OVERLAY		# overlay filesystem
file-system	PUFFS		# Userspace file systems (e.g. ntfs-3g & sshfs)
file-system	UMAPFS		# NULLFS + uid and gid remapping
#file-system	UNION		# union file system
file-system	PROCFS		# /proc
file-system	KERNFS		# /kern
file-system	FDESC		# /dev/fd
file-system	PTYFS		# /dev/pts/N support
file-system	TMPFS		# Efficient memory file-system
#file-system	UDF		# experimental - OSTA UDF CD/DVD file-system

# File system options
options 	QUOTA		# legacy UFS quotas
options 	QUOTA2		# new, in-filesystem UFS quotas
options 	NFSSERVER	# Sun NFS-compatible file system server
options 	FFS_EI		# FFS endianness-independence support
options 	WAPBL		# File system journaling support
#options	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support
options 	UFS_EXTATTR	# Extended attribute support for UFS1

# Executable format options
options 	EXEC_ELF32
options 	EXEC_SCRIPT

# Networking options
options 	GATEWAY		# packet forwarding
options 	INET		# Internet protocol suite
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
#options 	NETATALK	# AppleTalk networking
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

#options 	COMPAT_43	# 4.3BSD compatibility.
options 	COMPAT_16	# NetBSD 1.6 binary compatibility.
options		COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

# Binary compatibility with previous versions of NetBSD.
# None yet, since NetBSD/acorn26 hasn't been released.

# System V IPC
options 	SYSVMSG		# System V-like message queues
options 	SYSVSEM		# System V-like semaphores
options 	SYSVSHM		# System V-like shared memory

# Miscellaneous kernel options
options 	KTRACE		# system call tracing, a la ktrace(1)
#options 	IRQSTATS	# manage IRQ statistics
#options 	SCSIVERBOSE	# Verbose SCSI errors
options 	NTP		# Kernel PLL for ntpd(8).
options 	USERCONF	# userconf(4) support
#options	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel

# Enable experimental buffer queue strategy for better responsiveness under 
# high disk I/O load. Use it with caution - it's not proven to be stable yet.
#options 	BUFQ_READPRIO
#options 	BUFQ_PRIOCSCAN

# Disable kernel security.
#options 	INSECURE

# NFS boot options
options 	NFS_BOOT_DHCP		# superset of BOOTP
options 	NFS_BOOT_BOOTPARAM
options 	NFS_BOOT_RWSIZE=1024	# XXX "ea" driver bug workaround

# WS console uses DUMB, SUN or VT100 terminal emulation
#options 	WSEMUL_NODUMB
#options 	WSEMUL_SUN
options 	WSEMUL_VT100
options 	WSDISPLAY_COMPAT_USL		# wsconscfg VT handling
options 	FONT_VT220L8x8		# 8x8 font for console

config		netbsd	root on ? type ?
#config		netbsd	root on sd0 type ffs
#config		netbsd	root on ? type nfs

cpu0		at root

iobus0		at root			# 16-bit I/O bus

ioc0		at iobus0 base 0x200000	# I/O controller

iociic0		at ioc0			# I^2C serial bus
iic0		at iociic0

pcfrtc0		at iic0 addr 0x50	# Real-time clock

arckbd0 	at ioc0 bank 0 offset 0x04 # System keyboard
wskbd0		at arckbd0
wsmouse0	at arckbd0

ioeb0		at ioc0 bank 5		# I/O Extension Block (A5000)
latches0	at ioc0 bank 5		# Printer/FDC control latches (Arc)

podulebus0	at ioc0 bank 4		# Expansion card bus
unixbp0 	at ioc0 bank 6		# Unix Backplane (interrupt routing)

ei*		at podulebus0 slot ?	# Acorn AKA25 (Ether1)
ea*		at podulebus0 slot ?	# Atomwide Ether3
eh*		at podulebus0 slot ?	# i-cubed EtherH (E100/200/500)

dtide*		at podulebus0 slot ?	# D.T. Software IDE interface
atabus* 	at dtide? channel ?	# ATA bus

hcide*		at podulebus0 slot ?	# HCCS IDE interface
atabus* 	at hcide? channel ?	# ATA bus

sec*		at podulebus0 slot ?	# Acorn SCSI interface
scsibus*	at sec?

hcsc*		at podulebus0 slot ?	# HCCS 8-bit SCSI interface
scsibus*	at hcsc?

oak*		at podulebus0 slot ?	# Oak Solutions 16-bit SCSI interface
scsibus*	at oak?

esp*		at podulebus0 slot ?	# Castle SCSI interface
scsibus*	at esp?

upc0		at iobus0 base 0x010000	# I/O chip on IOEB machines
com0		at upc0			# Serial port
lpt0		at upc0			# Parallel port
wdc0		at upc0			# IDE controller
atabus* 	at wdc?			# ATA bus

wd*		at atabus? drive ?	# IDE hard discs
atapibus*	at atabus?		# ATAPI devices

cd*		at atapibus? drive ?	# ATAPI CD-ROM drives
sd*		at atapibus? drive ? 	# ATAPI disk drives
uk*		at atapibus? drive ?	# ATAPI unknown

sd*		at scsibus? target ? lun ?	# SCSI disk drives
st*		at scsibus? target ? lun ?	# SCSI tape drives
cd*		at scsibus? target ? lun ?	# SCSI CD-ROM drives
ch*		at scsibus? target ? lun ?	# SCSI auto-changers
uk*		at scsibus? target ? lun ?	# SCSI unknown device
ss*		at scsibus? target ? lun ?	# SCSI scanner

arcvideo0	at root			# On-board video
wsdisplay0	at arcvideo0

#
# accept filters
pseudo-device   accf_data		# "dataready" accept filter
pseudo-device   accf_http		# "httpready" accept filter

pseudo-device	bpfilter
#pseudo-device	carp			# Common Address Redundancy Protocol
pseudo-device	ccd
#pseudo-device	cgd			# cryptographic disk devices
pseudo-device	raid			# RAIDframe disk driver
options 	RAID_AUTOCONFIG		# auto-configuration of RAID components
# Options to enable various other RAIDframe RAID types.
# options	RF_INCLUDE_EVENODD=1
# options	RF_INCLUDE_RAID5_RS=1
# options	RF_INCLUDE_PARITYLOGGING=1
# options	RF_INCLUDE_CHAINDECLUSTER=1
# options	RF_INCLUDE_INTERDECLUSTER=1
# options 	RF_INCLUDE_PARITY_DECLUSTERING=1
# options	RF_INCLUDE_PARITY_DECLUSTERING_DS=1
pseudo-device	fss			# file system snapshot device
#pseudo-device	ipfilter
pseudo-device	loop
pseudo-device	md		
#options 	MEMORY_DISK_HOOKS
#options 	MEMORY_DISK_ROOT_SIZE=
pseudo-device	ppp		
pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
pseudo-device	pty			# pseudo-terminals
pseudo-device	sl		
pseudo-device	vnd		
#options 	VND_COMPRESSION		# compressed vnd(4)
pseudo-device	gre			# generic L3 over IP tunnel
pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC1933)
pseudo-device	faith			# IPv[46] tcp relay translation i/f
pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
pseudo-device	vlan			# IEEE 802.1q encapsulation
pseudo-device	bridge			# simple inter-network bridging
#options	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
pseudo-device	agr			# IEEE 802.3ad link aggregation
pseudo-device	sequencer		# MIDI sequencer
pseudo-device	wsmux			# keyboard/mouse multiplexor
pseudo-device	clockctl		# user control of clock subsystem
pseudo-device	ksyms			# /dev/ksyms
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if
pseudo-device	putter		# for puffs and pud

# Veriexec
#
# a pseudo device needed for veriexec
#pseudo-device	veriexec
#
# Uncomment the fingerprint methods below that are desired. Note that
# removing fingerprint methods will have almost no impact on the kernel
# code size.
#
#options VERIFIED_EXEC_FP_RMD160
#options VERIFIED_EXEC_FP_SHA256
#options VERIFIED_EXEC_FP_SHA384
#options VERIFIED_EXEC_FP_SHA512
#options VERIFIED_EXEC_FP_SHA1
#options VERIFIED_EXEC_FP_MD5
