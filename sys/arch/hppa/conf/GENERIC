# $NetBSD: GENERIC,v 1.4 2014/10/11 10:06:15 uebayasi Exp $
#
# GENERIC machine description file
#
# This machine description file is used to generate the default NetBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

include 	"arch/hppa/conf/std.hppa"

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel

#ident 		"GENERIC-$Revision: 1.4 $"

maxusers	32		# estimated number of users

# CPU support.  At least one is REQUIRED.
options 	HP7000_CPU		# PCX, PCX-S
options 	HP7100_CPU,HP7150_CPU	# PCX-T
options 	HP7100LC_CPU		# PCX-L
options 	HP7200_CPU,HP7250_CPU	# PCX-T'
options 	HP7300LC_CPU		# PCX-L2
options 	HP8000_CPU		# PCX-U  (in 32bit mode)
options 	HP8200_CPU		# PCX-V/U+ (in 32bit mode)
options 	HP8500_CPU		# PCX-W  (in 32bit mode)
options 	HP8600_CPU		# PCX-W+ (in 32bit mode)
options 	HP8700_CPU		# PCX-W2 (in 32bit mode)

# CPU-related options.
options 	USELEDS		# blink 'em

# delay between "rebooting ..." message and hardware reset, in milliseconds
#options 	CPURESET_DELAY=2000

# Standard system options

options 	INSECURE	# disable kernel security levels

options 	NTP		# NTP phase/frequency locked loop

options 	KTRACE		# system call tracing via ktrace(1)

options 	SYSVMSG		# System V-like message queues
options 	SYSVSEM		# System V-like semaphores
options 	SYSVSHM		# System V-like memory sharing

options 	USERCONF	# userconf(4) support

# Enable experimental buffer queue strategy for better responsiveness under
# high disk I/O load. Use it with caution - it's not proven to be stable yet.
#options 	BUFQ_READPRIO
#options 	BUFQ_PRIOCSCAN

# Diagnostic/debugging support options
#options 	DIAGNOSTIC	# expensive kernel consistency checks
#options 	DEBUG		# expensive debugging checks/support
#options 	KMEMSTATS	# kernel memory statistics (vmstat -m)
options 	DDB		# in-kernel debugger
options 	DDB_HISTORY_SIZE=512	# enable history editing in DDB
#options 	KGDB		# remote debugger
#options 	KGDB_DEVNAME="\"com\"",KGDBADDR=0xf0822000,KGDBRATE=9600
#makeoptions	DEBUG="-g"	# compile full symbol table

# Compatibility options
options 	COMPAT_20	# NetBSD 2.0,
options 	COMPAT_30	# NetBSD 3.0,
options 	COMPAT_40	# NetBSD 4.0,
options 	COMPAT_50	# NetBSD 5.0,
options 	COMPAT_60	# NetBSD 6.0, and
options 	COMPAT_70	# NetBSD 7.0 binary compatibility.
options 	COMPAT_43	# and 4.3BSD
#options 	TCP_COMPAT_42	# 4.2BSD TCP/IP bug compat. Not recommended.

#options 	COMPAT_OSF1	# OSF1 binary compatibility
#options 	COMPAT_LINUX	# binary compatibility with Linux
options		COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

# File systems
file-system 	FFS		# UFS
file-system 	EXT2FS		# second extended file system (linux)
file-system 	LFS		# log-structured file system
file-system 	MFS		# memory file system
file-system 	NFS		# Network File System client
file-system 	NTFS		# Windows/NT file system (experimental)
file-system 	CD9660		# ISO 9660 + Rock Ridge file system
file-system 	MSDOSFS		# MS-DOS file system
file-system 	FDESC		# /dev/fd
file-system 	KERNFS		# /kern
file-system 	NULLFS		# loopback file system
file-system 	OVERLAY		# overlay file system
file-system	PUFFS		# Userspace file systems (e.g. ntfs-3g & sshfs)
file-system 	PROCFS		# /proc
file-system 	UMAPFS		# NULLFS + uid and gid remapping
file-system 	UNION		# union file system
file-system	CODA		# Coda File System; also needs vcoda (below)
file-system	PTYFS		# /dev/pts/N support
file-system	TMPFS		# Efficient memory file-system
#file-system	UDF		# experimental - OSTA UDF CD/DVD file-system

# File system options
options 	QUOTA		# legacy UFS quotas
options 	QUOTA2		# new, in-filesystem UFS quotas
#options 	FFS_EI		# FFS Endian Independent support
options 	WAPBL		# File system journaling support
#options	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
options 	NFSSERVER	# Network File System server
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support
#options 	EXT2FS_SYSTEM_FLAGS # makes ext2fs file flags (append and
				# immutable) behave as system flags.

# Networking options
#options 	GATEWAY		# packet forwarding
options 	INET		# IP + ICMP + TCP + UDP
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
#options 	NETATALK	# AppleTalk networking protocols
options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
options 	PPP_DEFLATE	# Deflate compression support for PPP
options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
options 	IPFILTER_LOG	# ipmon(8) log support
options 	IPFILTER_LOOKUP	# ippool(8) support
options 	IPFILTER_COMPAT # Compat for IP-Filter
#options 	IPFILTER_DEFAULT_BLOCK	# block all packets by default
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
options 	GSCVERBOSE	# verbose GSC device autoconfig messages
options 	PCIVERBOSE	# verbose PCI device autoconfig messages
options 	EISAVERBOSE	# verbose EISA device autoconfig messages
options 	MIIVERBOSE	# verbose PHY autoconfig messages
options 	SCSIVERBOSE	# human readable SCSI error messages

options 	NFS_BOOT_DHCP,NFS_BOOT_BOOTPARAM

#
# wscons options
#
# builtin terminal emulations
#options 	WSEMUL_SUN		# sun terminal emulation
options 	WSEMUL_VT100		# VT100 / VT220 emulation
# customization of console and kernel output - see dev/wscons/wsdisplayvar.h
options 	WSDISPLAY_CUSTOM_OUTPUT	# color customization from wsconsctl(8)
#options 	WS_DEFAULT_FG=WSCOL_WHITE
#options 	WS_DEFAULT_BG=WSCOL_BLACK
#options 	WS_DEFAULT_COLATTR=""
#options 	WS_DEFAULT_MONOATTR=""
options 	WS_KERNEL_FG=WSCOL_GREEN
#options 	WS_KERNEL_BG=WSCOL_BLACK
#options 	WS_KERNEL_COLATTR=""
#options 	WS_KERNEL_MONOATTR=""
# customization of console border color
options 	WSDISPLAY_CUSTOM_BORDER	# border customization from wsconsctl(8)
#options 	WSDISPLAY_BORDER_COLOR=WSCOL_BLUE	# default color
# compatibility to other console drivers
options 	WSDISPLAY_COMPAT_PCVT		# emulate some ioctls
options 	WSDISPLAY_COMPAT_SYSCONS	# emulate some ioctls
options 	WSDISPLAY_COMPAT_USL		# wsconscfg VT handling
options 	WSDISPLAY_COMPAT_RAWKBD		# can get raw scancodes
# see dev/pckbport/wskbdmap_mfii.c for implemented layouts
#options 	PCKBD_LAYOUT="(KB_DE | KB_NODEAD)"
# allocate a number of virtual screens at autoconfiguration time
#options 	WSDISPLAY_DEFAULTSCREENS=4
# use a large software cursor that doesn't blink
options 	PCDISPLAY_SOFTCURSOR
# modify the screen type of the console; defaults to "80x25"
#options 	VGA_CONSOLE_SCREENTYPE="\"80x24\""
# work around a hardware bug that loaded fonts don't work; found on ATI cards
#options 	VGA_CONSOLE_ATI_BROKEN_FONTSEL
# console scrolling support.
#options 	WSDISPLAY_SCROLLSUPPORT
# enable VGA raster mode capable of displaying multilingual text on console
#options 	VGA_RASTERCONSOLE

# Kernel root file system and dump configuration.
config		netbsd	root on ? type ?
#config		netbsd	root on sd0a type ffs
#config		netbsd	root on ? type nfs

#
# Device configuration
#

mainbus0 at root

# CPU and memory - DO NOT REMOVE THESE
cpu*	at mainbus0 irq 31	# HP PA-RISC CPU
mem*	at mainbus0		# /dev/*mem and memory controller

# Coprocessor/SFU Support
#fpu*	at mainbus0		# HP PA-RISC fpu (iv N/A)
#pmu*	at mainbus0		# HP PA-RISC perfomance monitor unit (iv 29)

# Miscellaneous
pdc0	at mainbus0		# PDC/IODC wrapper for boot console
power0	at mainbus0		# power/fail manager
lcd0	at mainbus0		# LCD

# Basic Bus Support
lasi0	at mainbus0 irq 28	# LASI host adapter
lasi0	at phantomas0 irq 28	# LASI on [AB]*
lasi0	at uturn? irq 28	# LASI on [CJ]*
lasi1	at mainbus0 irq 27	# 712 GIO card
asp*	at mainbus0 irq 28	# this one comes w/ Viper and LEDs
wax*	at mainbus0		# Wax GSC to GSC Bus Adapter
mongoose* at mainbus0		# EISA Bus Adapter ( i82350 or TI??? )
#vmeb*	at mainbus0 irq ?	# VME bus adapter
phantomas*	at mainbus0	# Phantom PseudoBC GSC+ Port

lasi*	at phantomas?		# LASI on [ABCJ?]*
dino*	at phantomas?		# PCI bus bridge
wax*	at phantomas?		# Wax GSC to GSC Bus Adapter

# GSC bus support
gsc*	at lasi?		# 712
gsc*	at asp?			# 7xx (old)
gsc*	at wax?			# {725,715}/{64,80,100}, C*, B*, J*

# Wax GSC to EISA Bus Adapter
#weisa*	at mainbus0		# 7xx
#weisa*	at gsc?			# C*, B*

# Uturn/U2 IOA
uturn0	at mainbus0		# U2/UTurn Runway IOA
uturn1	at mainbus0
lasi*	at uturn?		# LASI on [CJ]*
dino*	at uturn?		# PCI bus bridge
#wax*	at uturn?		# Wax on C*

#gecko*	at uturn?		# GeckoBOA
#lasi*	at gecko?		# LASI
#dino*	at gecko?		# PCI bus bridge
#wax*	at gecko?		# Wax GSC to GSC Bus Adapter

# Astro memory & I/O controller 
astro*	at mainbus0		# Astro memory & I/O controller
elroy*	at astro?

# PCI bus support
pci*	at elroy?
pci*	at dino?
com*	at dino?
ppb*	at pci? dev ? function ?
pci*	at ppb?

ssio*	at pci?

# EISA bus support
eisa*	at mongoose?
#eisa*	at weisa?

# ISA bus support
# Beware: Most ISA MI drivers are not endianness clean!
#isa*	at mongoose?
#isa*	at weisa?

# VME bus support
#vme*	at vmeb?

# Console Devices

# STI graphics
sti*	at mainbus0		# [H]CRX-{8,24,48}[Z] and Visualize graphics
sti*	at phantomas?		# [H]CRX-{8,24,48}[Z] and Visualize graphics
sti*	at uturn?
sti*	at pci?			# EG-PCI, FX*

# Human Interface Loop
hil*		at gsc? irq 1	# Human Interface Loop, kbd and mouse
hilkbd*		at hil?		# keyboard, knob and buttons
hilms*		at hil?		# mouse and tablets
hilid*		at hil?		# ID module

# wscons
gsckbc*		at gsc?			# pc keyboard controller
pckbd*		at gsckbc?		# PC keyboard
pms*		at gsckbc?		# PS/2 mouse for wsmouse
wskbd*		at pckbd? console ?
wsmouse*	at pms? mux 0
wskbd*		at hilkbd? console ?
wsmouse*	at hilms? mux 0
wsdisplay*	at sti?

# Serial Devices

# SSIO serial interfaces
com0	at ssio? irq 4
com1	at ssio? irq 3

# GSC serial interfaces
com*	at gsc?				# RS/232 serial port

# PCI serial interfaces
puc*	at pci? dev ? function ?	# PCI "universal" comm. cards
com*	at puc? port ?			# 16x50s on "universal" comm boards
cy*	at pci? dev ? function ?	# Cyclades Cyclom-Y serial boards
cz*	at pci? dev ? function ?	# Cyclades-Z multi-port serial boards

# Parallel Printer Interfaces

# SSIO parallel printer interface
lpt0	at ssio?

# GSC parallel printer interface
lpt*	at gsc?

# PCI parallel printer interfaces
lpt*	at puc? port ?			# || ports on "universal" comm boards

# SCSI Controllers and Devices

# GSC SCSI controllers
oosiop*	at gsc?				# NCR 53c700
osiop*	at gsc? flags 0x00000		# NCR 53c710
siop*	at gsc?				# NCR 53c720 (Fast/Wide)
siop*	at mainbus0			# NCR 53c720 (Fast/Wide)
siop*	at phantomas?			# NCR 53c720 (Fast/Wide)
siop*	at uturn? 			# NCR 53c720 (Fast/Wide)

# PCI SCSI controllers
adv*	at pci? dev ? function ?	# AdvanSys 1200[A,B], 9xx[U,UA] SCSI
adw*	at pci? dev ? function ?	# AdvanSys 9x0UW[D], 3940U[2,3]W SCSI
ahc*	at pci? dev ? function ?	# Adaptec [23]94x, aic78x0 SCSI
ahd*	at pci? dev ? function ?	# Adaptec 29320, 39320 (aic790x) SCSI
bha*	at pci? dev ? function ?	# BusLogic 9xx SCSI
dpt*	at pci? dev ? function ?	# DPT SmartCache/SmartRAID
iha*	at pci? dev ? function ?	# Initio INIC-940/950 SCSI
isp*	at pci? dev ? function ?	# Qlogic ISP [12]0x0 SCSI/FibreChannel
mly*	at pci? dev ? function ?	# Mylex AcceleRAID and eXtremeRAID
mpt*	at pci? dev ? function ?	# LSI Fusion SCSI/FC
pcscp*	at pci? dev ? function ?	# AMD 53c974 PCscsi-PCI SCSI
siop*	at pci? dev ? function ?	# Symbios 53c8xx SCSI
esiop*	at pci? dev ? function ?	# Symbios 53c875 SCSI and newer
#options 	SIOP_SYMLED		# drive the act. LED in software
trm*	at pci? dev ? function ?	# Tekram DC-395U/UW/F, DC-315/U SCSI

# EISA SCSI controllers
ahb*	at eisa? slot ?			# Adaptec 174[02] SCSI
ahc*	at eisa? slot ?			# Adaptec 274x, aic7770 SCSI
bha*	at eisa? slot ?			# BusLogic 7xx SCSI
dpt*	at eisa? slot ?			# DPT EATA SCSI
uha*	at eisa? slot ?			# UltraStor 24f SCSI

# SCSI bus support
scsibus* at scsi?

# SCSI devices
sd*	at scsibus? target ? lun ?	# SCSI disk drives
st*	at scsibus? target ? lun ?	# SCSI tape drives
cd*	at scsibus? target ? lun ?	# SCSI CD-ROM drives
ch*	at scsibus? target ? lun ?	# SCSI autochangers
ses*	at scsibus? target ? lun ?	# SCSI Enclosure Services devices
ss*	at scsibus? target ? lun ?	# SCSI scanners
uk*	at scsibus? target ? lun ?	# SCSI unknown


# RAID controllers and devices
# aac is broken
#aac*	at pci? dev ? function ?	# Adaptec AAC family
amr*	at pci? dev ? function ?	# AMI/LSI Logic MegaRAID
cac*	at eisa? slot ?			# Compaq EISA array controllers
cac*	at pci? dev ? function ?	# Compaq PCI array controllers
icp*	at pci? dev ? function ?	# ICP-Vortex GDT & Intel RAID
mlx*	at pci? dev ? function ?	# Mylex DAC960 & DEC SWXCR family
mlx*	at eisa? slot ?			# Mylex DAC960 & DEC SWXCR family
twe*	at pci? dev ? function ?	# 3ware Escalade RAID controllers

#ld*	at aac? unit ?			# logical disk devices
ld*	at amr? unit ?
ld*	at cac? unit ?
ld*	at icp? unit ?
ld*	at mlx? unit ?
ld*	at twe? unit ?

icpsp*	at icp? unit ?			# SCSI pass-through

# IDE and related devices
# PCI IDE controllers - see pciide(4) for supported hardware.
# The 0x0001 flag force the driver to use DMA, even if the driver doesn't know
# how to set up DMA modes for this chip. This may work, or may cause
# a machine hang with some controllers.
pciide* 	at pci? dev ? function ? flags 0x0000	# GENERIC pciide driver
acardide*	at pci? dev ? function ?	# Acard IDE controllers
aceride* 	at pci? dev ? function ?	# Acer Lab IDE controllers
artsata* 	at pci? dev ? function ?	# Intel i31244 SATA controller
cmdide* 	at pci? dev ? function ?	# CMD tech IDE controllers
cypide* 	at pci? dev ? function ?	# Cypress IDE controllers
geodeide* 	at pci? dev ? function ?	# AMD Geode IDE controllers
hptide* 	at pci? dev ? function ?	# Triones/HighPoint IDE controllers
nside*  	at pci? dev ? function ?	# National Semiconductor IDE controllers
optiide* 	at pci? dev ? function ?	# Opti IDE controllers
pdcide* 	at pci? dev ? function ?	# Promise IDE controllers
pdcsata*	at pci? dev ? function ?	# Promise SATA150 controllers
rccide* 	at pci? dev ? function ?	# ServerWorks IDE controllers
satalink*	at pci? dev ? function ?	# SiI SATALink controllers
siside* 	at pci? dev ? function ?	# SiS IDE controllers
slide*  	at pci? dev ? function ?	# Symphony Labs IDE controllers
stpcide*	at pci? dev ? function ?	# STMicro STPC IDE controllers
viaide* 	at pci? dev ? function ?	# VIA/AMD/Nvidia IDE controllers

# ATA (IDE) bus support
atabus* at ata?

# IDE drives
# Flags are used only with controllers that support DMA operations
# and mode settings (e.g. some pciide controllers)
# The lowest order four bits (rightmost digit) of the flags define the PIO
# mode to use, the next set of four bits the DMA mode and the third set the
# UltraDMA mode. For each set of four bits, the 3 lower bits define the mode
# to use, and the last bit must be 1 for this setting to be used.
# For DMA and UDMA, 0xf (1111) means 'disable'.
# 0x0fac means 'use PIO mode 4, DMA mode 2, disable UltraDMA'.
# (0xc=1100, 0xa=1010, 0xf=1111)
# 0x0000 means "use whatever the drive claims to support".
wd*	at atabus? drive ? flags 0x0000

# ATA RAID configuration support, as found on some Promise controllers.
pseudo-device	ataraid
ld*	at ataraid? vendtype ? unit ?

# ATAPI bus support
atapibus* at atapi?

# ATAPI devices
# flags have the same meaning as for IDE drives.
cd*	at atapibus? drive ? flags 0x0000	# ATAPI CD-ROM drives
sd*	at atapibus? drive ? flags 0x0000	# ATAPI disk drives
st*	at atapibus? drive ? flags 0x0000	# ATAPI tape drives
uk*	at atapibus? drive ? flags 0x0000	# ATAPI unknown

# Miscellaneous mass storage devices

# GSC floppy
#fdc*	at gsc? 			# PC floppy controller (WD37C65C)
#fd*	at fdc? drive ?			# the drives themselves

# Network Interfaces

# GSC network interfaces
#medusa* at gsc?			# FDDI
ie*	at gsc?				# old 82C5[89]6 Ethernet, use iee(4)
iee*	at gsc?				# 82C596 Ethernet

# PCI network interfaces
an*	at pci? dev ? function ?	# Aironet PC4500/PC4800 (802.11)
atw*	at pci? dev ? function ?	# ADMtek ADM8211 (802.11)
bce* 	at pci? dev ? function ?	# Broadcom 4401 10/100 Ethernet
bge* 	at pci? dev ? function ?	# Broadcom 570x gigabit Ethernet
# en is broken, uses vtophys
#en*	at pci? dev ? function ?	# ENI/Adaptec ATM
ep*	at pci? dev ? function ?	# 3Com 3c59x
epic*	at pci? dev ? function ?	# SMC EPIC/100 Ethernet
esh*	at pci? dev ? function ?	# Essential HIPPI card
ex*	at pci? dev ? function ?	# 3Com 90x[BC]
# fpa is broken, does funky things with bus_dma
#fpa*	at pci? dev ? function ?	# DEC DEFPA FDDI
fxp*	at pci? dev ? function ?	# Intel EtherExpress PRO 10+/100B
gsip*	at pci? dev ? function ?	# NS83820 Gigabit Ethernet
le*	at pci? dev ? function ?	# PCnet-PCI Ethernet
lmc*	at pci? dev ? function ?	# Lan Media Corp SSI/HSSI/DS3
mtd*	at pci? dev ? function ?	# Myson MTD803 3-in-1 Ethernet
ne*	at pci? dev ? function ?	# NE2000-compatible Ethernet
ntwoc*	at pci? dev ? function ?	# Riscom/N2 PCI Sync Serial
pcn*	at pci? dev ? function ?	# AMD PCnet-PCI Ethernet
re*	at pci? dev ? function ?	# Realtek 8139C+/8169/8169S/8110S
rtk*	at pci? dev ? function ?	# Realtek 8129/8139
sf*	at pci? dev ? function ?	# Adaptec AIC-6915 Ethernet
sip*	at pci? dev ? function ?	# SiS 900/DP83815 Ethernet
skc*	at pci? dev ? function ?	# SysKonnect SK9821 Gigabit Ethernet
sk*	at skc?				# SysKonnect SK9821 Gigabit Ethernet
ste*	at pci? dev ? function ?	# Sundance ST-201 Ethernet
stge*	at pci? dev ? function ?	# Sundance/Tamarack TC9021 Gigabit
ti*	at pci? dev ? function ?	# Alteon ACEnic gigabit Ethernet
tl*	at pci? dev ? function ?	# ThunderLAN-based Ethernet
tlp*	at pci? dev ? function ?	# DECchip 21x4x and clones
vr*	at pci? dev ? function ?	# VIA Rhine Fast Ethernet
wi*	at pci? dev ? function ?	# Intersil Prism Mini-PCI (802.11b)
wm*	at pci? dev ? function ?	# Intel 8254x gigabit

# EISA network interfaces
ep*	at eisa? slot ?			# 3Com 3c579 Ethernet
#fea*	at eisa? slot ?			# DEC DEFEA FDDI
tlp*	at eisa? slot ?			# DEC DE-425 Ethernet
#sh*	at eisa? slot ?			# Interphase Seahawk 4811 FDDI
#ie*	at eisa? slot ?			# Intel Ethernet

# MII/PHY support
acphy*	at mii? phy ?			# Altima AC101 and AMD Am79c874 PHYs
amhphy* at mii? phy ?			# AMD 79c901 Ethernet PHYs
bmtphy* at mii? phy ?			# Broadcom BCM5201 and BCM5202 PHYs
brgphy* at mii? phy ?			# Broadcom BCM5400-family PHYs
dmphy*	at mii? phy ?			# Davicom DM9101 PHYs
exphy*	at mii? phy ?			# 3Com internal PHYs
gentbi* at mii? phy ?			# Generic Ten-Bit 1000BASE-[CLS]X PHYs
glxtphy* at mii? phy ?			# Level One LXT-1000 PHYs
gphyter* at mii? phy ?			# NS83861 Gig-E PHY
icsphy* at mii? phy ?			# Integrated Circuit Systems ICS189x
igphy*	at mii? phy ?			# Intel IGP01E1000
ikphy*	at mii? phy ?			# Intel 82563 PHYs
inphy*	at mii? phy ?			# Intel 82555 PHYs
iophy*	at mii? phy ?			# Intel 82553 PHYs
lxtphy* at mii? phy ?			# Level One LXT-970 PHYs
makphy* at mii? phy ?			# Marvell Semiconductor 88E1000 PHYs
nsphy*	at mii? phy ?			# NS83840 PHYs
nsphyter* at mii? phy ? 		# NS83843 PHYs
pnaphy* at mii? phy ?			# generic HomePNA PHYs
qsphy*	at mii? phy ?			# Quality Semiconductor QS6612 PHYs
sqphy*	at mii? phy ?			# Seeq 80220/80221/80223 PHYs
tlphy*	at mii? phy ?			# ThunderLAN PHYs
tqphy*	at mii? phy ?			# TDK Semiconductor PHYs
ukphy*	at mii? phy ?			# generic unknown PHYs
urlphy* at mii? phy ?			# Realtek RTL8150L internal PHYs

# Audio Devices

# GSC audio devices
#aone*	at gsc?				# Audio Type 1 (PSB 2160-N)
harmony* at gsc?			# Audio Type 2 (CS4215)
#com*	at harmony?			# Telephone add-in card
audio*	at audiobus?

# USB Controller and Devices

# PCI USB controllers
ehci*	at pci?	dev ? function ?	# Enhanced Host Controller
ohci*	at pci?	dev ? function ?	# Open Host Controller
uhci*	at pci?	dev ? function ?	# Universal Host Controller (Intel)

# USB bus support
usb*	at ehci?
usb*	at ohci?
usb*	at uhci?

# USB Hubs
uhub*	at usb?
uhub*	at uhub? port ?

# USB HID device
uhidev* at uhub? port ? configuration ? interface ?

# USB Mice
ums*	at uhidev? reportid ?
wsmouse* at ums? mux 0

# USB eGalax touch-panel
uep*	at uhub? port ?
wsmouse* at uep? mux 0

# USB Keyboards
ukbd*	at uhidev? reportid ?
wskbd*	at ukbd? console ? mux 1

# USB serial adapter
ucycom* at uhidev? reportid ?

# USB Generic HID devices
uhid*	at uhidev? reportid ?

# USB LCDs and USB-VGA adaptors
udl*	at uhub? port ?		# DisplayLink DL-1x0/1x5
wsdisplay* at udl?

# USB Printer
ulpt*	at uhub? port ? configuration ? interface ?

# USB Modem
umodem* at uhub? port ? configuration ?
ucom*	at umodem?

# Option N.V. Wireless WAN modems
uhso*	at uhub? port ? configuration ?

# USB Mass Storage
umass*	at uhub? port ? configuration ? interface ?
wd*	at umass?

# USB audio
uaudio* at uhub? port ? configuration ?

# USB MIDI
umidi* at uhub? port ? configuration ?
midi* at midibus?

# USB IrDA
# USB-IrDA bridge spec
uirda* at uhub? port ? configuration ? interface ?
irframe* at uirda?

stuirda* at uhub? port ? configuration ? interface ?
irframe* at stuirda?

# SigmaTel STIr4200 USB/IrDA Bridge
ustir* at uhub? port ?
irframe* at ustir?

# USB Ethernet adapters
aue*	at uhub? port ?		# ADMtek AN986 Pegasus based adapters
axe*	at uhub? port ?		# ASIX AX88172 based adapters
cdce*	at uhub? port ?		# CDC, Ethernet Networking Control Model
cue*	at uhub? port ?		# CATC USB-EL1201A based adapters
kue*	at uhub? port ?		# Kawasaki LSI KL5KUSB101B based adapters
udav*	at uhub? port ?		# Davicom DM9601 based adapters
url*	at uhub? port ?		# Realtek RTL8150L based adapters

# USB 802.11 adapters
atu*	at uhub? port ?		# Atmel AT76C50XX based adapters
ural*	at uhub? port ?		# Ralink Technology RT2500USB 802.11a/b/g
rum*	at uhub? port ?		# Ralink Technology RT2501/RT2601 802.11a/b/g
zyd*	at uhub? port ?		# Zydas ZD1211

# Prolific PL2301/PL2302 host-to-host adapter
upl*	at uhub? port ?

# Serial adapters
ubsa*	at uhub? port ?		# Belkin serial adapter
ucom*	at ubsa? portno ?

uchcom* at uhub? port ? 	# WinChipHead CH341/CH340 serial adapter
ucom*	at uchcom? portno ?

uftdi*	at uhub? port ?		# FTDI FT8U100AX serial adapter
ucom*	at uftdi? portno ?

uipaq*	at uhub? port ?		# iPAQ PDAs
ucom*	at uipaq? portno ?

umct*	at uhub? port ?		# MCT USB-RS232 serial adapter
ucom*	at umct? portno ?

uplcom* at uhub? port ? 	# I/O DATA USB-RSAQ2 serial adapter
ucom*	at uplcom? portno ?

uslsa*	at uhub? port ?		# Silicon Labs USB-RS232 serial adapter
ucom*	at uslsa? portno ?

uvscom* at uhub? port ? 	# SUNTAC Slipper U VS-10U serial adapter
ucom*	at uvscom? portno ?

# RIM BlackBerry
uberry* at uhub? port ?

# Diamond Multimedia Rio 500
urio*	at uhub? port ?

# USB Handspring Visor
uvisor* at uhub? port ?
ucom*	at uvisor?

# Kyocera AIR-EDGE PHONE
ukyopon* at uhub? port ?
ucom*	at ukyopon? portno ?

# USB scanners
uscanner* at uhub? port ?

# USB scanners that use SCSI emulation, e.g., HP5300
usscanner* at uhub? port ?

# Topfield TF5000PVR range of DVB recorders
utoppy* at uhub? port ?

# Y@P firmware loader
uyap*	at uhub? port ?

# D-Link DSB-R100 USB radio
udsbr*	at uhub? port ?
radio*	at udsbr?

# USB Generic driver
ugen*	at uhub? port ?

# USB 3G datacards
u3ginit* at uhub? port ?
u3g*	at uhub? port ?
ucom*	at u3g?

# USB generic serial port (e.g., data over cellular)
ugensa* at uhub? port ?
ucom*	at ugensa?

# Pseudo-Devices

pseudo-device 	crypto			# /dev/crypto device
pseudo-device	swcrypto		# software crypto implementation

# disk/mass storage pseudo-devices
pseudo-device	ccd			# concatenated/striped disk devices
#pseudo-device	cgd			# cryptographic disk devices
pseudo-device	raid			# RAIDframe disk driver
options 	RAID_AUTOCONFIG		# auto-configuration of RAID components
#Options to enable various other RAIDframe RAID types.
#options 	RF_INCLUDE_EVENODD=1
#options 	RF_INCLUDE_RAID5_RS=1
#options 	RF_INCLUDE_PARITYLOGGING=1
#options 	RF_INCLUDE_CHAINDECLUSTER=1
#options 	RF_INCLUDE_INTERDECLUSTER=1
#options 	RF_INCLUDE_PARITY_DECLUSTERING=1
#options 	RF_INCLUDE_PARITY_DECLUSTERING_DS=1
pseudo-device	fss			# file system snapshot device
pseudo-device	md			# memory disk device (ramdisk)
pseudo-device	vnd			# disk-like interface to files
#options 	VND_COMPRESSION		# compressed vnd(4)
pseudo-device	putter			# for puffs and pud

# network pseudo-devices
pseudo-device	bpfilter		# Berkeley packet filter
#pseudo-device	carp			# Common Address Redundancy Protocol
pseudo-device	ipfilter		# IP filter (firewall) and NAT
pseudo-device	loop			# network loopback
pseudo-device	ppp			# Point-to-Point Protocol
pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
pseudo-device	sl			# Serial Line IP
pseudo-device	strip			# Starmode Radio IP (Metricom)
pseudo-device	irframetty		# IrDA frame line discipline
pseudo-device	tun			# network tunneling over tty
pseudo-device	tap			# virtual Ethernet
pseudo-device	gre			# generic L3 over IP tunnel
pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC1933)
#pseudo-device	faith			# IPv[46] tcp relay translation i/f
pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
pseudo-device	vlan			# IEEE 802.1q encapsulation
pseudo-device	bridge			# simple inter-network bridging
#options	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
pseudo-device	agr			# IEEE 802.3ad link aggregation

#
# accept filters
pseudo-device   accf_data		# "dataready" accept filter
pseudo-device   accf_http		# "httpready" accept filter

# miscellaneous pseudo-devices
pseudo-device	pty			# pseudo-terminals
pseudo-device	sequencer		# MIDI sequencer
# rnd works; RND_COM does not on port hppa yet.
#options 	RND_COM			# use "com" randomness as well (BROKEN)
pseudo-device	clockctl		# user control of clock subsystem

# a pseudo device needed for Coda	# also needs CODA (above)
pseudo-device	vcoda			# coda minicache <-> venus comm.

# wscons pseudo-devices
pseudo-device	wsmux			# mouse & keyboard multiplexor
pseudo-device	wsfont
pseudo-device	ksyms			# /dev/ksyms
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if

# userland interface to drivers, including autoconf and properties retrieval
pseudo-device	drvctl

# Veriexec
#
# a pseudo device needed for veriexec
#pseudo-device	veriexec
#
# Uncomment the fingerprint methods below that are desired. Note that
# removing fingerprint methods will have almost no impact on the kernel
# code size.
#
#options VERIFIED_EXEC_FP_RMD160
#options VERIFIED_EXEC_FP_SHA256
#options VERIFIED_EXEC_FP_SHA384
#options VERIFIED_EXEC_FP_SHA512
#options VERIFIED_EXEC_FP_SHA1
#options VERIFIED_EXEC_FP_MD5
