#	$NetBSD: genassym.cf,v 1.30.60.2 2020/04/08 14:07:26 martin Exp $

#
# Copyright (c) 1982, 1990, 1993
#	The Regents of the University of California.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@(#)genassym.c	8.3 (Berkeley) 1/4/94
#

include <sys/param.h>
include <sys/buf.h>
include <sys/cpu.h>
include <sys/proc.h>
include <sys/mbuf.h>
include <sys/msgbuf.h>
include <sys/syscall.h>

include <uvm/uvm_extern.h>

include <machine/psl.h>
include <machine/pcb.h>
include <machine/pte.h>

include <amiga/amiga/cia.h>
include <amiga/amiga/isr.h>

# values for mmutype
define	MMU_68851	MMU_68851
define	MMU_68030	MMU_68030
define	MMU_68040	MMU_68040
define	MMU_68060	MMU_68060

# values for cputype
define	CPU_68020	CPU_68020
define	CPU_68030	CPU_68030
define	CPU_68040	CPU_68040
define	CPU_68060	CPU_68060

# values for ectype
define	EC_NONE		EC_NONE

# values for fputype
define	FPU_NONE	FPU_NONE
define	FPU_68881	FPU_68881
define	FPU_68882	FPU_68882
define	FPU_68040	FPU_68040
define	FPU_68060	FPU_68060
define	FPU_UNKNOWN	FPU_UNKNOWN

ifdef FPU_EMULATE
define	FPU_EMULATE	FPU_EMULATE
endif

# values for machineid
define	AMIGA_68020	AMIGA_68020
define	AMIGA_68030	AMIGA_68030
define	AMIGA_68040	AMIGA_68040
define	AMIGA_68060	AMIGA_68060
ifdef DRACO
define	DRACO		DRACO
endif

# lwp & proc fields and values
define	L_PCB			offsetof(struct lwp, l_addr)
define	L_PROC			offsetof(struct lwp, l_proc)
define	L_MD_REGS		offsetof(struct lwp, l_md.md_regs)
define	L_MD_FLAGS		offsetof(struct lwp, l_md.md_flags)
define	P_FLAG			offsetof(struct proc, p_flag)
define	P_RASLIST		offsetof(struct proc, p_raslist)
define	P_VMSPACE		offsetof(struct proc, p_vmspace)

# interrupt/fault metering
define	CI_NINTR	offsetof(struct cpu_info, ci_data.cpu_nintr)

# general constants
define	UPAGES		UPAGES
define	USPACE		USPACE
define	PAGE_SIZE	PAGE_SIZE
define	PGSHIFT		PGSHIFT
define	USRSTACK	USRSTACK

# PSL values (should just include psl.h?)
define	PSL_S		PSL_S
define	PSL_IPL7	PSL_IPL7
define	PSL_LOWIPL	PSL_LOWIPL
define	PSL_HIGHIPL	PSL_HIGHIPL
define	PSL_USER	PSL_USER
define	SPL1		PSL_S | PSL_IPL1
define	SPL2		PSL_S | PSL_IPL2
define	SPL3		PSL_S | PSL_IPL3
define	SPL4		PSL_S | PSL_IPL4
define	SPL5		PSL_S | PSL_IPL5
define	SPL6		PSL_S | PSL_IPL6

# magic
define	FC_USERD	FC_USERD
define	FC_SUPERD	FC_SUPERD
define	CACHE_ON	CACHE_ON
define	CACHE_OFF	CACHE_OFF
define	CACHE_CLR	CACHE_CLR
define	IC_CLEAR	IC_CLEAR
define	DC_CLEAR	DC_CLEAR
define	CACHE40_ON	CACHE40_ON
define	CACHE40_OFF	CACHE40_OFF
define	CACHE60_ON	CACHE60_ON
define	CACHE60_OFF	CACHE60_OFF
define	IC60_CUBC	IC60_CUBC
define	IC60_CABC	IC60_CABC

# pte bits
define	PG_V		PG_V
define	PG_NV		PG_NV
define	PG_RO		PG_RO
define	PG_RW		PG_RW
define	PG_CI		PG_CI
define	PG_PROT		PG_PROT
define	PG_FRAME	PG_FRAME

# pcb fields
define	PCB_FLAGS	offsetof(struct pcb, pcb_flags)
define	PCB_PS		offsetof(struct pcb, pcb_ps)
define	PCB_USP		offsetof(struct pcb, pcb_usp)
define	PCB_REGS	offsetof(struct pcb, pcb_regs)
define	PCB_ONFAULT	offsetof(struct pcb, pcb_onfault)
define	PCB_FPCTX	offsetof(struct pcb, pcb_fpregs)
define	SIZEOF_PCB	sizeof(struct pcb)

# frame offsets
define 	TF_PC		offsetof(struct frame, f_pc)

# exception frame offsets
define	FR_SP		offsetof(struct frame, f_regs[15])
define	FR_HW		offsetof(struct frame, f_sr)
define	FR_ADJ		offsetof(struct frame, f_stackadj)

# FP frame offsets
define	FPF_REGS	offsetof(struct fpframe, fpf_regs[0])
define	FPF_FPCR	offsetof(struct fpframe, fpf_fpcr)
define	FPF_FPSR	offsetof(struct fpframe, fpf_fpsr)
define	FPF_FPI		offsetof(struct fpframe, fpf_fpiar)

# isr fields
define	ISR_FORW	offsetof(struct isr, isr_forw)
define	ISR_INTR	offsetof(struct isr, isr_intr)
define	ISR_ARG		offsetof(struct isr, isr_arg)

# system calls
define	SYS_exit	SYS_exit
define	SYS_compat_16___sigreturn14	SYS_compat_16___sigreturn14
define	SYS_compat_13_sigreturn13 SYS_compat_13_sigreturn13

# miscellaneous custom chip register offsets
define	CIAICR		offsetof(struct CIA, icr)
