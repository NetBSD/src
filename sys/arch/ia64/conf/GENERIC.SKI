# $NetBSD: GENERIC.SKI,v 1.11.6.2 2017/08/28 17:51:42 skrll Exp $
#
# GENERIC machine description file
#
# This machine description file is used to generate the default NetBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

include 	"arch/ia64/conf/std.ia64"

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

#ident 		"GENERIC-$Revision: 1.11.6.2 $"

maxusers	32		# estimated number of users

# CPU support.  At least one is REQUIRED.
#options	IA64_CPU

# CPU-related options.

# Standard system options
options 	INSECURE	# disable kernel security levels - X needs this
options 	NTP		# NTP phase/frequency locked loop

options 	KTRACE		# system call tracing via ktrace(1)

# Note: SysV IPC parameters can be changed dynamically; see sysctl(8).
options 	SYSVMSG		# System V-like message queues
options 	SYSVSEM		# System V-like semaphores
options 	SYSVSHM		# System V-like memory sharing

#options 	MODULAR		# new style module(7) framework
#options 	MODULAR_DEFAULT_AUTOLOAD

options 	USERCONF	# userconf(4) support

# Diagnostic/debugging support options
options 	DIAGNOSTIC	# expensive kernel consistency checks
options 	DEBUG		# expensive debugging checks/support
#options 	LOCKDEBUG	# expensive locking checks/support
options 	DDB		# in-kernel debugger
options 	DDB_ONPANIC=1	# see also sysctl(7): `ddb.onpanic'
#options 	DDB_HISTORY_SIZE=512	# enable history editing in DDB
#options 	KGDB		# remote debugger
#options 	KGDB_DEVNAME="\"com\"",KGDB_DEVADDR=0x3f8,KGDB_DEVRATE=9600
makeoptions	DEBUG="-g"	# compile full symbol table

#options UVMHIST
#options UVMHIST_PRINT

# File systems
file-system	FFS		# UFS
file-system	NFS		# Network File System client
file-system 	MFS		# memory file system
file-system	LFS		# log-structured file system
#file-system	NTFS		# Windows/NT file system (experimental)
file-system	CD9660		# ISO 9660 + Rock Ridge file system
#file-system	MSDOSFS		# MS-DOS file system
#file-system	FDESC		# /dev/fd
file-system	KERNFS		# /kern
file-system	NULLFS		# loopback file system
#file-system	OVERLAY		# overlay file system
#file-system	PROCFS		# /proc

#options 	GATEWAY		# packet forwarding
options 	INET		# IP + ICMP + TCP + UDP
#options 	INET6		# IPv6
#options 	IPSEC		# IP security

#options 	NFS_BOOT_DHCP,NFS_BOOT_BOOTPARAM

# Kernel root file system and dump configuration.
config		netbsd	root on ? type ?
#config		netbsd	root on md0a type ffs
#config		netbsd	root on sd0a type ffs
#config		netbsd	root on ? type nfs

#
# Device configuration
#

mainbus0 at root

cpu* at mainbus?

#options 	ACPI_SCANPCI	# find PCI roots using ACPI

acpi0 at mainbus?


# Pull in optional local configuration
cinclude "arch/ia64/conf/GENERIC.local"

# Console Devices
#ssccons*	at mainbus0		# Ski console interface driver
#wsdisplay*	at ssccons0 console ?
#wskbd*		at ssccons0 console ?

# Pseudo-Devices

# Enable the hooks used for initializing the root memory-disk.
pseudo-device	md			# memory disk device (ramdisk)
#options 	MEMORY_DISK_DYNAMIC	# loaded via kernel module(7)
##options 	MEMORY_DISK_HOOKS	# enable root ramdisk
##options		MEMORY_DISK_IS_ROOT	# force md RAM disk to be the root device
#options    MEMORY_DISK_ROOT_SIZE=2880  # 1.44M, same as a floppy
##options     MEMORY_DISK_ROOT_SIZE=8192  # 4Meg
##options     MEMORY_DISK_SERVER=1        # make the ramdisk writeable

#pseudo-device	vnd			# disk-like interface to files
#options 	VND_COMPRESSION		# compressed vnd(4)

pseudo-device	ssccons			# Ski emulator console
#pseudo-device	wsmux			# mouse & keyboard multiplexor
#pseudo-device	wsfont
pseudo-device	ksyms			# /dev/ksyms

# network pseudo-devices
#pseudo-device	bpfilter		# Berkeley packet filter
#pseudo-device	carp			# Common Address Redundancy Protocol
#pseudo-device	ipfilter		# IP filter (firewall) and NAT
pseudo-device	loop			# network loopback
#pseudo-device	ifmpls			# MPLS pseudo-interface
#pseudo-device	ppp			# Point-to-Point Protocol
#pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
#options 	PPPOE_SERVER		# Enable PPPoE server via link0
#pseudo-device	sl			# Serial Line IP
#pseudo-device	strip			# Starmode Radio IP (Metricom)
#pseudo-device	irframetty		# IrDA frame line discipline
#pseudo-device	tap			# virtual Ethernet
#pseudo-device	tun			# network tunneling over tty
#pseudo-device	gre			# generic L3 over IP tunnel
#pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC 1933)
#pseudo-device	faith			# IPv[46] TCP relay translation i/f
#pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
#pseudo-device	vlan			# IEEE 802.1q encapsulation
#pseudo-device	bridge			# simple inter-network bridging
#options 	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
#pseudo-device	agr			# IEEE 802.3ad link aggregation
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if
#pseudo-device	pfsync			# PF sync if
#pseudo-device	npf			# NPF packet filter
#pseudo-device 	etherip 		# Tunnel Ethernet over IP
# srt is EXPERIMENTAL
#pseudo-device	srt			# source-address-based routing

# miscellaneous pseudo-devices
pseudo-device	pty			# pseudo-terminals
