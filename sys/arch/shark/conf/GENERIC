#	$NetBSD: GENERIC,v 1.95.2.2 2012/05/23 10:07:49 yamt Exp $
#
# Generic Shark configuration.
#

include	"arch/shark/conf/std.shark"

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

#ident		"GENERIC-$Revision: 1.95.2.2 $"

# estimated number of users
maxusers	32

# Standard system options

options 	RTC_OFFSET=0	# hardware clock is this many mins. west of GMT
options 	HZ=64
#options 	NTP		# NTP phase/frequency locked loop
#options 	BOOT_QUIETLY	# twiddle instead of normal boot msg output

# CPU options

options 	CPU_SA110	# Support the SA110 core

# Architecture options

options 	SHARK		# We are a Shark
options 	NSIO		# We are using the National Semi SuperIO
makeoptions	CPUFLAGS="-march=armv4 -mtune=strongarm"

# compatibility with old version of OFW, which may have incorrect
# properties and/or may set up devices incorrectly.
options 	COMPAT_OLD_OFW

# FPA options

#options 	ARMFPE		# ARM Ltd FPE

# File systems

file-system	FFS		# UFS
#file-system	LFS		# log-structured file system
file-system	MFS		# memory file system
file-system	NFS		# Network file system
#file-system 	ADOSFS		# AmigaDOS-compatible file system
#file-system 	EXT2FS		# second extended file system (linux)
#file-system	CD9660		# ISO 9660 + Rock Ridge file system
file-system	MSDOSFS		# MS-DOS file system
file-system	FDESC		# /dev/fd
#file-system	FILECORE	# Acorn filecore file system
file-system	KERNFS		# /kern
file-system	NULLFS		# loopback file system
#file-system 	OVERLAY		# overlay filesystem
file-system	PROCFS		# /proc
file-system	PUFFS		# Userspace file systems (e.g. ntfs-3g & sshfs)
#file-system	UMAPFS		# NULLFS + uid and gid remapping
#file-system	UNION		# union file system
#file-system	CODA		# Coda file system (needs vcoda below)
file-system	PTYFS		# /dev/pts/N support
file-system	TMPFS		# Efficient memory file-system
#file-system	UDF		# experimental - OSTA UDF CD/DVD file-system

# File system options
#options 	QUOTA		# legacy UFS quotas
#options 	QUOTA2		# new, in-filesystem UFS quotas
#options 	FFS_EI		# FFS Endian Independent support
options 	WAPBL		# File system journaling support
#options	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
options 	NFSSERVER
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support

# Networking options

#options 	GATEWAY		# packet forwarding
options 	INET		# IP + ICMP + TCP + UDP
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_ESP	# IP security (encryption part; define w/IPSEC)
#options 	IPSEC_NAT_T	# IPsec NAT traversal (NAT-T)
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
#options 	ISO,TPIP	# OSI
#options 	EON		# OSI tunneling over IP
#options 	NETATALK	# AppleTalk networking
#options 	PFIL_HOOKS	# pfil(9) packet filter hooks (Required
				# if you enable the pseudo-device ipl).

#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
options 	NFS_BOOT_DHCP	# use NetBSD standard DHCP/NFS boot code
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

# Compatibility options

#options 	COMPAT_09	# NetBSD 0.9 compatibility.
#options 	COMPAT_10	# NetBSD 1.0 compatibility.
#options 	COMPAT_11	# NetBSD 1.1 compatibility.
options 	COMPAT_12	# NetBSD 1.2 compatibility.
options 	COMPAT_13	# NetBSD 1.3 compatibility.
options 	COMPAT_14	# NetBSD 1.4 compatibility.
options 	COMPAT_15	# NetBSD 1.5 compatibility.
options 	COMPAT_16	# NetBSD 1.6 compatibility.
options 	COMPAT_20	# NetBSD 2.0 compatibility.
options 	COMPAT_30	# NetBSD 3.0 compatibility.
options 	COMPAT_40	# NetBSD 4.0 compatibility.
options 	COMPAT_50	# NetBSD 5.0 compatibility.
options 	COMPAT_43	# 4.3BSD compatibility.
options 	COMPAT_LINUX	# Linux compatibility.
#options 	TCP_COMPAT_42	# 4.2BSD TCP/IP bug compat. Not recommended.
options 	COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

# Shared memory options

options 	SYSVMSG		# System V-like message queues
options 	SYSVSEM		# System V-like semaphores
options 	SYSVSHM		# System V-like memory sharing

# Device options

#options 	MEMORY_DISK_HOOKS	# boottime setup of ramdisk
#options 	MEMORY_DISK_ROOT_SIZE=3400	# Size in blocks
#options 	MEMORY_DISK_IS_ROOT	# use memory disk as root

options 	INSECURE		# disable kernel securelevel

# Use the following to force the serial to always be the console
# device.  19200 is what the serial gets set up as by the firmware
# when it hasn't fallen back from PC.  If it has fallen back then
# the speed will be set at 9600.
#options 	COMCONSOLE,CONADDR=0x3f8,CONUNIT=0,CONSPEED=19200

# Miscellaneous kernel options
options 	KTRACE		# system call tracing, a la ktrace(1)
options 	IRQSTATS	# manage IRQ statistics, XXX temp required
options 	KMEMSTATS	# kernel memory statistics, XXX temp required
options 	USERCONF	# userconf(4) support
#options 	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel
options 	MODULAR		# new style module(7) framework

# Development and Debugging options

#options 	ARM700BUGTRACK	# track the ARM700 swi bug
#options 	PORTMASTER	# Enable PortMaster only options
options 	DIAGNOSTIC	# internal consistency checks
#options 	PMAP_DEBUG	# Enable pmap_debug_level code
options 	DDB		# in-kernel debugger
options 	SYMTAB_SPACE=450000 	# reserve symbol space for DDB
				# (needed because we boot netbsd.aout)
#options 	DDB_ONPANIC=0	# don't run DDB at panictime
#options 	DDB_HISTORY_SIZE=100	# Enable history editing in DDB
#options 	KERNEL_DEBUG	# compile in kernel debugging capability
#makeoptions	DEBUG="-g"	# compile full symbol table

#
# wscons options
#
# builtin terminal emulations
#options 	WSEMUL_SUN		# sun terminal emulation
options 	WSEMUL_VT100		# VT100 / VT220 emulation
# customization of console and kernel output - see dev/wscons/wsdisplayvar.h
#options 	WSDISPLAY_CUSTOM_OUTPUT	# color customization from wsconsctl(8)
#options 	WS_DEFAULT_FG=WSCOL_WHITE
#options 	WS_DEFAULT_BG=WSCOL_BLACK
#options 	WS_DEFAULT_COLATTR="(0)"
#options 	WS_DEFAULT_MONOATTR="(0)"
options 	WS_KERNEL_FG=WSCOL_GREEN
#options 	WS_KERNEL_BG=WSCOL_BLACK
#options 	WS_KERNEL_COLATTR=""
#options 	WS_KERNEL_MONOATTR=""
# customization of console border color
#options 	WSDISPLAY_CUSTOM_BORDER	# border customization from wsconsctl(8)
#options 	WSDISPLAY_BORDER_COLOR=WSCOL_BLUE	# default color
# compatibility to other console drivers
options 	WSDISPLAY_COMPAT_PCVT		# emulate some ioctls
options 	WSDISPLAY_COMPAT_SYSCONS	# emulate some ioctls
options 	WSDISPLAY_COMPAT_USL		# VT handling
options 	WSDISPLAY_COMPAT_RAWKBD		# can get raw scancodes
# see dev/pckbport/wskbdmap_mfii.c for implemented layouts
#options 	PCKBD_LAYOUT="(KB_DE | KB_NODEAD)"
#options 	PCKBD_LAYOUT="(KB_US | KB_SWAPCTRLCAPS)"
# allocate a number of virtual screens at autoconfiguration time
#options 	WSDISPLAY_DEFAULTSCREENS=4
# use a large software cursor that doesn't blink
#options 	PCDISPLAY_SOFTCURSOR
# modify the screen type of the console; defaults to "80x25"
#options 	VGA_CONSOLE_SCREENTYPE="\"80x24\""
# console scrolling support.
#options 	WSDISPLAY_SCROLLSUPPORT
# enable VGA raster mode capable of displaying multilingual text on console
#options 	VGA_RASTERCONSOLE

config		netbsd		root on ? type ?

# The main bus device
mainbus0 at root

# The boot CPU
cpu0 at mainbus?

# Open Firmware devices
ofbus*		at root
ofbus*		at ofbus?
#ofdisk* 	at ofbus?
#ofnet*		at ofbus?	# don't use with cs0
#ofcons* 	at ofbus?	# don't use with pc0
ofrtc*		at ofisa?
ofrom*		at ofbus?

ofisa*		at ofbus?
ofbus*		at ofisa?

# IDE/ATA disk
wdc*		at ofisa?
atabus* 	at wdc? channel ?
wd*		at atabus? drive ?

atapibus*	at atabus?
cd*		at atapibus? drive?
sd*		at atapibus? drive?

# PCCONS@OFW
#ofisapc*	at ofbus?
#pc*		at ofisapc?
#options 	FRENCH_KBD
#options 	FINNISH_KBD
#options 	GERMAN_KBD
#options 	NORWEGIAN_KBD

# PS/2 Mouse
#opms0		at spckbd? irq 12

# wscons
pckbc*		at ofisa?
pckbd*		at pckbc?
pms*		at pckbc?
vga*		at ofbus?
igsfb*		at ofbus?	# IGS CyberPro in rev. 5 sharks
chipsfb*	at ofbus?	# C&T 65550 in rev. 4 and earlier
wsdisplay*	at wsemuldisplaydev?
wskbd*		at pckbd? console ?
wsmouse*	at pms? mux 0

# CS8900 Ethernet@OFW
cs*		at ofisa?

# Serial @OFW
com*		at ofisa?

# Parallel @OFW
lpt*		at ofisa?

# Smart Card
ofisascr*	at ofisa?
scr*		at ofisascr?

# ESS Sound@OFW
ess*		at ofisa?
audio*		at ess?
opl*		at ess?
midi*		at opl?

# Joystick @OFW
joy*		at ofisa?

# Pull in optional local configuration
cinclude "arch/shark/conf/GENERIC.local"

#
# accept filters
pseudo-device   accf_data		# "dataready" accept filter
pseudo-device   accf_http		# "httpready" accept filter

pseudo-device	loop	1		# network loopback
pseudo-device	bpfilter		# packet filter
#pseudo-device	carp			# Common Address Redundancy Protocol
#pseudo-device	sl			# CSLIP
#pseudo-device	ppp			# PPP
#pseudo-device	tun			# network tunneling over tty
#pseudo-device	ipfilter 1		# ip filter
pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC1933)
#pseudo-device	faith			# IPv[46] tcp relay translation i/f
pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
#pseudo-device	strip			# STarmode Radio IP (Metricon Ricochet)
pseudo-device	pty			# pseudo-terminals
pseudo-device	vnd			# disk-like interface to files
#options 	VND_COMPRESSION		# compressed vnd(4)
#pseudo-device	ccd	2		# concatenated disk devices
pseudo-device	fss			# file system snapshot device
#pseudo-device	cgd	4		# cryptographic disk devices

#pseudo-device	md			# Ramdisk driver
#pseudo-device	profiler 1		# fiq based profiling device
pseudo-device	sequencer 1		# MIDI sequencer
pseudo-device	openfirm		# /dev/openfirm
#pseudo-device	vcoda	4		# coda kernel <-> cachemanager
pseudo-device	clockctl		# user control of clock subsystem
pseudo-device	wsmux			# mouse & keyboard multiplexor
pseudo-device	wsfont
pseudo-device	ksyms			# /dev/ksyms
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if
pseudo-device	putter			# for puffs and pud

# Veriexec
#
# a pseudo device needed for veriexec
#pseudo-device	veriexec		1
#
# Uncomment the fingerprint methods below that are desired. Note that
# removing fingerprint methods will have almost no impact on the kernel
# code size.
#
#options VERIFIED_EXEC_FP_RMD160
#options VERIFIED_EXEC_FP_SHA256
#options VERIFIED_EXEC_FP_SHA384
#options VERIFIED_EXEC_FP_SHA512
#options VERIFIED_EXEC_FP_SHA1
#options VERIFIED_EXEC_FP_MD5

options PAX_MPROTECT=0			# PaX mprotect(2) restrictions
#options PAX_SEGVGUARD=0			# PaX Segmentation fault guard
options PAX_ASLR=0			# PaX Address Space Layout Randomization
