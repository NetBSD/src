#	$NetBSD: genassym.cf,v 1.37.8.1 2017/02/05 13:40:14 skrll Exp $

#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@(#)genassym.c	7.8 (Berkeley) 5/7/91
#

if defined(_KERNEL_OPT)
include "opt_compat_svr4.h"
endif

include	<sys/param.h>
include	<sys/buf.h>
include	<sys/mbuf.h>
include	<sys/msgbuf.h>
include	<sys/proc.h>
include	<sys/syscall.h>

include <uvm/uvm_extern.h>

ifdef COMPAT_SVR4
include <compat/svr4/svr4_syscall.h>
include <compat/svr4/svr4_ucontext.h>
endif

include	<machine/cpu.h>
include	<machine/psl.h>
include	<machine/pcb.h>
include	<machine/pte.h>

# machine class
define	CPUINFO_CLASS		offsetof(struct cpu_model_info, class)
define	MACH_CLASSAV		MACH_CLASSAV

# values for mmutype
define	MMU_68851		MMU_68851
define	MMU_68030		MMU_68030
define	MMU_68040		MMU_68040

# values for cputype
define	CPU_68020		CPU_68020
define	CPU_68030		CPU_68030
define	CPU_68040		CPU_68040

# values for fputype
define	FPU_68881		FPU_68881
define	FPU_68882		FPU_68882
define	FPU_68040		FPU_68040

# general constants
define	UPAGES			UPAGES
define	USPACE			USPACE
define	P1PAGES 		P1PAGES
define	PAGE_SIZE		PAGE_SIZE
define	NPTEPG			NPTEPG
define	PGSHIFT 		PGSHIFT
define	USRIOSIZE		USRIOSIZE
define	USRSTACK		USRSTACK

# lwp & proc fields and values
define	L_PCB			offsetof(struct lwp, l_addr)
define	L_PRIORITY		offsetof(struct lwp, l_priority)
define	L_STAT			offsetof(struct lwp, l_stat)
define	L_WCHAN			offsetof(struct lwp, l_wchan)
define	L_PROC			offsetof(struct lwp, l_proc)
define	L_MD_REGS		offsetof(struct lwp, l_md.md_regs)
define	L_MD_FLAGS		offsetof(struct lwp, l_md.md_flags)
define	P_FLAG			offsetof(struct proc, p_flag)
define	P_RASLIST		offsetof(struct proc, p_raslist)
define	P_VMSPACE		offsetof(struct proc, p_vmspace)

# lwp fields and values

define	LSSLEEP			LSSLEEP
define	LSRUN			LSRUN
define	LSONPROC		LSONPROC

# interrupt/fault metering
define	CI_NINTR		offsetof(struct cpu_info, ci_data.cpu_nintr)

#mE PSL values (should just include psl.h?)
define	PSL_S			PSL_S
define	PSL_IPL7		PSL_IPL7
define	PSL_LOWIPL		PSL_LOWIPL
define	PSL_HIGHIPL		PSL_HIGHIPL
define	PSL_USER		PSL_USER
define	PSL_TS			(PSL_T | PSL_S)
define	SPL1			(PSL_S | PSL_IPL1)
define	SPL2			(PSL_S | PSL_IPL2)
define	SPL3			(PSL_S | PSL_IPL3)
define	SPL4			(PSL_S | PSL_IPL4)
define	SPL5			(PSL_S | PSL_IPL5)
define	SPL6			(PSL_S | PSL_IPL6)
define	IPL_CLOCK		IPL_CLOCK

# magic
define	FC_USERD		FC_USERD
define	FC_SUPERD		FC_SUPERD
define	CACHE_ON		CACHE_ON
define	CACHE_OFF		CACHE_OFF
define	CACHE_CLR		CACHE_CLR
define	CACHE40_ON		CACHE40_ON
define	CACHE40_OFF		CACHE40_OFF
define	IC_CLEAR		IC_CLEAR
define	DC_CLEAR		DC_CLEAR

# pte/ste bits
define	PG_FRAME		PG_FRAME

# pcb fields
define	SIZEOF_PCB		sizeof(struct pcb)
define	PCB_FLAGS		offsetof(struct pcb, pcb_flags)
define	PCB_PS			offsetof(struct pcb, pcb_ps)
define	PCB_USP 		offsetof(struct pcb, pcb_usp)
define	PCB_REGS		offsetof(struct pcb, pcb_regs)
define	PCB_ONFAULT		offsetof(struct pcb, pcb_onfault)
define	PCB_FPCTX		offsetof(struct pcb, pcb_fpregs)
define	PCB_TRCB		5

# frame offsets
define	TF_PC			offsetof(struct frame, f_pc)

# exception frame offset/sizes
define	FR_SP			offsetof(struct frame, f_regs[15])
define	FR_HW			offsetof(struct frame, f_sr)
define	FR_ADJ			offsetof(struct frame, f_stackadj)
define	FR_SIZE			sizeof(struct trapframe)

# FP frame offsets
define	FPF_REGS		offsetof(struct fpframe, fpf_regs[0])
define	FPF_FPCR		offsetof(struct fpframe, fpf_fpcr)

# system calls
define	SYS_exit		SYS_exit
define	SYS_execve		SYS_execve
define	SYS_compat_16___sigreturn14	SYS_compat_16___sigreturn14
define	SYS_compat_13_sigreturn13 SYS_compat_13_sigreturn13

# errno
define	ENOENT			ENOENT
define	EFAULT			EFAULT
define	ENAMETOOLONG		ENAMETOOLONG

# machine ids
define MACH_MACC610		MACH_MACC610
define MACH_MACQ610		MACH_MACQ610
define MACH_MACC650		MACH_MACC650
define MACH_MACQ650		MACH_MACQ650
define MACH_MACQ800		MACH_MACQ800

# SVR4 binary compatibility
ifdef COMPAT_SVR4
define SVR4_SIGF_HANDLER	offsetof(struct svr4_sigframe, sf_handler)
define SVR4_SIGF_UC		offsetof(struct svr4_sigframe, sf_uc)
define SVR4_SYS_context		SVR4_SYS_context
define SVR4_SYS_exit		SVR4_SYS_exit
define SVR4_SETCONTEXT		SVR4_SETCONTEXT
endif
