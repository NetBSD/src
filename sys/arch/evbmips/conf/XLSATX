#	$NetBSD: XLSATX,v 1.21.2.2 2017/08/28 17:51:36 skrll Exp $

include 	"arch/evbmips/conf/std.rmixl"

#ident 		"XLSATX-$Revision: 1.21.2.2 $"

#options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

maxusers	32

#
# MEMSIZE can be used to limit memory amount used
#
#options  	MEMSIZE=0x10000000		# 256MB 

#
# MEMLIMIT can be used to limit memory address used
#
defparam opt_memsize.h MEMLIMIT
#options 	MEMLIMIT=0x10000000			# 256MB 

options 	NOFPU		# No FPU
#options 	FPEMUL		# emulate FPU insn

# Standard system options
options 	KTRACE		# system call tracing support
options 	SYSVMSG		# System V message queues
options 	SYSVSEM		# System V semaphores
options 	SYSVSHM		# System V shared memory
#options 	SHMMAXPGS=1024	# 1024 pages is the default
#options 	LKM		# loadable kernel modules
options 	NTP		# network time protocol

# Debugging options
options 	DIAGNOSTIC	# extra kernel sanity checking
#options 	DEBUG		# extra kernel debugging support
options 	MSGBUFSIZE=65536 # kernel dmesg buffer
options 	USERCONF	# userconf(4) support
#options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel
options 	DDB		# kernel dynamic debugger
options 	DDB_HISTORY_SIZE=100 # enable history editing in DDB
makeoptions 	DEBUG="-g"	# compile full symbol table
makeoptions	COPY_SYMTAB=1	# size for embedded symbol table
#options 	DDB_COMMANDONENTER="trace;show registers"
options 	DB_MAX_LINE=-1

# Compatibility options
#options 	COMPAT_43	# compatibility with 4.3BSD binaries
#options 	COMPAT_09	# NetBSD 0.9,
#options 	COMPAT_10	# NetBSD 1.0,
#options 	COMPAT_11	# NetBSD 1.1,
#options 	COMPAT_12	# NetBSD 1.2,
#options 	COMPAT_13	# NetBSD 1.3,
#options 	COMPAT_14	# NetBSD 1.4,
#options 	COMPAT_15	# NetBSD 1.5,
options 	COMPAT_16	# NetBSD 1.6,
options 	COMPAT_20	# NetBSD 2.0,
options 	COMPAT_30	# NetBSD 3.0, and
options 	COMPAT_40	# NetBSD 4.0 binary compatibility.
#options 	EXEC_ECOFF	# exec ECOFF binaries
#options 	COMPAT_ULTRIX	# binary compatibility with Ultrix
options 	COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

# File systems
file-system	FFS		# Berkeley Fast Filesystem
file-system	MFS		# memory-based filesystem
#file-system 	EXT2FS		# second extended file system (linux)
file-system	NFS		# Sun NFS-compatible filesystem client
file-system	KERNFS		# kernel data-structure filesystem
#file-system	NULLFS		# NULL layered filesystem
#file-system 	OVERLAY		# overlay file system
#file-system	FDESC		# user file descriptor filesystem
#file-system	UMAPFS		# uid/gid remapping filesystem
#file-system	LFS		# Log-based filesystem (still experimental)
#file-system	PUFFS		# Userspace file systems (e.g. ntfs-3g & sshfs)
file-system	PROCFS		# /proc
#file-system	CD9660		# ISO 9660 + Rock Ridge file system
file-system	TMPFS		# Efficient memory file system
#file-system	UNION		# union file system
#file-system	MSDOSFS		# MS-DOS FAT filesystem(s).
#file-system 	CODA		# Coda File System; also needs vcoda (below)
file-system	PTYFS		# /dev/pts/N support

# File system options
#options 	NFSSERVER	# Sun NFS-compatible filesystem server
#options 	QUOTA		# FFS quotas
#options 	FFS_EI		# FFS Endian Independent support
#options 	SOFTDEP		# FFS soft updates support.
options 	WAPBL		# File system journaling support
options 	FFS_NO_SNAPSHOT	# No FFS snapshot support
#options 	EXT2FS_SYSTEM_FLAGS # makes ext2fs file flags (append and
				# immutable) behave as system flags.

# Networking options
#options 	GATEWAY		# IP packet forwarding
options 	INET		# Internet protocols
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# packet forwarding of multicast packets
#options 	PIM		# Protocol Independent Multicast
#options 	NETATALK	# AppleTalk (over Ethernet) protocol
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
#options 	IPFILTER_LOG	# ipmon(8) log support
#options 	IPFILTER_LOOKUP	# ippool(8) support

# JIT compiler for bpfilter
#options	SLJIT
#options	BPFJIT

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
#options 	PCI_NETBSD_CONFIGURE	# NetBSD configures the PCI bus
options 	PCIVERBOSE	# verbose PCI device autoconfig messages
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space
#options 	SCSIVERBOSE	# human readable SCSI error messages
options 	MIIVERBOSE	# verbose PHY autoconfig messages

# Bitmask for enabling the PCI IDE channels in the southbridge.
# Set bit 0 (0x01) for channel 0, bit 1 (0x02) for channel 1.
#
# Do this if your firmware (usually PMON and YAMON) doens't enable the IDE
# channels for you (thus causing the NetBSD `pciide' driver to ignore them).
options 	PCI_NETBSD_ENABLE_IDE=0x1

options 	NFS_BOOT_DHCP

config	netbsd		root on ? type ?
config	netbsd-wm0	root on wm0 type nfs
config	netbsd-msk0	root on msk0 type nfs
config	netbsd-sd0a	root on sd0a type ffs


mainbus0 	at root
cpunode* 	at mainbus? node ?
cpucore* 	at cpunode? core ?
cpu*		at cpucore? thread ?
obio0		at cpunode?
com0		at obio0	addr 0x14000 intr 9
com1		at obio0	addr 0x15000 intr 10
options 	COM_REGMAP
rmixl_gpio0 	at obio0	addr 0x18000 intr 14
gpio*		at rmixl_gpio?
rmixl_iobus0 	at obio0	addr 0x19000
rmixl_nand* 	at rmixl_iobus?	addr 0x01800000
#rmixl_nand* 	at rmixl_iobus?	cs 2
nand*		at rmixl_nand?
flash*		at nand?
#rmixl_pcic* 	at rmixl_iobus?	cs 6 addr 0x01000000
#pcmcia* 	at rmixl_pcic
rmixl_pcix0 	at obio0
pci*		at rmixl_pcix0
rmixl_pcie0 	at obio0
pci*		at rmixl_pcie0
ppb*		at pci?
pci*		at ppb?
wm*		at pci? dev ? function ?	# Intel i82546EB Gig-E
skc*		at pci? dev ? function ?
sk*		at skc?
mskc*		at pci? dev ? function ?
msk*		at mskc?
makphy*		at mii? phy ?			# Marvell 88E1000 PHYs
ukphy*		at mii? phy ?			# unknown PHY
rmixl_usbi0 	at obio0	addr 0x25000 intr 31
ohci0		at rmixl_usbi0	addr 0x24400 size 0x400 intr 0
ohci1		at rmixl_usbi0	addr 0x24800 size 0x400 intr 1
ehci0		at rmixl_usbi0	addr 0x24000 size 0x400 intr 2
siisata* 	at pci? dev ? function ?
atabus*		at ata?
wd*		at atabus? drive ? flags 0x0000

# USB
usb*		at ohci?
usb*		at ehci?
uhub*		at usb?
uhub*		at uhub? port ?
umass*		at uhub? port ? configuration ? interface ?
wd*		at umass?
scsibus* 	at umass? channel ?
sd*		at scsibus? target ? lun ?


# Pseudo-devices

# Disk/mass storage pseudo-devices
#pseudo-device	ccd				# concatenated disk devices
#pseudo-device	raid				# RAIDframe disk driver
#options 	RAID_AUTOCONFIG			# auto-configuration of RAID
#pseudo-device	fss				# file system snapshot device
pseudo-device	vnd				# disk-like interface to files

# Network pseudo-devices
pseudo-device	bpfilter			# Berkeley packet filter
pseudo-device	ipfilter			# IP filter (firewall) and NAT
pseudo-device	loop				# network loopback
#pseudo-device	ppp				# Point-to-Point Protocol
#pseudo-device	sl				# Serial Line IP
#pseudo-device	strip				# Starmode Radio IP (Metricom)
#pseudo-device	tun				# network tunneling over tty
#pseudo-device	tap				# virtual Ethernet
#pseudo-device	gre				# generic L3 over IP tunnel
#pseudo-device	ipip				# RFC 2003 IP Encapsulation
#pseudo-device	gif				# RFC1933 tunnel
#pseudo-device	faith				# IPv[46] tcp relay translation
#pseudo-device	stf				# 6to4 IPv6 over IPv4 encapsulation
#pseudo-device	vlan				# IEEE 802.1q encapsulation
#pseudo-device	bridge				# simple inter-network bridging
pseudo-device	kttcp				# kernel ttcp

# Miscellaneous pseudo-devices
pseudo-device	pty				# pseudo-terminals
#pseudo-device	sequencer			# MIDI sequencer
pseudo-device	clockctl			# user control of clock subsystem
pseudo-device	ksyms				# /dev/ksyms

# A pseudo device needed for Coda		# also needs CODA (above)
#pseudo-device	vcoda				# coda minicache <-> venus comm.
