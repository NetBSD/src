# $NetBSD: GENERIC,v 1.101.2.1 2015/09/22 12:05:50 skrll Exp $

include 	"arch/sbmips/conf/std.sbmips"

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

#ident 		"GENERIC-$Revision: 1.101.2.1 $"

#options 	LOCKDEBUG	# XXX XXX XXX XXX
#options 	DEBUG		# extra kernel debugging support

# The following three options are required for BCM1250 pass 1 silicon
#options 	SB1250_PASS1
#options 	NOFPU
#options 	FPEMUL

maxusers	32

# Standard system options
options 	KTRACE		# system call tracing support
options 	SYSVMSG		# System V message queues
options 	SYSVSEM		# System V semaphores
options 	SYSVSHM		# System V shared memory
#options 	NTP		# network time protocol

# Debugging options
#options 	DIAGNOSTIC	# extra kernel sanity checking
#options 	DEBUG		# extra kernel debugging support
options 	USERCONF	# userconf(4) support
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel
options 	DDB		# kernel dynamic debugger
options 	DDB_HISTORY_SIZE=100 # enable history editing in DDB
#makeoptions 	DEBUG="-g"	# compile full symbol table
makeoptions	COPY_SYMTAB=1	# size for embedded symbol table

# Compatibility options
options 	COMPAT_43	# compatibility with 4.3BSD binaries
#options 	COMPAT_09	# NetBSD 0.9,
#options 	COMPAT_10	# NetBSD 1.0,
#options 	COMPAT_11	# NetBSD 1.1,
#options 	COMPAT_12	# NetBSD 1.2,
#options 	COMPAT_13	# NetBSD 1.3,
#options 	COMPAT_14	# NetBSD 1.4,
#options 	COMPAT_15	# NetBSD 1.5,
options 	COMPAT_16	# NetBSD 1.6,
options 	COMPAT_20	# NetBSD 2.0,
options 	COMPAT_30	# NetBSD 3.0,
options 	COMPAT_40	# NetBSD 4.0,
options 	COMPAT_50	# NetBSD 5.0,
options 	COMPAT_60	# NetBSD 6.0, and
options 	COMPAT_70	# NetBSD 7.0 binary compatibility
#options 	EXEC_ECOFF	# exec ECOFF binaries
#options 	COMPAT_ULTRIX	# binary compatibility with Ultrix
options		COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

# File systems
file-system	FFS		# Berkeley Fast Filesystem
file-system	NFS		# Sun NFS-compatible filesystem client
file-system	KERNFS		# kernel data-structure filesystem
#file-system	NULLFS		# NULL layered filesystem
file-system 	OVERLAY		# overlay file system
file-system	MFS		# memory-based filesystem
file-system	FDESC		# user file descriptor filesystem
#file-system	UMAPFS		# uid/gid remapping filesystem
file-system	LFS		# Log-based filesystem (still experimental)
file-system	PROCFS		# /proc
#file-system	CD9660		# ISO 9660 + Rock Ridge file system
#file-system	UNION		# union file system
#file-system	MSDOSFS		# MS-DOS FAT filesystem(s).
#file-system 	CODA		# Coda File System; also needs vcoda (below)
file-system	PTYFS		# /dev/pts/N support
file-system	TMPFS		# Efficient memory file-system
#file-system	UDF		# experimental - OSTA UDF CD/DVD file-system

# File system options
options 	NFSSERVER	# Sun NFS-compatible filesystem server
options 	QUOTA		# legacy UFS quotas
options 	QUOTA2		# new, in-filesystem UFS quotas
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support
options 	UFS_EXTATTR	# Extended attribute support for UFS1
#options 	FFS_EI		# FFS Endian Independent support
options 	WAPBL		# File system journaling support
#options	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
#options 	EXT2FS_SYSTEM_FLAGS # makes ext2fs file flags (append and
				# immutable) behave as system flags.

# Networking options
#options 	GATEWAY		# IP packet forwarding
options 	INET		# Internet protocols
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# packet forwarding of multicast packets
#options 	PIM		# Protocol Independent Multicast
#options 	NETATALK	# AppleTalk (over Ethernet) protocol
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
options 	IPFILTER_LOG	# ipmon(8) log support
options 	IPFILTER_LOOKUP	# ippool(8) support
options 	IPFILTER_COMPAT # Compat for IP-Filter
#options 	IPFILTER_DEFAULT_BLOCK	# block all packets by default

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

# Compatibility with 4.2BSD implementation of TCP/IP.  Not recommended.
#options 	TCP_COMPAT_42

# JIT compiler for bpfilter
#options	SLJIT
#options	BPFJIT

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
options 	PCIVERBOSE	# verbose PCI device autoconfig messages
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space
#options 	SCSIVERBOSE	# human readable SCSI error messages
options 	MIIVERBOSE	# verbose PHY autoconfig messages

options 	NFS_BOOT_DHCP

#config		netbsd	root on ? type ?
config		netbsd	root on sbmac0 type nfs

zbbus*		at root

cpu*		at zbbus? busid ?
sbscd*		at zbbus? busid ?
sbbrz*		at zbbus? busid ?
sbobio*		at zbbus? busid ?

pci*		at sbbrz? bus ?
ppb*		at pci? dev ?
pci*		at ppb?

ohci*		at pci? dev ? function ?        # Open Host Controller

bge*		at pci? dev ?

#sbicu*		at sbscd? offset ?
sbwdog*		at sbscd? offset ? intr ?
sbtimer0	at sbscd? offset ? intr ? flags 0x01		# clock
#sbtimer1	at sbscd? offset ? intr ? flags 0x02		# statclock
sbtimer*	at sbscd? offset ? intr ?

sbmac*		at sbobio? offset ?
sbscn*		at sbobio? offset ?
#sbgbus*	at sbobio? offset ?
smbus*		at sbobio? offset ?

xirtc*		at smbus? chan ? dev ?		# Xicor X1241 RTC
m41t81rtc*	at smbus? chan ? dev ?		# ST M41T81 RTC

# MII/PHY support
brgphy*		at mii? phy ?

# USB
usb*		at ohci?
uhub*		at usb?
uhub*		at uhub? port ?
umass*		at uhub? port ? configuration ? interface ?
wd*		at umass?
scsibus*	at umass? channel ?
sd*		at scsibus? target ? lun ?
uplcom* 	at uhub? port ? 	# I/O DATA USB-RSAQ2 serial adapter
ucom*   	at uplcom? portno ?

# Pseudo-devices

# Disk/mass storage pseudo-devices
pseudo-device	ccd			# concatenated disk devices
#pseudo-device	cgd			# cryptographic disk devices
#pseudo-device	raid			# RAIDframe disk driver
#options 	RAID_AUTOCONFIG		# auto-configuration of RAID
pseudo-device	md			# memory disk device (ramdisk)
pseudo-device	vnd			# disk-like interface to files
#options 	VND_COMPRESSION		# compressed vnd(4)

# Network pseudo-devices
pseudo-device	bpfilter		# Berkeley packet filter
#pseudo-device	carp			# Common Address Redundancy Protocol
pseudo-device	ipfilter		# IP filter (firewall) and NAT
pseudo-device	loop			# network loopback
#pseudo-device	ppp			# Point-to-Point Protocol
#pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
#pseudo-device	sl			# Serial Line IP
#pseudo-device	strip			# Starmode Radio IP (Metricom)
#pseudo-device	irframetty		# IrDA frame line discipline
#pseudo-device	tun			# network tunneling over tty
#pseudo-device	tap			# virtual Ethernet
#pseudo-device	gre			# generic L3 over IP tunnel
#pseudo-device	ipip			# RFC 2003 IP Encapsulation
#pseudo-device	gif			# RFC1933 tunnel
#pseudo-device	faith			# IPv[46] tcp relay translation
#pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
pseudo-device	vlan			# IEEE 802.1q encapsulation
pseudo-device	bridge			# simple inter-network bridging
#options	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
pseudo-device	agr			# IEEE 802.3ad link aggregation

#
# accept filters
pseudo-device   accf_data		# "dataready" accept filter
pseudo-device   accf_http		# "httpready" accept filter

# Miscellaneous pseudo-devices
pseudo-device	pty			# pseudo-terminals
#pseudo-device	sequencer		# MIDI sequencer
pseudo-device	clockctl		# user control of clock subsystem
pseudo-device	ksyms			# /dev/ksyms
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if

# A pseudo device needed for Coda	# also needs CODA (above)
#pseudo-device	vcoda			# coda minicache <-> venus comm.

# Veriexec
#
# a pseudo device needed for veriexec
#pseudo-device	veriexec
#
# Uncomment the fingerprint methods below that are desired. Note that
# removing fingerprint methods will have almost no impact on the kernel
# code size.
#
#options VERIFIED_EXEC_FP_RMD160
#options VERIFIED_EXEC_FP_SHA256
#options VERIFIED_EXEC_FP_SHA384
#options VERIFIED_EXEC_FP_SHA512
#options VERIFIED_EXEC_FP_SHA1
#options VERIFIED_EXEC_FP_MD5
