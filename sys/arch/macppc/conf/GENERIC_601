# $NetBSD: GENERIC_601,v 1.7 2014/10/21 08:49:55 macallan Exp $
#
# GENERIC machine description file
# 
# This machine description file is used to generate the default NetBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.
#
# For PPC 601, need "CPUFLAGS+= -mcpu=601"
#
# Openfirmware 1.0.5 require a kernel < 4M for netbooting
#
# this config more or less matches a Power Macintosh 7200 with a USB card

include		"arch/macppc/conf/std.macppc.601"

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

ident 		"GENERIC-$Revision: 1.7 $"

maxusers	32

# Standard system options
options 	INSECURE	# disable kernel security levels

options 	RTC_OFFSET=0	# hardware clock is this many mins. west of GMT
options 	NTP		# NTP phase/frequency locked loop
options 	KTRACE		# system call tracing via ktrace(1)

options 	SYSVMSG		# System V message queues
options 	SYSVSEM		# System V semaphores
options 	SYSVSHM		# System V shared memory

options 	MODULAR		# new style module(7) framework
options 	MODULAR_DEFAULT_AUTOLOAD

#options 	USERCONF	# userconf(4) support
#options 	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel

# Enable experimental buffer queue strategy for better responsiveness under
# high disk I/O load. Use it with caution - it's not proven to be stable yet.
#options 	BUFQ_READPRIO
#options 	BUFQ_PRIOCSCAN

# Diagnostic/debugging support options
#options 	DIAGNOSTIC	# cheap kernel consistency checks
#options 	DEBUG		# expensive debugging checks/support
options 	ZS_CONSOLE_ABORT# allow break to get into DDB on serial
options 	DDB		# in-kernel debugger
#options 	DDB_ONPANIC=0	# don't go into ddb on panic.
options 	DDB_HISTORY_SIZE=512	# enable history editing in DDB
#options 	TRAP_PANICWAIT
options		DDB_COMMANDONENTER="bt"

#makeoptions 	DEBUG="-g"	# compile full symbol table

# Compatibility options
options 	COMPAT_50	# NetBSD 5.0,
options 	COMPAT_60	# NetBSD 6.0, and
options 	COMPAT_70	# NetBSD 7.0 binary compatibility.
#options 	COMPAT_386BSD_MBRPART # recognize old partition ID
#options 	COMPAT_LINUX	# Linux binary compatibility
#options 	TCP_COMPAT_42	# 4.2BSD TCP/IP bug compat. Not recommended.
options 	COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

# Wedge support
options         DKWEDGE_AUTODISCOVER    # Automatically add dk(4) instances
options         DKWEDGE_METHOD_GPT      # Supports GPT partitions as wedges
#options		DKWEDGE_METHOD_BSDLABEL # Support disklabel entries as wedges
#options		DKWEDGE_METHOD_MBR      # Support MBR partitions as wedges
options		DKWEDGE_METHOD_APPLE    # Support Apple partitions as wedges

# File systems
file-system 	FFS		# UFS
#file-system 	EXT2FS		# second extended file system (linux)
#file-system 	LFS		# log-structured file system
#file-system 	MFS		# memory file system
file-system 	NFS		# Network File System client
file-system 	CD9660		# ISO 9660 + Rock Ridge file system
#file-system 	MSDOSFS		# MS-DOS file system
file-system 	FDESC		# /dev/fd
file-system 	KERNFS		# /kern
#file-system 	NULLFS		# loopback file system
#file-system 	OVERLAY		# overlay file system
#file-system	PUFFS		# Userspace file systems (e.g. ntfs-3g & sshfs)
file-system 	PROCFS		# /proc
#file-system 	UMAPFS		# NULLFS + uid and gid remapping
#file-system 	UNION		# union file system
#file-system	SMBFS		# CIFS; also needs nsmb (below)
file-system	PTYFS		# /dev/pts/N support
file-system	TMPFS		# Efficient memory file-system
#file-system	UDF		# experimental - OSTA UDF CD/DVD file-system
#file-system	HFS		# experimental - Apple HFS+ (read-only)

# File system options
#options 	QUOTA		# legacy UFS quotas
#options 	QUOTA2		# new, in-filesystem UFS quotas
#options 	FFS_EI		# FFS Endian Independent support
options 	WAPBL		# File system journaling support
#options 	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
#options 	NFSSERVER	# Network File System server
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support
#options 	EXT2FS_SYSTEM_FLAGS # makes ext2fs file flags (append and
				# immutable) behave as system flags.
#options 	APPLE_UFS	# Apple UFS support in FFS

options 	NFS_BOOT_DHCP	# Support DHCP NFS root

# Networking options
#options 	GATEWAY		# packet forwarding
options 	INET		# IP + ICMP + TCP + UDP
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
#options 	NETATALK	# AppleTalk networking protocols
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
#options 	IPFILTER_LOG	# ipmon(8) log support
#options 	IPFILTER_LOOKUP	# ippool(8) support
#options 	IPFILTER_COMPAT # Compat for IP-Filter
#options 	IPFILTER_DEFAULT_BLOCK	# block all packets by default
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
options 	PCIVERBOSE	# verbose PCI device autoconfig messages
options 	MIIVERBOSE	# verbose PHY autoconfig messages
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space
options 	SCSIVERBOSE	# human readable SCSI error messages
options 	USBVERBOSE	# verbose USB device autoconfig messages

# wscons options
#options 	WSEMUL_SUN			# sun terminal emulation
options 	WSEMUL_VT100			# VT100 / VT220 emulation
options 	WSDISPLAY_COMPAT_PCVT		# emulate some ioctls
options 	WSDISPLAY_COMPAT_SYSCONS	# emulate some ioctls
options 	WSDISPLAY_COMPAT_USL		# VT handling

options 	WS_DEFAULT_FG=WSCOL_BLACK
options 	WS_DEFAULT_BG=WSCOL_LIGHT_WHITE
options 	WS_KERNEL_FG=WSCOL_GREEN
options 	WS_KERNEL_BG=WSCOL_LIGHT_WHITE

#options 	WSDISPLAY_COMPAT_RAWKBD		# can get raw scancodes
options 	FONT_GALLANT12x22
options 	FONT_QVSS8x15		# a smaller font for lower resolutions
options         FONT_DROID_SANS_MONO12x22
#options         FONT_DROID_SANS_MONO8x16

# Optional Mac keyboard tweaks

# Tweak the keyboard driver to treat the caps lock key on an ADB
# keyboard as a control key; requires special remapping because of
# ADB's strange emulation of a mechanically-locked key.
#options 	CAPS_IS_CONTROL

# On Mac laptops, several function keys double as "hot keys"
# (brightness, volume, eject) when the Fn modifier is held down.  Mac
# OS X likes to reprogram the keyboard controller to send hot key
# events when Fn is not held down and send function key events when it
# is.  This option transforms the non-keyboard "button" events back
# into function key events.
# enabled by default since trying to control brightness with those causes
# trouble on pretty much all halfway recent Apple laptops
options 	FORCE_FUNCTION_KEYS

# Kernel root file system and dump configuration.
config		netbsd	root on ? type ?

#
# Device configuration
#

mainbus* at root

cpu*	at mainbus?
bandit*	at mainbus?

pci*	at bandit? bus ?
pci*	at ppb? bus ?

pchb*	at pci? dev ? function ?	# PCI-Host bridges
ppb*	at pci? dev ? function ?	# PCI-PCI bridges

# PCI SCSI controllers
#ahc*	at pci? dev ? function ?	# Adaptec 294x, aic78x0 SCSI

# Display devices
#
# The 7200's onboard video is unsupported ( by OF no less ) so we need either a
# graphics card that works as OF console or a serial console.
# The only cards known to work ( so far ) are PCI Voodoo3s flashed with the
# official Macintosh firmware from 3Dfx. The others should work but are
# untested with OF 1.0.5

#gffb*		at pci?	function ?	# NVIDIA GeForce2 MX
#machfb*		at pci? function ?	# ATI Mach 64, Rage, Rage Pro
#r128fb*		at pci? function ?	# ATI Rage 128
voodoofb*	at pci? function ?	# 3Dfx Voodoo3 

# ATI Radeon. Still has problems on some hardware
#radeonfb*	at pci? function ?

# generic PCI framebuffer, should work with everything supported by OF
genfb*		at pci? function ?

# make sure the console display is always wsdisplay0
wsdisplay0	at wsemuldisplaydev? console 1
wsdisplay*	at wsemuldisplaydev?

#macofcons0 at pci? dev ? function ?	# OpenFirmware console (for debugging)

obio*	at pci? dev ? function ?

mc*	at obio?			# MACE ethernet
esp*	at obio? flags 0x00ff		# 53c9x SCSI
# the 7200 has no mesh but other PMacs with 601 cards may
mesh*	at obio? flags 0xffff		# MESH SCSI
nvram*	at obio?			# nvram

# the new, improved ADB subsystem

cuda*	at obio?			# CUDA, for Old World PowerMacs
nadb*	at adb_bus?			# ADB bus enumerator, at cuda or pmu
adbkbd* at nadb?			# ADB keyboard
adbms*	at nadb?			# ADB mice and touchpads

wskbd*		at wskbddev? console ?
wsmouse*	at wsmousedev?

iic0	at cuda0		# CUDA's IIC bus

zsc*	at obio?
zstty*	at zsc? channel ?

# awacs is disabled because on most systems (7300 - 9600 PowerMacs,
# many kinds of G4s), very heavy load can cause the machine to lock
# up. ONLY enable this if your machine is never under heavy load, or
# you'd rather have audio than worry about occasional lockups.
awacs*	at obio?			# Apple audio device

# Cryptographic Devices

# PCI cryptographic devices
# (disabled, requires opencrypto framework which requires generic softints
#hifn*	at pci? dev ? function ?	# Hifn 7755/7811/795x
#ubsec*	at pci? dev ? function ?	# Broadcom 5501/5601/580x/582x


scsibus* at scsi?

sd*	at scsibus? target ? lun ?	# SCSI disks
#st*	at scsibus? target ? lun ?	# SCSI tape drives
cd*	at scsibus? target ? lun ?	# SCSI CD-ROM drives
#ch*	at scsibus? target ? lun ?	# SCSI autochangers
#ss*	at scsibus? target ? lun ?	# SCSI scanners
#uk*	at scsibus? target ? lun ?	# SCSI unknown

# PCI USB controllers
ohci*	at pci? dev ? function ?	# USB Open Host Controller
#ehci*	at pci? dev ? function ?	# USB Enhanced Host Controller

#usb*	at ehci?					# USB bus support
usb*	at ohci?					# USB bus support
uhub*	at usb?						# USB Hubs
uhub*	at uhub? port ?

uhidev*	at uhub? port ? configuration ? interface ?	# USB HID device

ums*	at uhidev? reportid ?				# USB Mice
ukbd*	at uhidev? reportid ?				# USB Keyboards
uhid*	at uhidev? reportid ?				# USB Generic HID

umass*	at uhub? port ? configuration ? interface ?	# USB Mass Storage
ugen*	at uhub? port ? configuration ? interface ?	# USB Generic driver

# Audio Devices

# Audio support
audio*	at audiobus?

#
# accept filters
#pseudo-device   accf_data		# "dataready" accept filter
#pseudo-device   accf_http		# "httpready" accept filter

#pseudo-device 	crypto			# /dev/crypto device
					# (disabled, requires generic softints)
#pseudo-device	swcrypto		# software crypto implementation
pseudo-device	vnd			# disk-like interface to files
#options 	VND_COMPRESSION		# compressed vnd(4)
#pseudo-device	ccd			# concatenated/striped disk devices
#pseudo-device	cgd			# cryptographic disk devices
#pseudo-device	raid			# RAIDframe disk driver
#options 	RAID_AUTOCONFIG		# auto-configuration of RAID components
# Options to enable various other RAIDframe RAID types.
# options 	RF_INCLUDE_EVENODD=1
# options 	RF_INCLUDE_RAID5_RS=1
# options 	RF_INCLUDE_PARITYLOGGING=1
# options 	RF_INCLUDE_CHAINDECLUSTER=1
# options 	RF_INCLUDE_INTERDECLUSTER=1
# options 	RF_INCLUDE_PARITY_DECLUSTERING=1
# options 	RF_INCLUDE_PARITY_DECLUSTERING_DS=1
pseudo-device	fss			# file system snapshot device
#pseudo-device	md			# memory disk device
pseudo-device	loop			# network loopback
#pseudo-device	bpfilter		# packet filter
#pseudo-device	ipfilter		# IP filter (firewall) and NAT
#pseudo-device	ppp			# Point-to-Point Protocol
#pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
#pseudo-device	sl			# Serial Line IP
#pseudo-device	tun			# network tunneling over tty
pseudo-device	tap			# virtual Ethernet
#pseudo-device	gre			# generic L3 over IP tunnel
#pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC1933)
#pseudo-device	faith			# IPv[46] tcp relay translation i/f
#pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
#pseudo-device	vlan			# IEEE 802.1q encapsulation
#pseudo-device	bridge			# simple inter-network bridging
#options 	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
#pseudo-device	agr			# IEEE 802.3ad link aggregation
pseudo-device	pty			# pseudo-terminals
pseudo-device	openfirm		# /dev/openfirm
pseudo-device	wsmux			# mouse and keyboard multiplexer
#pseudo-device	swwdog			# software watchdog driver - swwdog(4)
pseudo-device	clockctl		# user control of clock subsystem
pseudo-device	ksyms			# /dev/ksyms
#pseudo-device	nsmb			# SMB requester
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if
#pseudo-device	putter			# for puffs and pud

# userland interface to drivers, including autoconf and properties retrieval
pseudo-device   drvctl

# Veriexec
#
# a pseudo device needed for veriexec
#pseudo-device	veriexec
#
# Uncomment the fingerprint methods below that are desired. Note that
# removing fingerprint methods will have almost no impact on the kernel
# code size.
#
#options VERIFIED_EXEC_FP_RMD160
#options VERIFIED_EXEC_FP_SHA256
#options VERIFIED_EXEC_FP_SHA384
#options VERIFIED_EXEC_FP_SHA512
#options VERIFIED_EXEC_FP_SHA1
#options VERIFIED_EXEC_FP_MD5

#options PAX_MPROTECT=0			# PaX mprotect(2) restrictions
