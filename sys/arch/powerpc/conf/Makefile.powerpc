#	$NetBSD: Makefile.powerpc,v 1.58.2.2 2016/03/19 11:30:04 skrll Exp $
#
# Makefile for NetBSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/powerpc/conf/``machineid''
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/powerpc/conf/Makefile.powerpc
# after which config should be rerun for all machines of that type.
#
# To specify debugging, add the config line: makeoptions DEBUG="-g"
# A better way is to specify -g only for a few files.
#
#	makeoptions DEBUGLIST="uvm* trap if_*"

MACHINE_ARCH?=powerpc
USETOOLS?=	no
NEED_OWN_INSTALL_TARGET?=no
.include <bsd.own.mk>

##
## (1) port identification
##
THISPPC=	$S/arch/${MACHINE}
POWERPC=	$S/arch/powerpc
GENASSYM_CONF=	${POWERPC}/powerpc/genassym.cf
GENASSYM_CONF+=	${POWERPC}/${PPCDIR}/genassym.cf
.if exists(${THISPPC}/${MACHINE}/genassym.cf)
GENASSYM_CONF+=	${THISPPC}/${MACHINE}/genassym.cf
.endif
.-include "${THISPPC}/conf/Makefile.${MACHINE}.inc"

##
## (2) compile settings
##
CPPFLAGS+=	-D${MACHINE}=${MACHINE}
CWARNFLAGS+=	-Wreturn-type
.if ${PPCDIR} == "oea"
CFLAGS+=	${${ACTIVE_CC} == "gcc":? -mno-strict-align :}
CFLAGS+=	${${ACTIVE_CC} == "gcc":? -Wa,-maltivec :}
.endif
.if ${PPCDIR} == "booke"
DEFCOPTS=	-O2
CFLAGS+=	-fstack-protector
CFLAGS+=	${${ACTIVE_CC} == "gcc":? -misel :}
.endif
CFLAGS+=	${${ACTIVE_CC} == "gcc":? -msdata=none :}
CFLAGS+=	-msoft-float
CFLAGS+=	${CCPUOPTS}
AFLAGS+=	${AOPTS} -D_NOREGNAMES

##
## (3) libkern and compat
##
OPT_MODULAR=	%MODULAR%
.if !empty(OPT_MODULAR)
KERN_AS=	obj
.else
KERN_AS=	library
.endif

##
## (4) local objects, compile rules, and dependencies
##
.if !defined(SYSTEM_FIRST_OBJ)
SYSTEM_FIRST_OBJ= locore.o
.endif
.if !defined(SYSTEM_FIRST_SFILE)
SYSTEM_FIRST_SFILE= ${THISPPC}/${MACHINE}/locore.S
.endif
MD_OBJS=	${SYSTEM_FIRST_OBJ}
MD_CFILES=
MD_SFILES=	${SYSTEM_FIRST_SFILE}

${SYSTEM_FIRST_OBJ}: ${SYSTEM_FIRST_SFILE} assym.h
	${NORMAL_S}

##
## (5) link settings
##
KERNLDSCRIPT?=	${POWERPC}/conf/kern.ldscript
TEXTADDR?=	0x100000
LINKFORMAT=	-N

ENTRYPOINT=	__start

.if defined(NEED_MDSETIMAGE) && $(NEED_MDSETIMAGE) != "no" \
    && defined(RAMDISKDIR) && exists(${RAMDISKDIR}/ramdisk.fs)
SYSTEM_DEP+=	${RAMDISKDIR}/ramdisk.fs
SYSTEM_LD_TAIL_EXTRA+=; \
	echo ${TOOL_MDSETIMAGE} -s $@ ${RAMDISKDIR}/ramdisk.fs; \
	${TOOL_MDSETIMAGE} -s $@ ${RAMDISKDIR}/ramdisk.fs
.if !empty(DEBUG:M-g*)
SYSTEM_LD_TAIL_EXTRA+=; \
	echo ${TOOL_MDSETIMAGE} -s $@.gdb ${RAMDISKDIR}/ramdisk.fs; \
	${TOOL_MDSETIMAGE} -s $@.gdb ${RAMDISKDIR}/ramdisk.fs
.endif
.endif

.if defined(NEED_SREC) && ${NEED_SREC} != "no"
SYSTEM_LD_TAIL_EXTRA+=; \
	echo ${OBJCOPY} -O srec $@ $@.srec; \
	${OBJCOPY} -O srec $@ $@.srec
.endif

.if defined(NEED_BINARY) && ${NEED_BINARY} != "no"
SYSTEM_LD_TAIL_EXTRA+=; \
	echo ${OBJCOPY} -S -O binary $@ $@.bin; \
	${OBJCOPY} -S -O binary $@ $@.bin

EXTRA_KERNELS+= ${KERNELS:@.KERNEL.@${.KERNEL.}.bin@}

.if defined(NEED_UBOOTIMAGE) && ${NEED_UBOOTIMAGE} != "no"
_OSRELEASE!=		${HOST_SH} $S/conf/osrelease.sh
MKUBOOTIMAGEARGS=       -A powerpc -T kernel -C gz
MKUBOOTIMAGEARGS+=      -a ${TEXTADDR:C/....$/0000/} -e $(TEXTADDR)
MKUBOOTIMAGEARGS+=      -n "NetBSD/$(MACHINE) ${_OSRELEASE} ($(KERNEL_BUILD:T))"

SYSTEM_LD_TAIL_EXTRA+=; \
	echo ${TOOL_GZIP_N} -9c $@.bin '>' $@.bin.gz; \
	${TOOL_GZIP_N} -9c $@.bin > $@.bin.gz; \
	echo ${TOOL_MKUBOOTIMAGE} ${MKUBOOTIMAGEARGS} $@.bin.gz $@.ub; \
	${TOOL_MKUBOOTIMAGE} ${MKUBOOTIMAGEARGS} $@.bin.gz $@.ub

EXTRA_KERNELS+= ${KERNELS:@.KERNEL.@${.KERNEL.}.bin.gz@}
EXTRA_KERNELS+= ${KERNELS:@.KERNEL.@${.KERNEL.}.ub@}
.endif
.endif

.if !empty(SYSTEM_LD_TAIL_EXTRA_EXTRA)
SYSTEM_LD_TAIL_EXTRA+= ${SYSTEM_LD_TAIL_EXTRA_EXTRA}
.endif

##
## (6) port specific target dependencies
##

# depend on CPU configuration
locore.o machdep.o: Makefile

lock_stubs.o setfault.o: assym.h

##
## (7) misc settings
##

##
## (8) config(8) generated machinery
##
%INCLUDES

%OBJS

%CFILES

%SFILES

%LOAD

%RULES

##
## (9) port independent kernel machinery
##
.include "$S/conf/Makefile.kern.inc"
${KERNLIB} ${KERNLIB_PROF} ${KERNLIBLN}: assym.h

##
## (10) Appending make options.
##
%MAKEOPTIONSAPPEND
