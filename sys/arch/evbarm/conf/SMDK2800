#	$NetBSD: SMDK2800,v 1.44.2.1 2012/04/17 00:06:13 yamt Exp $
#
#	SMDK2800 -- Samsung's S3C2800 evaluation board.
#

include	"arch/evbarm/conf/std.smdk2800"

#options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

# Enable the hooks used for initializing the root memory-disk.
#options 	MEMORY_DISK_HOOKS
#options 	MEMORY_DISK_DYNAMIC
#options 	MEMORY_DISK_IS_ROOT	# force root on memory disk
#options 	MEMORY_DISK_SERVER=0	# no userspace memory disk support
#options 	MEMORY_DISK_ROOT_SIZE=4096	# size of memory disk, in blocks
#options 	MEMORY_DISK_ROOT_SIZE=2880	# 1.44M, same as a floppy

# estimated number of users

maxusers	32

# Standard system options

options 	RTC_OFFSET=0	# hardware clock is this many mins. west of GMT
options 	NTP		# NTP phase/frequency locked loop

# CPU options

options 	CPU_ARM9	# Support the ARM9TDMI core
makeoptions	CPUFLAGS="-march=armv4"

options 	S3C2XX0_XTAL_CLK=6000000	# 6MHz external Xtal

# Architecture options

# File systems

file-system	FFS		# UFS
#file-system	LFS		# log-structured file system
file-system	MFS		# memory file system
file-system	NFS		# Network file system
#file-system 	ADOSFS		# AmigaDOS-compatible file system
#file-system 	EXT2FS		# second extended file system (linux)
#file-system	CD9660		# ISO 9660 + Rock Ridge file system
#file-system	MSDOSFS		# MS-DOS file system
#file-system	FDESC		# /dev/fd
file-system	KERNFS		# /kern
#file-system	NULLFS		# loopback file system
file-system	PROCFS		# /proc
#file-system	UMAPFS		# NULLFS + uid and gid remapping
#file-system	UNION		# union file system
file-system	PTYFS		# /dev/pts/N support

# File system options
#options 	QUOTA		# legacy UFS quotas
#options 	QUOTA2		# new, in-filesystem UFS quotas
#options 	FFS_EI		# FFS Endian Independent support
#options 	NFSSERVER
options 	WAPBL		# File system journaling support
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support

# Networking options

#options 	GATEWAY		# packet forwarding
options 	INET		# IP + ICMP + TCP + UDP
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_ESP	# IP security (encryption part; define w/ IPSEC)
#options 	IPSEC_NAT_T	# IPsec NAT traversal (NAT-T)
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
#options 	ISO,TPIP	# OSI
#options 	EON		# OSI tunneling over IP
#options 	NETATALK	# AppleTalk networking
#options 	PFIL_HOOKS	# pfil(9) packet filter hooks
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

options 	NFS_BOOT_BOOTP
options 	NFS_BOOT_DHCP
options 	NFS_BOOT_BOOTPARAM

# Compatibility options

#options 	COMPAT_43	# 4.3BSD compatibility.
options 	COMPAT_50	# NetBSD 5.0 compatibility.
options 	COMPAT_40	# NetBSD 4.0 compatibility.
options 	COMPAT_30	# NetBSD 3.0 compatibility.
options 	COMPAT_20	# NetBSD 2.0 compatibility.
options 	COMPAT_16	# NetBSD 1.6 compatibility.
#options 	COMPAT_15	# NetBSD 1.5 compatibility.
#options 	COMPAT_14	# NetBSD 1.4 compatibility.
#options 	COMPAT_13	# NetBSD 1.3 compatibility.
#options 	COMPAT_12	# NetBSD 1.2 compatibility.
#options 	COMPAT_11	# NetBSD 1.1 compatibility.
#options 	COMPAT_10	# NetBSD 1.0 compatibility.
#options 	COMPAT_09	# NetBSD 0.9 compatibility.
#options 	TCP_COMPAT_42	# 4.2BSD TCP/IP bug compat. Not recommended.
options		COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

# Shared memory options

#options 	SYSVMSG		# System V-like message queues
#options 	SYSVSEM		# System V-like semaphores
#options 	SYSVSHM		# System V-like memory sharing

# Miscellaneous kernel options
options 	KTRACE		# system call tracing, a la ktrace(1)
#XXX: options 	IRQSTATS	# manage IRQ statistics
#options 	KMEMSTATS	# kernel memory statistics
options 	SCSIVERBOSE	# Verbose SCSI errors
options 	PCIVERBOSE	# Verbose PCI descriptions
options 	MIIVERBOSE	# Verbose MII autoconfuration messages
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space
options 	PCI_NETBSD_CONFIGURE	# Do not rely on BIOS/whatever to
					# configure PCI devices
#options 	PCI_CONFIGURE_VERBOSE	# Show PCI config information
#options 	PCI_DEBUG
options 	DDB_KEYCODE=0x1d	# Enter ddb on ^]
options 	USERCONF	# userconf(4) support
#options	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
#options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel

# Development and Debugging options

#options 	ARM700BUGTRACK	# track the ARM700 swi bug
#options 	PORTMASTER	# Enable PortMaster only options
options 	DIAGNOSTIC	# internal consistency checks
#options 	PMAP_DEBUG	# Enable pmap_debug_level code
#options 	VERBOSE_INIT_ARM # verbose bootstraping messages
#options 	KGDB
#options  	DEBUG_KGDB
#options 	DDB		# in-kernel debugger
#options 	DDB_HISTORY_SIZE=100	# Enable history editing in DDB
#makeoptions	DEBUG="-g"	# compile full symbol table
config		netbsd	root on ? type ?

# The main bus device
mainbus0	at root

# The boot CPU
cpu0		at mainbus?

# Core logic on Samsung S3C2800
ssio0	at mainbus?

# integrated UART
sscom0	at ssio? index 0
sscom1	at ssio? index 1
options 	SSCOM0CONSOLE
#options 	SSCOM1CONSOLE
options KGDB_DEVNAME="\"sscom1\""   # sscom0 or sscom1
options KGDB_DEVRATE=57600

# PCI bus via internal PCI controller
sspci0		at ssio?			# PCI bus
pci0	at sspci0

# PCI IDE Controllers and Devices
# PCI IDE controllers - see pciide(4) for supported hardware.
# The 0x0001 flag force the driver to use DMA, even if the driver doesn't know
# how to set up DMA modes for this chip. This may work, or may cause
# a machine hang with some controllers.
#pciide* 	at pci? dev ? function ? flags 0x0000	# GENERIC pciide driver
#artsata*	at pci? dev ? function ?	# Intel i31244 SATA controller
#cmdide* 	at pci? dev ? function ?	# CMD tech IDE controllers
#hptide* 	at pci? dev ? function ?	# Triones/HighPoint IDE controllers
#pdcide* 	at pci? dev ? function ?	# Promise IDE controllers
#pdcsata* 	at pci? dev ? function ?	# Promise SATA150 controllers
#satalink*	at pci? dev ? function ?	# SiI SATALink controllers

# ATA bus support
#atabus* 	at ata? channel ?

# IDE drives
# Flags are used only with controllers that support DMA operations
# and mode settings (e.g. some pciide controllers)
# The lowest order four bits (rightmost digit) of the flags define the PIO
# mode to use, the next set of four bits the DMA mode and the third set the
# UltraDMA mode. For each set of four bits, the 3 lower bits define the mode
# to use, and the last bit must be 1 for this setting to be used.
# For DMA and UDMA, 0xf (1111) means 'disable'.
# 0x0fac means 'use PIO mode 4, DMA mode 2, disable UltraDMA'.
# (0xc=1100, 0xa=1010, 0xf=1111)
# 0x0000 means "use whatever the drive claims to support".
#wd*		at atabus? drive ? flags 0x0000	# the drives themselves

# PCI SCSI Controllers and Buses
#ahc*		at pci? dev ? function ?	# Adaptec [23]94x, aic78x0 SCSI Controllers
#scsibus*	at ahc?

# SCSI devices

#sd*		at scsibus? target ? lun ?	# SCSI disk drives
#st*		at scsibus? target ? lun ?	# SCSI tape drives
#cd*		at scsibus? target ? lun ?	# SCSI CD-ROM drives
#ch*		at scsibus? target ? lun ?	# SCSI auto-changers drives
#uk*		at scsibus? target ? lun ?	# SCSI unknown drives
#ss*		at scsibus? target ? lun ?	# SCSI scanner

# PCI network interfaces
#fxp*		at pci? dev ? function ?	# I82557/I82558 ethernet cards
#ne*		at pci? dev ? function ?	# NE2000 compat ethernet
#tlp*		at pci? dev ? function ?	# DECchip 21x4x and clones
sip*	at pci? dev ? function ?	# SiS 900/DP83815 Ethernet

# MII/PHY support
#inphy*		at mii? phy ?			# Intel 82555 PHYs
#lxtphy*		at mii? phy ?			# Level One LXT-970 PHYs
ukphy*		at mii? phy ?			# generic unknown PHYs

# Pseudo-Devices

# disk/mass storage pseudo-devices
#pseudo-device	md			# memory disk device (ramdisk)
#pseudo-device	vnd			# disk-like interface to files
#pseudo-device	fss			# file system snapshot device

# network pseudo-devices
pseudo-device	bpfilter		# Berkeley packet filter
pseudo-device	ipfilter		# IP filter (firewall) and NAT
pseudo-device	loop			# network loopback
#pseudo-device	kttcp			# network loopback
#pseudo-device	ppp			# Point-to-Point Protocol
#pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
#pseudo-device	sl			# Serial Line IP
#pseudo-device	strip			# Starmode Radio IP (Metricom)
#pseudo-device	irframetty		# IrDA frame line discipline
#pseudo-device	tap			# virtual Ethernet
#pseudo-device	tun			# network tunneling over tty
#pseudo-device	gre			# generic L3 over IP tunnel
#pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC1933)
#pseudo-device	faith			# IPv[46] tcp relay translation i/f
#pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
#pseudo-device	vlan			# IEEE 802.1q encapsulation
#pseudo-device	bridge			# simple inter-network bridging
#options	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if

# miscellaneous pseudo-devices
pseudo-device	pty			# pseudo-terminals
pseudo-device	clockctl		# user control of clock subsystem

# wscons pseudo-devices
#pseudo-device	wsmux			# mouse & keyboard multiplexor
#pseudo-device	wsfont
pseudo-device	ksyms			# /dev/ksyms
