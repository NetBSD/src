.\"	$NetBSD: krb5_error.3,v 1.2 2019/12/15 22:50:45 christos Exp $
.\"
.TH "krb5_error" 3 "Fri Jun 7 2019" "Version 7.7.0" "HeimdalKerberos5library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
krb5_error
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "KRB5_LIB_FUNCTION char *KRB5_LIB_CALL \fBkrb5_get_error_string\fP (krb5_context context) KRB5_DEPRECATED_FUNCTION('Use \fBkrb5_get_error_message\fP instead')"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_eai_to_heim_errno\fP (int eai_errno, int system_error)"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_h_errno_to_heim_errno\fP (int eai_errno)"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION void KRB5_LIB_CALL \fBkrb5_clear_error_message\fP (krb5_context context)"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION void KRB5_LIB_CALL \fBkrb5_set_error_message\fP (krb5_context context, krb5_error_code ret, const char *fmt,\&.\&.\&.) __attribute__((__format__(__printf__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION void KRB5_LIB_CALL \fBkrb5_vset_error_message\fP (krb5_context context, krb5_error_code ret, const char *fmt, va_list args) __attribute__((__format__(__printf__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION void KRB5_LIB_CALL \fBkrb5_vprepend_error_message\fP (krb5_context context, krb5_error_code ret, const char *fmt, va_list args) __attribute__((__format__(__printf__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION const char *KRB5_LIB_CALL \fBkrb5_get_error_message\fP (krb5_context context, krb5_error_code code)"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION void KRB5_LIB_CALL \fBkrb5_free_error_message\fP (krb5_context context, const char *msg)"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_vwarn\fP (krb5_context context, krb5_error_code code, const char *fmt, va_list ap) __attribute__((__format__(__printf__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_warn\fP (krb5_context context, krb5_error_code code, const char *fmt,\&.\&.\&.) __attribute__((__format__(__printf__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_vwarnx\fP (krb5_context context, const char *fmt, va_list ap) __attribute__((__format__(__printf__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_warnx\fP (krb5_context context, const char *fmt,\&.\&.\&.) __attribute__((__format__(__printf__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_verr\fP (krb5_context context, int eval, krb5_error_code code, const char *fmt, va_list ap) __attribute__((__noreturn__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_err\fP (krb5_context context, int eval, krb5_error_code code, const char *fmt,\&.\&.\&.) __attribute__((__noreturn__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_verrx\fP (krb5_context context, int eval, const char *fmt, va_list ap) __attribute__((__noreturn__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_errx\fP (krb5_context context, int eval, const char *fmt,\&.\&.\&.) __attribute__((__noreturn__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_vabort\fP (krb5_context context, krb5_error_code code, const char *fmt, va_list ap) __attribute__((__noreturn__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_abort\fP (krb5_context context, krb5_error_code code, const char *fmt,\&.\&.\&.) __attribute__((__noreturn__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_abortx\fP (krb5_context context, const char *fmt,\&.\&.\&.) __attribute__((__noreturn__"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL \fBkrb5_set_warn_dest\fP (krb5_context context, krb5_log_facility *fac)"
.br
.ti -1c
.RI "KRB5_LIB_FUNCTION krb5_log_facility *KRB5_LIB_CALL \fBkrb5_get_warn_dest\fP (krb5_context context)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_abort (krb5_context context, krb5_error_code code, const char * fmt,  \&.\&.\&.)"
Log a warning to the log, default stderr, include the error from the last failure and then abort\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIcode\fP error code of the last error 
.br
\fIfmt\fP message to print 
.br
\fI\&.\&.\&.\fP arguments for format string 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_abortx (krb5_context context, const char * fmt,  \&.\&.\&.)"
Log a warning to the log, default stderr, and then abort\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIfmt\fP printf format string of message to print 
.br
\fI\&.\&.\&.\fP arguments for format string 
.RE
.PP

.SS "KRB5_LIB_FUNCTION void KRB5_LIB_CALL krb5_clear_error_message (krb5_context context)"
Clears the error message from the Kerberos 5 context\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP The Kerberos 5 context to clear 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_eai_to_heim_errno (int eai_errno, int system_error)"
Convert the getaddrinfo() error code to a Kerberos et error code\&.
.PP
\fBParameters:\fP
.RS 4
\fIeai_errno\fP contains the error code from getaddrinfo()\&. 
.br
\fIsystem_error\fP should have the value of errno after the failed getaddrinfo()\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Kerberos error code representing the EAI errors\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_err (krb5_context context, int eval, krb5_error_code code, const char * fmt,  \&.\&.\&.)"
Log a warning to the log, default stderr, include bthe error from the last failure and then exit\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIeval\fP the exit code to exit with 
.br
\fIcode\fP error code of the last error 
.br
\fIfmt\fP message to print 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_errx (krb5_context context, int eval, const char * fmt,  \&.\&.\&.)"
Log a warning to the log, default stderr, and then exit\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIeval\fP the exit code to exit with 
.br
\fIfmt\fP message to print 
.RE
.PP

.SS "KRB5_LIB_FUNCTION void KRB5_LIB_CALL krb5_free_error_message (krb5_context context, const char * msg)"
Free the error message returned by \fBkrb5_get_error_message()\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP Kerberos context 
.br
\fImsg\fP error message to free, returned byg \fBkrb5_get_error_message()\fP\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION const char* KRB5_LIB_CALL krb5_get_error_message (krb5_context context, krb5_error_code code)"
Return the error message for `code' in context\&. On memory allocation error the function returns NULL\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP Kerberos 5 context 
.br
\fIcode\fP Error code related to the error
.RE
.PP
\fBReturns:\fP
.RS 4
an error string, needs to be freed with \fBkrb5_free_error_message()\fP\&. The functions return NULL on error\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION char* KRB5_LIB_CALL krb5_get_error_string (krb5_context context)"
Return the error message in context\&. On error or no error string, the function returns NULL\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP Kerberos 5 context
.RE
.PP
\fBReturns:\fP
.RS 4
an error string, needs to be freed with \fBkrb5_free_error_message()\fP\&. The functions return NULL on error\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_log_facility* KRB5_LIB_CALL krb5_get_warn_dest (krb5_context context)"
Get the default logging facility\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_h_errno_to_heim_errno (int eai_errno)"
Convert the gethostname() error code (h_error) to a Kerberos et error code\&.
.PP
\fBParameters:\fP
.RS 4
\fIeai_errno\fP contains the error code from gethostname()\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Kerberos error code representing the gethostname errors\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION void KRB5_LIB_CALL krb5_set_error_message (krb5_context context, krb5_error_code ret, const char * fmt,  \&.\&.\&.)"
Set the context full error string for a specific error code\&. The error that is stored should be internationalized\&.
.PP
The if context is NULL, no error string is stored\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP Kerberos 5 context 
.br
\fIret\fP The error code 
.br
\fIfmt\fP Error string for the error code 
.br
\fI\&.\&.\&.\fP printf(3) style parameters\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_set_warn_dest (krb5_context context, krb5_log_facility * fac)"
Set the default logging facility\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIfac\fP Facility to use for logging\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_vabort (krb5_context context, krb5_error_code code, const char * fmt, va_list ap)"
Log a warning to the log, default stderr, include bthe error from the last failure and then abort\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIcode\fP error code of the last error 
.br
\fIfmt\fP message to print 
.br
\fIap\fP arguments 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_verr (krb5_context context, int eval, krb5_error_code code, const char * fmt, va_list ap)"
Log a warning to the log, default stderr, include bthe error from the last failure and then exit\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIeval\fP the exit code to exit with 
.br
\fIcode\fP error code of the last error 
.br
\fIfmt\fP message to print 
.br
\fIap\fP arguments 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_verrx (krb5_context context, int eval, const char * fmt, va_list ap)"
Log a warning to the log, default stderr, and then exit\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context 
.br
\fIeval\fP the exit code to exit with 
.br
\fIfmt\fP message to print 
.br
\fIap\fP arguments 
.RE
.PP

.SS "KRB5_LIB_FUNCTION void KRB5_LIB_CALL krb5_vprepend_error_message (krb5_context context, krb5_error_code ret, const char * fmt, va_list args)"
Prepend the contexts's full error string for a specific error code\&.
.PP
The if context is NULL, no error string is stored\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP Kerberos 5 context 
.br
\fIret\fP The error code 
.br
\fIfmt\fP Error string for the error code 
.br
\fIargs\fP printf(3) style parameters\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION void KRB5_LIB_CALL krb5_vset_error_message (krb5_context context, krb5_error_code ret, const char * fmt, va_list args)"
Set the context full error string for a specific error code\&.
.PP
The if context is NULL, no error string is stored\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP Kerberos 5 context 
.br
\fIret\fP The error code 
.br
\fIfmt\fP Error string for the error code 
.br
\fIargs\fP printf(3) style parameters\&. 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_vwarn (krb5_context context, krb5_error_code code, const char * fmt, va_list ap)"
Log a warning to the log, default stderr, include the error from the last failure\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context\&. 
.br
\fIcode\fP error code of the last error 
.br
\fIfmt\fP message to print 
.br
\fIap\fP arguments 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_vwarnx (krb5_context context, const char * fmt, va_list ap)"
Log a warning to the log, default stderr\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context\&. 
.br
\fIfmt\fP message to print 
.br
\fIap\fP arguments 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_warn (krb5_context context, krb5_error_code code, const char * fmt,  \&.\&.\&.)"
Log a warning to the log, default stderr, include the error from the last failure\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context\&. 
.br
\fIcode\fP error code of the last error 
.br
\fIfmt\fP message to print 
.RE
.PP

.SS "KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL krb5_warnx (krb5_context context, const char * fmt,  \&.\&.\&.)"
Log a warning to the log, default stderr\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontext\fP A Kerberos 5 context\&. 
.br
\fIfmt\fP message to print 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for HeimdalKerberos5library from the source code\&.
