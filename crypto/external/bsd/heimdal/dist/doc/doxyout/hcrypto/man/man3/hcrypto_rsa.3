.\"	$NetBSD: hcrypto_rsa.3,v 1.2 2019/12/15 22:50:44 christos Exp $
.\"
.TH "hcrypto_rsa" 3 "Fri Jun 7 2019" "Version 7.7.0" "Heimdal crypto library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hcrypto_rsa
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "RSA * \fBRSA_new\fP (void)"
.br
.ti -1c
.RI "RSA * \fBRSA_new_method\fP (ENGINE *engine)"
.br
.ti -1c
.RI "void \fBRSA_free\fP (RSA *rsa)"
.br
.ti -1c
.RI "int \fBRSA_up_ref\fP (RSA *rsa)"
.br
.ti -1c
.RI "const RSA_METHOD * \fBRSA_get_method\fP (const RSA *rsa)"
.br
.ti -1c
.RI "int \fBRSA_set_method\fP (RSA *rsa, const RSA_METHOD *method)"
.br
.ti -1c
.RI "int \fBRSA_set_app_data\fP (RSA *rsa, void *arg)"
.br
.ti -1c
.RI "void * \fBRSA_get_app_data\fP (const RSA *rsa)"
.br
.in -1c
.SH "Detailed Description"
.PP 
See the \fBRSA - public-key cryptography\fP for description and examples\&. 
.SH "Function Documentation"
.PP 
.SS "void RSA_free (RSA * rsa)"
Free an allocation RSA object\&.
.PP
\fBParameters:\fP
.RS 4
\fIrsa\fP the RSA object to free\&. 
.RE
.PP

.SS "void* RSA_get_app_data (const RSA * rsa)"
Get the application data for the RSA object\&.
.PP
\fBParameters:\fP
.RS 4
\fIrsa\fP the rsa object to get the parameter for
.RE
.PP
\fBReturns:\fP
.RS 4
the data object 
.RE
.PP

.SS "const RSA_METHOD* RSA_get_method (const RSA * rsa)"
Return the RSA_METHOD used for this RSA object\&.
.PP
\fBParameters:\fP
.RS 4
\fIrsa\fP the object to get the method from\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the method used for this RSA object\&. 
.RE
.PP

.SS "RSA* RSA_new (void)"
Same as \fBRSA_new_method()\fP using NULL as engine\&.
.PP
\fBReturns:\fP
.RS 4
a newly allocated RSA object\&. Free with \fBRSA_free()\fP\&. 
.RE
.PP

.SS "RSA* RSA_new_method (ENGINE * engine)"
Allocate a new RSA object using the engine, if NULL is specified as the engine, use the default RSA engine as returned by ENGINE_get_default_RSA()\&.
.PP
\fBParameters:\fP
.RS 4
\fIengine\fP Specific what ENGINE RSA provider should be used\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a newly allocated RSA object\&. Free with \fBRSA_free()\fP\&. 
.RE
.PP

.SS "int RSA_set_app_data (RSA * rsa, void * arg)"
Set the application data for the RSA object\&.
.PP
\fBParameters:\fP
.RS 4
\fIrsa\fP the rsa object to set the parameter for 
.br
\fIarg\fP the data object to store
.RE
.PP
\fBReturns:\fP
.RS 4
1 on success\&. 
.RE
.PP

.SS "int RSA_set_method (RSA * rsa, const RSA_METHOD * method)"
Set a new method for the RSA keypair\&.
.PP
\fBParameters:\fP
.RS 4
\fIrsa\fP rsa parameter\&. 
.br
\fImethod\fP the new method for the RSA parameter\&.
.RE
.PP
\fBReturns:\fP
.RS 4
1 on success\&. 
.RE
.PP

.SS "int RSA_up_ref (RSA * rsa)"
Add an extra reference to the RSA object\&. The object should be free with \fBRSA_free()\fP to drop the reference\&.
.PP
\fBParameters:\fP
.RS 4
\fIrsa\fP the object to add reference counting too\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the current reference count, can't safely be used except for debug printing\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Heimdal crypto library from the source code\&.
