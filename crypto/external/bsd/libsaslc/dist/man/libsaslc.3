.\" $NetBSD: libsaslc.3,v 1.1.1.1.2.1 2011/02/08 16:18:31 bouyer Exp $
.\" Draft of the SASL Client library API.
.Dd August 10, 2010
.Dt LIBSASLC 3
.Os
.Sh NAME
.Nm libsaslc
.Nd Simple Authentication and Security Layer client library
.Sh LIBRARY
.Lb libsaslc
.Sh SYNOPSIS
.In saslc.h
.Ft saslc_t *
.Fo saslc_alloc
.Fa "void"
.Fc
.Ft int
.Fo saslc_end
.Fa "saslc_t *ctx"
.Fc
.Ft int
.Fo saslc_init
.Fa "saslc_t *ctx" "const char *appname"
.Fc
.Ft int
.Fo saslc_sess_cont
.Fa "saslc_sess_t *sess" "const void *in" "size_t inlen" "void* *out" "size_t *outlen"
.Fc
.Ft int
.Fo saslc_sess_decode
.Fa "saslc_sess_t *sess" "const void *in" "size_t inlen" "void* *out" "size_t *outlen"
.Fc
.Ft int
.Fo saslc_sess_encode
.Fa "saslc_sess_t *sess" "const void *in" "size_t inlen" "void* *out" "size_t *outlen"
.Fc
.Ft void
.Fo saslc_sess_end
.Fa "saslc_sess_t *sess"
.Fc
.Ft const char *
.Fo saslc_sess_getprop
.Fa "saslc_sess_t *sess" "const char *name"
.Fc
.Ft saslc_sess_t *
.Fo saslc_sess_init
.Fa "saslc_t *ctx" "const char *mechs"
.Fc
.Ft int
.Fo saslc_sess_setprop
.Fa "saslc_sess_t *sess" "const char *name" "const char *value"
.Fc
.Ft const char *
.Fo saslc_sess_strerror
.Fa "saslc_sess_t *sess"
.Fc
.Ft const char *
.Fo saslc_sess_strmech
.Fa "saslc_sess_t *sess"
.Fc
.Ft const char *
.Fo saslc_strerror
.Fa "saslc_t *ctx"
.Fc
.Sh DESCRIPTION
The
.Fn saslc_alloc
function allocates new saslc context.
.Pp
The
.Fn saslc_init
function initializes sasl context, basing on application name parses
configuration files, sets up default properties and creates available
mechanism list for the context.
.Pp
The
.Fn saslc_end
function destroys and deallocate resources used by the context.
Context shouldn't have got any sessions assigned to it.
.Pp
The
.Fn saslc_sess_init
function creates new session assigned to the
.Ar ctx
context.
Function chooses best mechanism which can be used for an authentication
from the
.Ar mechs
list.
.Pp
The
.Fn saslc_sess_end
function ends sasl session.
.Pp
The
.Fn saslc_sess_getprop
function gets property from the session.
.Pp
The
.Fn saslc_sess_setprop
function sets property for the session.
If property already exists in the
session, then previous value is replaced by the new value.
.Pp
.Fn saslc_strerror
and
.Fn saslc_sess_strerror
functions get string description of the last error occurred in context or
session.
.Pp
The
.Fn saslc_strmech
function gets mechanism name used in sasl session.
.Pp
The
.Fn saslc_sess_cont
performs one step of the sasl authentication.
Input data of length
.Ar inlen
is passed in the
.Ar in
argument.
Function stores output of length
.Ar outlen
in the
.Ar out .
Note that user is responsible for freeing resources allocated for the
.Ar out .
.Pp
.Fn saslc_sess_encode
and
.Fn saslc_sess_decode
encode and decode data using method established during the authentication.
Functions store output of length
.Ar outlen
in the
.Ar out .
.Sh RETURN VALUES
Functions
.Fn saslc_init
.Fn saslc_end
.Fn saslc_sess_init
.Fn saslc_sess_cont
.Fn saslc_sess_setprop
.Fn saslc_sess_encode
and
.Fn saslc_sess_decode
return 0 on success and -1 on failure, additionally
.Fn saslc_cont
returns 1 if more SASL authentication steps are needed.
The
.Fn saslc_sess_getprop
function returns the property on success, or
.Dv NULL
on failure.
The
.Fn saslc_alloc
function returns new context on success, or
.Dv NULL
on failure.
Function
.Fn saslc_strmech
returns mechanism name.
Finally,
.Fn saslc_strerror
and
.Fn saslc_sess_strerror
return pointer to the error description string on success and pointer
to the "unknown error" string on failure.
.Sh STANDARDS
RFC 2195, RFC 2222, RFC 2245, RFC 2595, RFC 2831
.Sh OTHER IMPLEMENTATIONS
There exist other SASL client library implementations including Cyrus SASL
(http://asg.web.cmu.edu/sasl/sasl-library.html) and GNU SASL
(http://www.gnu.org/software/gsasl/).
