.\"	$NetBSD: RAND_DRBG_reseed.3,v 1.2.4.1 2021/03/28 18:21:49 martin Exp $
.\"
.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RAND_DRBG_reseed 3"
.TH RAND_DRBG_reseed 3 "2019-06-09" "1.1.1i" "OpenSSL"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
RAND_DRBG_reseed,
RAND_DRBG_set_reseed_interval,
RAND_DRBG_set_reseed_time_interval,
RAND_DRBG_set_reseed_defaults
\&\- reseed a RAND_DRBG instance
.SH "LIBRARY"
libcrypto, -lcrypto
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/rand_drbg.h>
\&
\& int RAND_DRBG_reseed(RAND_DRBG *drbg,
\&                      const unsigned char *adin, size_t adinlen,
\&                      int prediction_resistance);
\&
\& int RAND_DRBG_set_reseed_interval(RAND_DRBG *drbg,
\&                                   unsigned int interval);
\&
\& int RAND_DRBG_set_reseed_time_interval(RAND_DRBG *drbg,
\&                                        time_t interval);
\&
\& int RAND_DRBG_set_reseed_defaults(
\&                                   unsigned int master_reseed_interval,
\&                                   unsigned int slave_reseed_interval,
\&                                   time_t master_reseed_time_interval,
\&                                   time_t slave_reseed_time_interval
\&                                   );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBRAND_DRBG_reseed()\fR
reseeds the given \fBdrbg\fR, obtaining entropy input from its entropy source
and mixing in the specified additional data provided in the buffer \fBadin\fR
of length \fBadinlen\fR.
The additional data can be omitted by setting \fBadin\fR to \s-1NULL\s0 and \fBadinlen\fR
to 0.
An immediate reseeding from a live entropy source can be requested by setting
the \fBprediction_resistance\fR flag to 1.
This feature is not implemented yet, so reseeding with prediction resistance
requested will always fail.
.PP
\&\fBRAND_DRBG_set_reseed_interval()\fR
sets the reseed interval of the \fBdrbg\fR, which is the maximum allowed number
of generate requests between consecutive reseedings.
If \fBinterval\fR > 0, then the \fBdrbg\fR will reseed automatically whenever the
number of generate requests since its last seeding exceeds the given reseed
interval.
If \fBinterval\fR == 0, then this feature is disabled.
.PP
\&\fBRAND_DRBG_set_reseed_time_interval()\fR
sets the reseed time interval of the \fBdrbg\fR, which is the maximum allowed
number of seconds between consecutive reseedings.
If \fBinterval\fR > 0, then the \fBdrbg\fR will reseed automatically whenever the
elapsed time since its last reseeding exceeds the given reseed time interval.
If \fBinterval\fR == 0, then this feature is disabled.
.PP
\&\fBRAND_DRBG_set_reseed_defaults()\fR sets the default values for the reseed interval
(\fBmaster_reseed_interval\fR and \fBslave_reseed_interval\fR)
and the reseed time interval
(\fBmaster_reseed_time_interval\fR and \fBslave_reseed_tme_interval\fR)
of \s-1DRBG\s0 instances.
The default values are set independently for master \s-1DRBG\s0 instances (which don't
have a parent) and slave \s-1DRBG\s0 instances (which are chained to a parent \s-1DRBG\s0).
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBRAND_DRBG_reseed()\fR,
\&\fBRAND_DRBG_set_reseed_interval()\fR, and
\&\fBRAND_DRBG_set_reseed_time_interval()\fR,
return 1 on success, 0 on failure.
.SH "NOTES"
.IX Header "NOTES"
The default OpenSSL random generator is already set up for automatic reseeding,
so in general it is not necessary to reseed it explicitly, or to modify
its reseeding thresholds.
.PP
Normally, the entropy input for seeding a \s-1DRBG\s0 is either obtained from a
trusted os entropy source or from a parent \s-1DRBG\s0 instance, which was seeded
(directly or indirectly) from a trusted os entropy source.
In exceptional cases it is possible to replace the reseeding mechanism entirely
by providing application defined callbacks using \fBRAND_DRBG_set_callbacks()\fR.
.PP
The reseeding default values are applied only during creation of a \s-1DRBG\s0 instance.
To ensure that they are applied to the global and thread-local \s-1DRBG\s0 instances
(<master>, resp. <public> and <private>), it is necessary to call
\&\fBRAND_DRBG_set_reseed_defaults()\fR before creating any thread and before calling any
 cryptographic routines that obtain random data directly or indirectly.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBRAND_DRBG_generate\fR\|(3),
\&\fBRAND_DRBG_bytes\fR\|(3),
\&\fBRAND_DRBG_set_callbacks\fR\|(3).
\&\s-1\fBRAND_DRBG\s0\fR\|(7)
.SH "HISTORY"
.IX Header "HISTORY"
The \s-1RAND_DRBG\s0 functions were added in OpenSSL 1.1.1.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2017\-2019 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the OpenSSL license (the \*(L"License\*(R").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file \s-1LICENSE\s0 in the source distribution or at
<https://www.openssl.org/source/license.html>.
