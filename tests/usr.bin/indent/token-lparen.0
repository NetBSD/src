/* $NetBSD: token-lparen.0,v 1.3 2021/09/30 22:45:34 rillig Exp $ */
/* $FreeBSD$ */

/*
 * Tests for the token '(', which has several possible meanings.
 *
 * In an expression, it overrides the precedence rules by explicitly grouping
 * a subexpression in parentheses.
 *
 * In an expression, it marks the beginning of a type cast or conversion.
 *
 * In a function call expression, it marks the beginning of the function
 * arguments.
 *
 * In a type declaration, it marks the beginning of the function parameters.
 */

/* This is the maximum supported number of parentheses. */
int zero = (((((((((((((((((((0)))))))))))))))))));

void (*action)(void);

#define macro(arg) ((arg) + 1)

void
function(void)
{
    other_function();
    other_function("first", 2, "last argument"[4]);

    if (false)(void)x;
    if (false)(func)(arg);
    if (false)(cond)?123:456;

    /* C99 compound literal */
    origin = (struct point){0,0};

    /* GCC statement expression */
    /* expr = ({if(expr)debug();expr;}); */
/* $ XXX: Generates wrong 'Error@36: Unbalanced parens'. */
}

int array[] = {
	1, 2, [2] = 3, [3] = 4,
};
