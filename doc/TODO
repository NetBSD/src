#	$NetBSD: TODO,v 1.19 2015/02/19 11:20:43 mrg Exp $

THINGS TO BE DONE:

[ Note that this list does not include change requests filed via 'gnats'.
  For information about them, mail query-pr@NetBSD.org. ]

This is a list of things that need to be done for NetBSD.  Some of
these projects are small, others are large.  Some are extremely
important, others are enhancements to make the system more flexible
for the wide variety of NetBSD users and their applications.

In general there are some guidelines for work to be included in
NetBSD.  Chief among these are:

	   (1) Keep GPLed stuff out of the kernel.
	   (2) Introduce little to no more GPLed stuff as non-optional
	       components of the user environment.
	   (3) Only clean code, that lends itself to further enhancement
	   (4) Keep architecture dependent code out of architecture independent
	       directories

Associated with some entries are login names which indicate persons or
groups who may already be working on that problem.  This isn't to say
that others shouldn't also look at it, but consultation with other
parties may result in less duplicated work.  A directory of these
persons can be found after the todo list itself.

Please don't hesitate to suggest more projects for this list.
Suggestions, comments, etc to projects@NetBSD.org.

High Kernel:
    swap fixes:
	swap to file of dynamic size; see apollo

User programs:
    rwall nfs-mountees on shutdown

i386 kernel support:
    make use of sysenter/sysexit instructions on PIII/4 and Athlon for
        reducing syscall overhead.

This is a list of suggested smaller projects (in no particular order):

+ speed up sort(1) by using mmap(2) rather than temp files
+ port valgrind to NetBSD for pkgsrc, then use it to do an audit of
  any memory leakage
+ simplify some of the quirks in our build system
+ investigate zebra or quagga in gnusrc rather than routed
+ do a type-punned pointer sweep for -fstrict-aliases (and fix the
  problems, not the symptoms)
+ write a BSD-licensed web browser
+ perhaps look at putting wonka into src/ (with uuencoded class lib?)
+ write an overview document for openssl and certificates
+ documentation project help
+ Examine our vnode locking and vfs layer and see what needs to be changed
  for locking in layered filesystems to really work
+ Make mountd(8) update the in-kernel exports list for each file system
  atomically.  Many parts of the utility will need a rewrite, but the kernel
  functionality is already there (just enable the "notyet" blocks of code in
  sys/nfs/nfs_export.c).
