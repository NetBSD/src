#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by GNU MP $as_me 6.2.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" demos/pexpr-config.h:demos/pexpr-config-h.in demos/calc/calc-config.h:demos/calc/calc-config-h.in Makefile mpf/Makefile mpn/Makefile mpq/Makefile mpz/Makefile printf/Makefile scanf/Makefile rand/Makefile cxx/Makefile tests/Makefile tests/devel/Makefile tests/mpf/Makefile tests/mpn/Makefile tests/mpq/Makefile tests/mpz/Makefile tests/rand/Makefile tests/misc/Makefile tests/cxx/Makefile doc/Makefile tune/Makefile demos/Makefile demos/calc/Makefile demos/expr/Makefile gmp.h:gmp-h.in gmp.pc:gmp.pc.in gmpxx.pc:gmpxx.pc.in"
config_headers=" config.h:config.in"
config_links=" mpn/invert_limb_table.asm:mpn/x86_64/invert_limb_table.asm mpn/add.c:mpn/generic/add.c mpn/add_1.c:mpn/generic/add_1.c mpn/add_n.asm:mpn/x86_64/core2/aors_n.asm mpn/sub.c:mpn/generic/sub.c mpn/sub_1.c:mpn/generic/sub_1.c mpn/sub_n.asm:mpn/x86_64/core2/aors_n.asm mpn/cnd_add_n.asm:mpn/x86_64/cnd_aors_n.asm mpn/cnd_sub_n.asm:mpn/x86_64/cnd_aors_n.asm mpn/cnd_swap.c:mpn/generic/cnd_swap.c mpn/neg.c:mpn/generic/neg.c mpn/com.asm:mpn/x86_64/core2/com.asm mpn/mul_1.asm:mpn/x86_64/mul_1.asm mpn/addmul_1.asm:mpn/x86_64/coreinhm/aorsmul_1.asm mpn/submul_1.asm:mpn/x86_64/coreinhm/aorsmul_1.asm mpn/add_err1_n.asm:mpn/x86_64/core2/aors_err1_n.asm mpn/add_err2_n.asm:mpn/x86_64/aors_err2_n.asm mpn/add_err3_n.asm:mpn/x86_64/aors_err3_n.asm mpn/sub_err1_n.asm:mpn/x86_64/core2/aors_err1_n.asm mpn/sub_err2_n.asm:mpn/x86_64/aors_err2_n.asm mpn/sub_err3_n.asm:mpn/x86_64/aors_err3_n.asm mpn/lshift.asm:mpn/x86_64/core2/lshift.asm mpn/rshift.asm:mpn/x86_64/core2/rshift.asm mpn/dive_1.asm:mpn/x86_64/dive_1.asm mpn/diveby3.c:mpn/generic/diveby3.c mpn/divis.c:mpn/generic/divis.c mpn/divrem.c:mpn/generic/divrem.c mpn/divrem_1.asm:mpn/x86_64/core2/divrem_1.asm mpn/divrem_2.asm:mpn/x86_64/divrem_2.asm mpn/fib2_ui.c:mpn/generic/fib2_ui.c mpn/fib2m.c:mpn/generic/fib2m.c mpn/mod_1.c:mpn/generic/mod_1.c mpn/mod_34lsub1.asm:mpn/x86_64/mod_34lsub1.asm mpn/mode1o.asm:mpn/x86_64/mode1o.asm mpn/pre_mod_1.c:mpn/generic/pre_mod_1.c mpn/dump.c:mpn/generic/dump.c mpn/mod_1_1.asm:mpn/x86_64/mod_1_1.asm mpn/mod_1_2.asm:mpn/x86_64/mod_1_2.asm mpn/mod_1_3.c:mpn/generic/mod_1_3.c mpn/mod_1_4.asm:mpn/x86_64/mod_1_4.asm mpn/lshiftc.asm:mpn/x86_64/core2/lshiftc.asm mpn/mul.c:mpn/generic/mul.c mpn/mul_fft.c:mpn/generic/mul_fft.c mpn/mul_n.c:mpn/generic/mul_n.c mpn/sqr.c:mpn/generic/sqr.c mpn/mul_basecase.asm:mpn/x86_64/core2/mul_basecase.asm mpn/sqr_basecase.asm:mpn/x86_64/core2/sqr_basecase.asm mpn/nussbaumer_mul.c:mpn/generic/nussbaumer_mul.c mpn/mulmid_basecase.c:mpn/generic/mulmid_basecase.c mpn/toom42_mulmid.c:mpn/generic/toom42_mulmid.c mpn/mulmid_n.c:mpn/generic/mulmid_n.c mpn/mulmid.c:mpn/generic/mulmid.c mpn/random.c:mpn/generic/random.c mpn/random2.c:mpn/generic/random2.c mpn/pow_1.c:mpn/generic/pow_1.c mpn/rootrem.c:mpn/generic/rootrem.c mpn/sqrtrem.c:mpn/generic/sqrtrem.c mpn/sizeinbase.c:mpn/generic/sizeinbase.c mpn/get_str.c:mpn/generic/get_str.c mpn/set_str.c:mpn/generic/set_str.c mpn/compute_powtab.c:mpn/generic/compute_powtab.c mpn/scan0.c:mpn/generic/scan0.c mpn/scan1.c:mpn/generic/scan1.c mpn/popcount.asm:mpn/x86_64/coreinhm/popcount.asm mpn/hamdist.asm:mpn/x86_64/coreinhm/hamdist.asm mpn/cmp.c:mpn/generic/cmp.c mpn/zero_p.c:mpn/generic/zero_p.c mpn/perfsqr.c:mpn/generic/perfsqr.c mpn/perfpow.c:mpn/generic/perfpow.c mpn/strongfibo.c:mpn/generic/strongfibo.c mpn/gcd_11.asm:mpn/x86_64/core2/gcd_11.asm mpn/gcd_22.asm:mpn/x86_64/core2/gcd_22.asm mpn/gcd_1.c:mpn/generic/gcd_1.c mpn/gcd.c:mpn/generic/gcd.c mpn/gcdext_1.c:mpn/generic/gcdext_1.c mpn/gcdext.c:mpn/generic/gcdext.c mpn/gcd_subdiv_step.c:mpn/generic/gcd_subdiv_step.c mpn/gcdext_lehmer.c:mpn/generic/gcdext_lehmer.c mpn/div_q.c:mpn/generic/div_q.c mpn/tdiv_qr.c:mpn/generic/tdiv_qr.c mpn/jacbase.c:mpn/generic/jacbase.c mpn/jacobi_2.c:mpn/generic/jacobi_2.c mpn/jacobi.c:mpn/generic/jacobi.c mpn/get_d.c:mpn/generic/get_d.c mpn/matrix22_mul.c:mpn/generic/matrix22_mul.c mpn/matrix22_mul1_inverse_vector.c:mpn/generic/matrix22_mul1_inverse_vector.c mpn/hgcd_matrix.c:mpn/generic/hgcd_matrix.c mpn/hgcd2.c:mpn/generic/hgcd2.c mpn/hgcd_step.c:mpn/generic/hgcd_step.c mpn/hgcd_reduce.c:mpn/generic/hgcd_reduce.c mpn/hgcd.c:mpn/generic/hgcd.c mpn/hgcd_appr.c:mpn/generic/hgcd_appr.c mpn/hgcd2_jacobi.c:mpn/generic/hgcd2_jacobi.c mpn/hgcd_jacobi.c:mpn/generic/hgcd_jacobi.c mpn/mullo_n.c:mpn/generic/mullo_n.c mpn/mullo_basecase.asm:mpn/x86_64/core2/mullo_basecase.asm mpn/sqrlo.c:mpn/generic/sqrlo.c mpn/sqrlo_basecase.c:mpn/generic/sqrlo_basecase.c mpn/toom22_mul.c:mpn/generic/toom22_mul.c mpn/toom32_mul.c:mpn/generic/toom32_mul.c mpn/toom42_mul.c:mpn/generic/toom42_mul.c mpn/toom52_mul.c:mpn/generic/toom52_mul.c mpn/toom62_mul.c:mpn/generic/toom62_mul.c mpn/toom33_mul.c:mpn/generic/toom33_mul.c mpn/toom43_mul.c:mpn/generic/toom43_mul.c mpn/toom53_mul.c:mpn/generic/toom53_mul.c mpn/toom54_mul.c:mpn/generic/toom54_mul.c mpn/toom63_mul.c:mpn/generic/toom63_mul.c mpn/toom44_mul.c:mpn/generic/toom44_mul.c mpn/toom6h_mul.c:mpn/generic/toom6h_mul.c mpn/toom6_sqr.c:mpn/generic/toom6_sqr.c mpn/toom8h_mul.c:mpn/generic/toom8h_mul.c mpn/toom8_sqr.c:mpn/generic/toom8_sqr.c mpn/toom_couple_handling.c:mpn/generic/toom_couple_handling.c mpn/toom2_sqr.c:mpn/generic/toom2_sqr.c mpn/toom3_sqr.c:mpn/generic/toom3_sqr.c mpn/toom4_sqr.c:mpn/generic/toom4_sqr.c mpn/toom_eval_dgr3_pm1.c:mpn/generic/toom_eval_dgr3_pm1.c mpn/toom_eval_dgr3_pm2.c:mpn/generic/toom_eval_dgr3_pm2.c mpn/toom_eval_pm1.c:mpn/generic/toom_eval_pm1.c mpn/toom_eval_pm2.c:mpn/generic/toom_eval_pm2.c mpn/toom_eval_pm2exp.c:mpn/generic/toom_eval_pm2exp.c mpn/toom_eval_pm2rexp.c:mpn/generic/toom_eval_pm2rexp.c mpn/toom_interpolate_5pts.c:mpn/generic/toom_interpolate_5pts.c mpn/toom_interpolate_6pts.c:mpn/generic/toom_interpolate_6pts.c mpn/toom_interpolate_7pts.c:mpn/generic/toom_interpolate_7pts.c mpn/toom_interpolate_8pts.c:mpn/generic/toom_interpolate_8pts.c mpn/toom_interpolate_12pts.c:mpn/generic/toom_interpolate_12pts.c mpn/toom_interpolate_16pts.c:mpn/generic/toom_interpolate_16pts.c mpn/invertappr.c:mpn/generic/invertappr.c mpn/invert.c:mpn/generic/invert.c mpn/binvert.c:mpn/generic/binvert.c mpn/mulmod_bnm1.c:mpn/generic/mulmod_bnm1.c mpn/sqrmod_bnm1.c:mpn/generic/sqrmod_bnm1.c mpn/div_qr_1.c:mpn/generic/div_qr_1.c mpn/div_qr_1n_pi1.asm:mpn/x86_64/div_qr_1n_pi1.asm mpn/div_qr_2.c:mpn/generic/div_qr_2.c mpn/div_qr_2n_pi1.asm:mpn/x86_64/div_qr_2n_pi1.asm mpn/div_qr_2u_pi1.asm:mpn/x86_64/div_qr_2u_pi1.asm mpn/sbpi1_div_q.c:mpn/generic/sbpi1_div_q.c mpn/sbpi1_div_qr.c:mpn/generic/sbpi1_div_qr.c mpn/sbpi1_divappr_q.c:mpn/generic/sbpi1_divappr_q.c mpn/dcpi1_div_q.c:mpn/generic/dcpi1_div_q.c mpn/dcpi1_div_qr.c:mpn/generic/dcpi1_div_qr.c mpn/dcpi1_divappr_q.c:mpn/generic/dcpi1_divappr_q.c mpn/mu_div_qr.c:mpn/generic/mu_div_qr.c mpn/mu_divappr_q.c:mpn/generic/mu_divappr_q.c mpn/mu_div_q.c:mpn/generic/mu_div_q.c mpn/bdiv_q_1.asm:mpn/x86_64/bdiv_q_1.asm mpn/sbpi1_bdiv_q.c:mpn/generic/sbpi1_bdiv_q.c mpn/sbpi1_bdiv_qr.c:mpn/generic/sbpi1_bdiv_qr.c mpn/sbpi1_bdiv_r.c:mpn/generic/sbpi1_bdiv_r.c mpn/dcpi1_bdiv_q.c:mpn/generic/dcpi1_bdiv_q.c mpn/dcpi1_bdiv_qr.c:mpn/generic/dcpi1_bdiv_qr.c mpn/mu_bdiv_q.c:mpn/generic/mu_bdiv_q.c mpn/mu_bdiv_qr.c:mpn/generic/mu_bdiv_qr.c mpn/bdiv_q.c:mpn/generic/bdiv_q.c mpn/bdiv_qr.c:mpn/generic/bdiv_qr.c mpn/broot.c:mpn/generic/broot.c mpn/brootinv.c:mpn/generic/brootinv.c mpn/bsqrt.c:mpn/generic/bsqrt.c mpn/bsqrtinv.c:mpn/generic/bsqrtinv.c mpn/divexact.c:mpn/generic/divexact.c mpn/bdiv_dbm1c.asm:mpn/x86_64/bdiv_dbm1c.asm mpn/redc_1.asm:mpn/x86_64/coreinhm/redc_1.asm mpn/redc_2.c:mpn/generic/redc_2.c mpn/redc_n.c:mpn/generic/redc_n.c mpn/powm.c:mpn/generic/powm.c mpn/powlo.c:mpn/generic/powlo.c mpn/sec_powm.c:mpn/generic/sec_powm.c mpn/sec_mul.c:mpn/generic/sec_mul.c mpn/sec_sqr.c:mpn/generic/sec_sqr.c mpn/sec_div_qr.c:mpn/generic/sec_div.c mpn/sec_div_r.c:mpn/generic/sec_div.c mpn/sec_pi1_div_qr.c:mpn/generic/sec_pi1_div.c mpn/sec_pi1_div_r.c:mpn/generic/sec_pi1_div.c mpn/sec_add_1.c:mpn/generic/sec_aors_1.c mpn/sec_sub_1.c:mpn/generic/sec_aors_1.c mpn/sec_invert.c:mpn/generic/sec_invert.c mpn/trialdiv.c:mpn/generic/trialdiv.c mpn/remove.c:mpn/generic/remove.c mpn/and_n.asm:mpn/x86_64/core2/logops_n.asm mpn/andn_n.asm:mpn/x86_64/core2/logops_n.asm mpn/nand_n.asm:mpn/x86_64/core2/logops_n.asm mpn/ior_n.asm:mpn/x86_64/core2/logops_n.asm mpn/iorn_n.asm:mpn/x86_64/core2/logops_n.asm mpn/nior_n.asm:mpn/x86_64/core2/logops_n.asm mpn/xor_n.asm:mpn/x86_64/core2/logops_n.asm mpn/xnor_n.asm:mpn/x86_64/core2/logops_n.asm mpn/copyi.asm:mpn/x86_64/core2/copyi.asm mpn/copyd.asm:mpn/x86_64/core2/copyd.asm mpn/zero.c:mpn/generic/zero.c mpn/sec_tabselect.asm:mpn/x86_64/coreinhm/sec_tabselect.asm mpn/comb_tables.c:mpn/generic/comb_tables.c mpn/invert_limb.asm:mpn/x86_64/invert_limb.asm mpn/sqr_diag_addlsh1.asm:mpn/x86_64/sqr_diag_addlsh1.asm mpn/mul_2.asm:mpn/x86_64/mul_2.asm mpn/addlsh1_n.asm:mpn/x86_64/core2/aorrlsh1_n.asm mpn/sublsh1_n.asm:mpn/x86_64/core2/sublsh1_n.asm mpn/rsblsh1_n.asm:mpn/x86_64/core2/aorrlsh1_n.asm mpn/rsh1add_n.asm:mpn/x86_64/core2/rsh1aors_n.asm mpn/rsh1sub_n.asm:mpn/x86_64/core2/rsh1aors_n.asm mpn/addlsh2_n.asm:mpn/x86_64/core2/aorrlsh2_n.asm mpn/sublsh2_n.asm:mpn/x86_64/core2/sublsh2_n.asm mpn/rsblsh2_n.asm:mpn/x86_64/core2/aorrlsh2_n.asm mpn/addlsh_n.asm:mpn/x86_64/coreinhm/aorrlsh_n.asm mpn/rsblsh_n.asm:mpn/x86_64/coreinhm/aorrlsh_n.asm mpn/add_n_sub_n.c:mpn/generic/add_n_sub_n.c mpn/addaddmul_1msb0.asm:mpn/x86_64/addaddmul_1msb0.asm gmp-mparam.h:mpn/x86_64/coreinhm/gmp-mparam.h"
config_commands=" libtool"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration links:
$config_links

Configuration commands:
$config_commands

Report bugs to <gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html>.
GNU MP home page: <http://www.gnu.org/software/gmp/>.
General help using GNU software: <http://www.gnu.org/gethelp/>."

ac_cs_config="'--disable-shared' '--prefix=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' 'CC=cc' 'LDFLAGS=' 'CPPFLAGS=' 'CXX=c++' 'M4=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbm4' 'YACC=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbyacc'"
ac_cs_version="\
GNU MP config.status 6.2.1
configured by /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gmp/../../external/lgpl3/gmp/dist/configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tools/gmp/build'
srcdir='/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gmp/../../external/lgpl3/gmp/dist'
INSTALL='/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/m68k--netbsdelf-install -c  -r'
MKDIR_P='/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/m68k--netbsdelf-install -d -p'
AWK='/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh '/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gmp/../../external/lgpl3/gmp/dist/configure'  '--disable-shared' '--prefix=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' 'CC=cc' 'LDFLAGS=' 'CPPFLAGS=' 'CXX=c++' 'M4=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbm4' 'YACC=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbyacc' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
NM='/usr/bin/nm -B'
AS='as'
DLLTOOL='dlltool'
OBJDUMP='objdump'
macro_version='2.4.6'
macro_revision='2.4.6'
enable_shared='no'
enable_static='yes'
pic_mode='default'
enable_fast_install='needless'
shared_archive_member_spec=''
SHELL='/bin/sh'
ECHO='printf %s\n'
PATH_SEPARATOR=':'
host_alias=''
host='nehalem-apple-darwin22.1.0'
host_os='darwin22.1.0'
build_alias=''
build='nehalem-apple-darwin22.1.0'
build_os='darwin22.1.0'
SED='/usr/bin/sed'
Xsed='/usr/bin/sed -e 1s/^X//'
GREP='/usr/bin/grep'
EGREP='/usr/bin/grep -E'
FGREP='/usr/bin/grep -F'
LD='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld'
LN_S='ln -s'
max_cmd_len='786432'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
lt_cv_to_host_file_cmd='func_convert_file_noop'
lt_cv_to_tool_file_cmd='func_convert_file_noop'
reload_flag=' -r'
reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
file_magic_glob=''
want_nocaseglob='no'
sharedlib_from_linklib_cmd='printf %s\n'
AR='ar'
AR_FLAGS='cq'
archiver_list_spec=''
STRIP='strip'
RANLIB='ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $tool_oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
lock_old_archive_extraction='yes'
CC='cc'
CFLAGS='-O2 -pedantic -fomit-frame-pointer -m64 -mtune=nehalem -march=nehalem'
compiler='c++'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_nm_interface='BSD nm'
nm_file_list_spec='@'
lt_sysroot=''
lt_cv_truncate_bin='/bin/dd bs=4096 count=1'
objdir='.libs'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin -fno-rtti -fno-exceptions'
lt_prog_compiler_pic=' -fno-common -DPIC'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_static=''
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
MANIFEST_TOOL=':'
DSYMUTIL='dsymutil'
NMEDIT='nmedit'
LIPO='lipo'
OTOOL='otool'
OTOOL64=':'
libext='a'
shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec=''
whole_archive_flag_spec='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience $wl-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module'
archive_expsym_cmds='sed '\''s|^|_|'\'' < $export_symbols > $output_objdir/$libname-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring $single_module $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'
module_cmds='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags'
module_expsym_cmds='sed -e '\''s|^|_|'\'' < $export_symbols > $output_objdir/$libname-symbols.expsym~$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs $compiler_flags $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'
with_gnu_ld='no'
allow_undefined_flag='$wl-flat_namespace $wl-undefined ${wl}suppress'
no_undefined_flag=''
hardcode_libdir_flag_spec=''
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='yes'
inherit_rpath='no'
link_all_deplibs='yes'
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
postlink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH DYLD_LIBRARY_PATH '
need_lib_prefix='no'
need_version='no'
version_type='darwin'
runpath_var=''
shlibpath_var='DYLD_LIBRARY_PATH'
shlibpath_overrides_runpath='yes'
libname_spec='lib$name'
library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'
soname_spec='$libname$release$major$shared_ext'
install_override_mode=''
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds=''
finish_eval=''
hardcode_into_libs='no'
sys_lib_search_path_spec='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/14.0.3  /usr/local/lib'
configure_time_dlsearch_path='/usr/local/lib /lib /usr/lib'
configure_time_lt_sys_library_path=''
hardcode_action='immediate'
enable_dlopen='unknown'
enable_dlopen_self='unknown'
enable_dlopen_self_static='unknown'
old_striplib='strip -S'
striplib='strip -x'
compiler_lib_search_dirs=''
predep_objects=''
postdep_objects=''
predeps=''
postdeps=''
compiler_lib_search_path=''
LD_CXX='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld'
reload_flag_CXX=' -r'
reload_cmds_CXX='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'
old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
compiler_CXX='c++'
GCC_CXX='no'
lt_prog_compiler_no_builtin_flag_CXX=''
lt_prog_compiler_pic_CXX=' -DPIC'
lt_prog_compiler_wl_CXX=''
lt_prog_compiler_static_CXX=''
lt_cv_prog_compiler_c_o_CXX='yes'
archive_cmds_need_lc_CXX='no'
enable_shared_with_static_runtimes_CXX='no'
export_dynamic_flag_spec_CXX=''
whole_archive_flag_spec_CXX='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience $wl-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
compiler_needs_object_CXX='no'
old_archive_from_new_cmds_CXX=''
old_archive_from_expsyms_cmds_CXX=''
archive_cmds_CXX=''
archive_expsym_cmds_CXX=''
module_cmds_CXX=''
module_expsym_cmds_CXX=''
with_gnu_ld_CXX='no'
allow_undefined_flag_CXX='$wl-flat_namespace $wl-undefined ${wl}suppress'
no_undefined_flag_CXX=''
hardcode_libdir_flag_spec_CXX=''
hardcode_libdir_separator_CXX=''
hardcode_direct_CXX='no'
hardcode_direct_absolute_CXX='no'
hardcode_minus_L_CXX='no'
hardcode_shlibpath_var_CXX='unsupported'
hardcode_automatic_CXX='yes'
inherit_rpath_CXX='no'
link_all_deplibs_CXX='yes'
always_export_symbols_CXX='no'
export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms_CXX=''
prelink_cmds_CXX=''
postlink_cmds_CXX=''
file_list_spec_CXX=''
hardcode_action_CXX='immediate'
compiler_lib_search_dirs_CXX=''
predep_objects_CXX=''
postdep_objects_CXX=''
predeps_CXX=''
postdeps_CXX=''
compiler_lib_search_path_CXX=''

LTCC='cc'
LTCFLAGS='-O2 -pedantic -fomit-frame-pointer -m64 -mtune=nehalem -march=nehalem'
compiler='cc'

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
}

# Quote evaled strings.
for var in NM AS DLLTOOL OBJDUMP SHELL ECHO PATH_SEPARATOR SED GREP EGREP FGREP LD LN_S lt_SP2NL lt_NL2SP reload_flag deplibs_check_method file_magic_cmd file_magic_glob want_nocaseglob sharedlib_from_linklib_cmd AR AR_FLAGS archiver_list_spec STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_import lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix lt_cv_nm_interface nm_file_list_spec lt_cv_truncate_bin lt_prog_compiler_no_builtin_flag lt_prog_compiler_pic lt_prog_compiler_wl lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks MANIFEST_TOOL DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_separator exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec install_override_mode finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX reload_flag_CXX compiler_CXX lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_pic_CXX lt_prog_compiler_wl_CXX lt_prog_compiler_static_CXX lt_cv_prog_compiler_c_o_CXX export_dynamic_flag_spec_CXX whole_archive_flag_spec_CXX compiler_needs_object_CXX with_gnu_ld_CXX allow_undefined_flag_CXX no_undefined_flag_CXX hardcode_libdir_flag_spec_CXX hardcode_libdir_separator_CXX exclude_expsyms_CXX include_expsyms_CXX file_list_spec_CXX compiler_lib_search_dirs_CXX predep_objects_CXX postdep_objects_CXX predeps_CXX postdeps_CXX compiler_lib_search_path_CXX; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED \"\$sed_quote_subst\"\`\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postlink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec configure_time_dlsearch_path configure_time_lt_sys_library_path reload_cmds_CXX old_archive_cmds_CXX old_archive_from_new_cmds_CXX old_archive_from_expsyms_cmds_CXX archive_cmds_CXX archive_expsym_cmds_CXX module_cmds_CXX module_expsym_cmds_CXX export_symbols_cmds_CXX prelink_cmds_CXX postlink_cmds_CXX; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

ac_aux_dir='/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gmp/../../external/lgpl3/gmp/dist'

# See if we are running on zsh, and set the options that allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}"; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='gmp'
    VERSION='6.2.1'
    RM='rm -f'
    ofile='libtool'







# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h:config.in" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "mpn/$tmp_fn.$tmp_ext") CONFIG_LINKS="$CONFIG_LINKS mpn/$tmp_fn.$tmp_ext:mpn/$tmp_dir/$tmp_base.$tmp_ext" ;;
    "gmp-mparam.h") CONFIG_LINKS="$CONFIG_LINKS gmp-mparam.h:mpn/$gmp_mparam_dir/gmp-mparam.h" ;;
    "demos/pexpr-config.h") CONFIG_FILES="$CONFIG_FILES demos/pexpr-config.h:demos/pexpr-config-h.in" ;;
    "demos/calc/calc-config.h") CONFIG_FILES="$CONFIG_FILES demos/calc/calc-config.h:demos/calc/calc-config-h.in" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "mpf/Makefile") CONFIG_FILES="$CONFIG_FILES mpf/Makefile" ;;
    "mpn/Makefile") CONFIG_FILES="$CONFIG_FILES mpn/Makefile" ;;
    "mpq/Makefile") CONFIG_FILES="$CONFIG_FILES mpq/Makefile" ;;
    "mpz/Makefile") CONFIG_FILES="$CONFIG_FILES mpz/Makefile" ;;
    "printf/Makefile") CONFIG_FILES="$CONFIG_FILES printf/Makefile" ;;
    "scanf/Makefile") CONFIG_FILES="$CONFIG_FILES scanf/Makefile" ;;
    "rand/Makefile") CONFIG_FILES="$CONFIG_FILES rand/Makefile" ;;
    "cxx/Makefile") CONFIG_FILES="$CONFIG_FILES cxx/Makefile" ;;
    "tests/Makefile") CONFIG_FILES="$CONFIG_FILES tests/Makefile" ;;
    "tests/devel/Makefile") CONFIG_FILES="$CONFIG_FILES tests/devel/Makefile" ;;
    "tests/mpf/Makefile") CONFIG_FILES="$CONFIG_FILES tests/mpf/Makefile" ;;
    "tests/mpn/Makefile") CONFIG_FILES="$CONFIG_FILES tests/mpn/Makefile" ;;
    "tests/mpq/Makefile") CONFIG_FILES="$CONFIG_FILES tests/mpq/Makefile" ;;
    "tests/mpz/Makefile") CONFIG_FILES="$CONFIG_FILES tests/mpz/Makefile" ;;
    "tests/rand/Makefile") CONFIG_FILES="$CONFIG_FILES tests/rand/Makefile" ;;
    "tests/misc/Makefile") CONFIG_FILES="$CONFIG_FILES tests/misc/Makefile" ;;
    "tests/cxx/Makefile") CONFIG_FILES="$CONFIG_FILES tests/cxx/Makefile" ;;
    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
    "tune/Makefile") CONFIG_FILES="$CONFIG_FILES tune/Makefile" ;;
    "demos/Makefile") CONFIG_FILES="$CONFIG_FILES demos/Makefile" ;;
    "demos/calc/Makefile") CONFIG_FILES="$CONFIG_FILES demos/calc/Makefile" ;;
    "demos/expr/Makefile") CONFIG_FILES="$CONFIG_FILES demos/expr/Makefile" ;;
    "gmp.h") CONFIG_FILES="$CONFIG_FILES gmp.h:gmp-h.in" ;;
    "gmp.pc") CONFIG_FILES="$CONFIG_FILES gmp.pc:gmp.pc.in" ;;
    "gmpxx.pc") CONFIG_FILES="$CONFIG_FILES gmpxx.pc:gmpxx.pc.in" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_LINKS+set}" = set || CONFIG_LINKS=$config_links
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["LEXLIB"]="-ll"
S["LEX_OUTPUT_ROOT"]="lex.yy"
S["LEX"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nblex"
S["YFLAGS"]=""
S["YACC"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbyacc"
S["LIBREADLINE"]="-lreadline"
S["WITH_READLINE_01"]="1"
S["LIBCURSES"]="-lncurses"
S["HAVE_STACK_T_01"]="1"
S["HAVE_SYS_RESOURCE_H_01"]="1"
S["HAVE_SIGSTACK_01"]="0"
S["HAVE_SIGALTSTACK_01"]="1"
S["HAVE_SIGACTION_01"]="1"
S["HAVE_GETTIMEOFDAY_01"]="1"
S["HAVE_GETRUSAGE_01"]="1"
S["HAVE_CPUTIME_01"]="0"
S["HAVE_CLOCK_01"]="1"
S["TUNE_SQR_OBJ"]=""
S["gmp_srclinks"]=" mpn/invert_limb_table.asm mpn/add.c mpn/add_1.c mpn/add_n.asm mpn/sub.c mpn/sub_1.c mpn/sub_n.asm mpn/cnd_add_n.asm mpn/cnd_sub_n.asm mpn/cnd_swap."\
"c mpn/neg.c mpn/com.asm mpn/mul_1.asm mpn/addmul_1.asm mpn/submul_1.asm mpn/add_err1_n.asm mpn/add_err2_n.asm mpn/add_err3_n.asm mpn/sub_err1_n.asm "\
"mpn/sub_err2_n.asm mpn/sub_err3_n.asm mpn/lshift.asm mpn/rshift.asm mpn/dive_1.asm mpn/diveby3.c mpn/divis.c mpn/divrem.c mpn/divrem_1.asm mpn/divre"\
"m_2.asm mpn/fib2_ui.c mpn/fib2m.c mpn/mod_1.c mpn/mod_34lsub1.asm mpn/mode1o.asm mpn/pre_mod_1.c mpn/dump.c mpn/mod_1_1.asm mpn/mod_1_2.asm mpn/mod_"\
"1_3.c mpn/mod_1_4.asm mpn/lshiftc.asm mpn/mul.c mpn/mul_fft.c mpn/mul_n.c mpn/sqr.c mpn/mul_basecase.asm mpn/sqr_basecase.asm mpn/nussbaumer_mul.c m"\
"pn/mulmid_basecase.c mpn/toom42_mulmid.c mpn/mulmid_n.c mpn/mulmid.c mpn/random.c mpn/random2.c mpn/pow_1.c mpn/rootrem.c mpn/sqrtrem.c mpn/sizeinba"\
"se.c mpn/get_str.c mpn/set_str.c mpn/compute_powtab.c mpn/scan0.c mpn/scan1.c mpn/popcount.asm mpn/hamdist.asm mpn/cmp.c mpn/zero_p.c mpn/perfsqr.c "\
"mpn/perfpow.c mpn/strongfibo.c mpn/gcd_11.asm mpn/gcd_22.asm mpn/gcd_1.c mpn/gcd.c mpn/gcdext_1.c mpn/gcdext.c mpn/gcd_subdiv_step.c mpn/gcdext_lehm"\
"er.c mpn/div_q.c mpn/tdiv_qr.c mpn/jacbase.c mpn/jacobi_2.c mpn/jacobi.c mpn/get_d.c mpn/matrix22_mul.c mpn/matrix22_mul1_inverse_vector.c mpn/hgcd_"\
"matrix.c mpn/hgcd2.c mpn/hgcd_step.c mpn/hgcd_reduce.c mpn/hgcd.c mpn/hgcd_appr.c mpn/hgcd2_jacobi.c mpn/hgcd_jacobi.c mpn/mullo_n.c mpn/mullo_basec"\
"ase.asm mpn/sqrlo.c mpn/sqrlo_basecase.c mpn/toom22_mul.c mpn/toom32_mul.c mpn/toom42_mul.c mpn/toom52_mul.c mpn/toom62_mul.c mpn/toom33_mul.c mpn/t"\
"oom43_mul.c mpn/toom53_mul.c mpn/toom54_mul.c mpn/toom63_mul.c mpn/toom44_mul.c mpn/toom6h_mul.c mpn/toom6_sqr.c mpn/toom8h_mul.c mpn/toom8_sqr.c mp"\
"n/toom_couple_handling.c mpn/toom2_sqr.c mpn/toom3_sqr.c mpn/toom4_sqr.c mpn/toom_eval_dgr3_pm1.c mpn/toom_eval_dgr3_pm2.c mpn/toom_eval_pm1.c mpn/t"\
"oom_eval_pm2.c mpn/toom_eval_pm2exp.c mpn/toom_eval_pm2rexp.c mpn/toom_interpolate_5pts.c mpn/toom_interpolate_6pts.c mpn/toom_interpolate_7pts.c mp"\
"n/toom_interpolate_8pts.c mpn/toom_interpolate_12pts.c mpn/toom_interpolate_16pts.c mpn/invertappr.c mpn/invert.c mpn/binvert.c mpn/mulmod_bnm1.c mp"\
"n/sqrmod_bnm1.c mpn/div_qr_1.c mpn/div_qr_1n_pi1.asm mpn/div_qr_2.c mpn/div_qr_2n_pi1.asm mpn/div_qr_2u_pi1.asm mpn/sbpi1_div_q.c mpn/sbpi1_div_qr.c"\
" mpn/sbpi1_divappr_q.c mpn/dcpi1_div_q.c mpn/dcpi1_div_qr.c mpn/dcpi1_divappr_q.c mpn/mu_div_qr.c mpn/mu_divappr_q.c mpn/mu_div_q.c mpn/bdiv_q_1.asm"\
" mpn/sbpi1_bdiv_q.c mpn/sbpi1_bdiv_qr.c mpn/sbpi1_bdiv_r.c mpn/dcpi1_bdiv_q.c mpn/dcpi1_bdiv_qr.c mpn/mu_bdiv_q.c mpn/mu_bdiv_qr.c mpn/bdiv_q.c mpn/"\
"bdiv_qr.c mpn/broot.c mpn/brootinv.c mpn/bsqrt.c mpn/bsqrtinv.c mpn/divexact.c mpn/bdiv_dbm1c.asm mpn/redc_1.asm mpn/redc_2.c mpn/redc_n.c mpn/powm."\
"c mpn/powlo.c mpn/sec_powm.c mpn/sec_mul.c mpn/sec_sqr.c mpn/sec_div_qr.c mpn/sec_div_r.c mpn/sec_pi1_div_qr.c mpn/sec_pi1_div_r.c mpn/sec_add_1.c m"\
"pn/sec_sub_1.c mpn/sec_invert.c mpn/trialdiv.c mpn/remove.c mpn/and_n.asm mpn/andn_n.asm mpn/nand_n.asm mpn/ior_n.asm mpn/iorn_n.asm mpn/nior_n.asm "\
"mpn/xor_n.asm mpn/xnor_n.asm mpn/copyi.asm mpn/copyd.asm mpn/zero.c mpn/sec_tabselect.asm mpn/comb_tables.c mpn/invert_limb.asm mpn/sqr_diag_addlsh1"\
".asm mpn/mul_2.asm mpn/addlsh1_n.asm mpn/sublsh1_n.asm mpn/rsblsh1_n.asm mpn/rsh1add_n.asm mpn/rsh1sub_n.asm mpn/addlsh2_n.asm mpn/sublsh2_n.asm mpn"\
"/rsblsh2_n.asm mpn/addlsh_n.asm mpn/rsblsh_n.asm mpn/add_n_sub_n.c mpn/addaddmul_1msb0.asm gmp-mparam.h"
S["mpn_objs_in_libgmp"]=" mpn/invert_limb_table.lo mpn/add$U.lo mpn/add_1$U.lo mpn/add_n.lo mpn/sub$U.lo mpn/sub_1$U.lo mpn/sub_n.lo mpn/cnd_add_n.lo mpn/cnd_sub_n.lo mpn/cn"\
"d_swap$U.lo mpn/neg$U.lo mpn/com.lo mpn/mul_1.lo mpn/addmul_1.lo mpn/submul_1.lo mpn/add_err1_n.lo mpn/add_err2_n.lo mpn/add_err3_n.lo mpn/sub_err1_"\
"n.lo mpn/sub_err2_n.lo mpn/sub_err3_n.lo mpn/lshift.lo mpn/rshift.lo mpn/dive_1.lo mpn/diveby3$U.lo mpn/divis$U.lo mpn/divrem$U.lo mpn/divrem_1.lo m"\
"pn/divrem_2.lo mpn/fib2_ui$U.lo mpn/fib2m$U.lo mpn/mod_1$U.lo mpn/mod_34lsub1.lo mpn/mode1o.lo mpn/pre_mod_1$U.lo mpn/dump$U.lo mpn/mod_1_1.lo mpn/m"\
"od_1_2.lo mpn/mod_1_3$U.lo mpn/mod_1_4.lo mpn/lshiftc.lo mpn/mul$U.lo mpn/mul_fft$U.lo mpn/mul_n$U.lo mpn/sqr$U.lo mpn/mul_basecase.lo mpn/sqr_basec"\
"ase.lo mpn/nussbaumer_mul$U.lo mpn/mulmid_basecase$U.lo mpn/toom42_mulmid$U.lo mpn/mulmid_n$U.lo mpn/mulmid$U.lo mpn/random$U.lo mpn/random2$U.lo mp"\
"n/pow_1$U.lo mpn/rootrem$U.lo mpn/sqrtrem$U.lo mpn/sizeinbase$U.lo mpn/get_str$U.lo mpn/set_str$U.lo mpn/compute_powtab$U.lo mpn/scan0$U.lo mpn/scan"\
"1$U.lo mpn/popcount.lo mpn/hamdist.lo mpn/cmp$U.lo mpn/zero_p$U.lo mpn/perfsqr$U.lo mpn/perfpow$U.lo mpn/strongfibo$U.lo mpn/gcd_11.lo mpn/gcd_22.lo"\
" mpn/gcd_1$U.lo mpn/gcd$U.lo mpn/gcdext_1$U.lo mpn/gcdext$U.lo mpn/gcd_subdiv_step$U.lo mpn/gcdext_lehmer$U.lo mpn/div_q$U.lo mpn/tdiv_qr$U.lo mpn/j"\
"acbase$U.lo mpn/jacobi_2$U.lo mpn/jacobi$U.lo mpn/get_d$U.lo mpn/matrix22_mul$U.lo mpn/matrix22_mul1_inverse_vector$U.lo mpn/hgcd_matrix$U.lo mpn/hg"\
"cd2$U.lo mpn/hgcd_step$U.lo mpn/hgcd_reduce$U.lo mpn/hgcd$U.lo mpn/hgcd_appr$U.lo mpn/hgcd2_jacobi$U.lo mpn/hgcd_jacobi$U.lo mpn/mullo_n$U.lo mpn/mu"\
"llo_basecase.lo mpn/sqrlo$U.lo mpn/sqrlo_basecase$U.lo mpn/toom22_mul$U.lo mpn/toom32_mul$U.lo mpn/toom42_mul$U.lo mpn/toom52_mul$U.lo mpn/toom62_mu"\
"l$U.lo mpn/toom33_mul$U.lo mpn/toom43_mul$U.lo mpn/toom53_mul$U.lo mpn/toom54_mul$U.lo mpn/toom63_mul$U.lo mpn/toom44_mul$U.lo mpn/toom6h_mul$U.lo m"\
"pn/toom6_sqr$U.lo mpn/toom8h_mul$U.lo mpn/toom8_sqr$U.lo mpn/toom_couple_handling$U.lo mpn/toom2_sqr$U.lo mpn/toom3_sqr$U.lo mpn/toom4_sqr$U.lo mpn/"\
"toom_eval_dgr3_pm1$U.lo mpn/toom_eval_dgr3_pm2$U.lo mpn/toom_eval_pm1$U.lo mpn/toom_eval_pm2$U.lo mpn/toom_eval_pm2exp$U.lo mpn/toom_eval_pm2rexp$U."\
"lo mpn/toom_interpolate_5pts$U.lo mpn/toom_interpolate_6pts$U.lo mpn/toom_interpolate_7pts$U.lo mpn/toom_interpolate_8pts$U.lo mpn/toom_interpolate_"\
"12pts$U.lo mpn/toom_interpolate_16pts$U.lo mpn/invertappr$U.lo mpn/invert$U.lo mpn/binvert$U.lo mpn/mulmod_bnm1$U.lo mpn/sqrmod_bnm1$U.lo mpn/div_qr"\
"_1$U.lo mpn/div_qr_1n_pi1.lo mpn/div_qr_2$U.lo mpn/div_qr_2n_pi1.lo mpn/div_qr_2u_pi1.lo mpn/sbpi1_div_q$U.lo mpn/sbpi1_div_qr$U.lo mpn/sbpi1_divapp"\
"r_q$U.lo mpn/dcpi1_div_q$U.lo mpn/dcpi1_div_qr$U.lo mpn/dcpi1_divappr_q$U.lo mpn/mu_div_qr$U.lo mpn/mu_divappr_q$U.lo mpn/mu_div_q$U.lo mpn/bdiv_q_1"\
".lo mpn/sbpi1_bdiv_q$U.lo mpn/sbpi1_bdiv_qr$U.lo mpn/sbpi1_bdiv_r$U.lo mpn/dcpi1_bdiv_q$U.lo mpn/dcpi1_bdiv_qr$U.lo mpn/mu_bdiv_q$U.lo mpn/mu_bdiv_q"\
"r$U.lo mpn/bdiv_q$U.lo mpn/bdiv_qr$U.lo mpn/broot$U.lo mpn/brootinv$U.lo mpn/bsqrt$U.lo mpn/bsqrtinv$U.lo mpn/divexact$U.lo mpn/bdiv_dbm1c.lo mpn/re"\
"dc_1.lo mpn/redc_2$U.lo mpn/redc_n$U.lo mpn/powm$U.lo mpn/powlo$U.lo mpn/sec_powm$U.lo mpn/sec_mul$U.lo mpn/sec_sqr$U.lo mpn/sec_div_qr$U.lo mpn/sec"\
"_div_r$U.lo mpn/sec_pi1_div_qr$U.lo mpn/sec_pi1_div_r$U.lo mpn/sec_add_1$U.lo mpn/sec_sub_1$U.lo mpn/sec_invert$U.lo mpn/trialdiv$U.lo mpn/remove$U."\
"lo mpn/and_n.lo mpn/andn_n.lo mpn/nand_n.lo mpn/ior_n.lo mpn/iorn_n.lo mpn/nior_n.lo mpn/xor_n.lo mpn/xnor_n.lo mpn/copyi.lo mpn/copyd.lo mpn/zero$U"\
".lo mpn/sec_tabselect.lo mpn/comb_tables$U.lo mpn/invert_limb.lo mpn/sqr_diag_addlsh1.lo mpn/mul_2.lo mpn/addlsh1_n.lo mpn/sublsh1_n.lo mpn/rsblsh1_"\
"n.lo mpn/rsh1add_n.lo mpn/rsh1sub_n.lo mpn/addlsh2_n.lo mpn/sublsh2_n.lo mpn/rsblsh2_n.lo mpn/addlsh_n.lo mpn/rsblsh_n.lo mpn/add_n_sub_n$U.lo mpn/a"\
"ddaddmul_1msb0.lo"
S["mpn_objects"]=" invert_limb_table.lo add$U.lo add_1$U.lo add_n.lo sub$U.lo sub_1$U.lo sub_n.lo cnd_add_n.lo cnd_sub_n.lo cnd_swap$U.lo neg$U.lo com.lo mul_1.lo add"\
"mul_1.lo submul_1.lo add_err1_n.lo add_err2_n.lo add_err3_n.lo sub_err1_n.lo sub_err2_n.lo sub_err3_n.lo lshift.lo rshift.lo dive_1.lo diveby3$U.lo "\
"divis$U.lo divrem$U.lo divrem_1.lo divrem_2.lo fib2_ui$U.lo fib2m$U.lo mod_1$U.lo mod_34lsub1.lo mode1o.lo pre_mod_1$U.lo dump$U.lo mod_1_1.lo mod_1"\
"_2.lo mod_1_3$U.lo mod_1_4.lo lshiftc.lo mul$U.lo mul_fft$U.lo mul_n$U.lo sqr$U.lo mul_basecase.lo sqr_basecase.lo nussbaumer_mul$U.lo mulmid_baseca"\
"se$U.lo toom42_mulmid$U.lo mulmid_n$U.lo mulmid$U.lo random$U.lo random2$U.lo pow_1$U.lo rootrem$U.lo sqrtrem$U.lo sizeinbase$U.lo get_str$U.lo set_"\
"str$U.lo compute_powtab$U.lo scan0$U.lo scan1$U.lo popcount.lo hamdist.lo cmp$U.lo zero_p$U.lo perfsqr$U.lo perfpow$U.lo strongfibo$U.lo gcd_11.lo g"\
"cd_22.lo gcd_1$U.lo gcd$U.lo gcdext_1$U.lo gcdext$U.lo gcd_subdiv_step$U.lo gcdext_lehmer$U.lo div_q$U.lo tdiv_qr$U.lo jacbase$U.lo jacobi_2$U.lo ja"\
"cobi$U.lo get_d$U.lo matrix22_mul$U.lo matrix22_mul1_inverse_vector$U.lo hgcd_matrix$U.lo hgcd2$U.lo hgcd_step$U.lo hgcd_reduce$U.lo hgcd$U.lo hgcd_"\
"appr$U.lo hgcd2_jacobi$U.lo hgcd_jacobi$U.lo mullo_n$U.lo mullo_basecase.lo sqrlo$U.lo sqrlo_basecase$U.lo toom22_mul$U.lo toom32_mul$U.lo toom42_mu"\
"l$U.lo toom52_mul$U.lo toom62_mul$U.lo toom33_mul$U.lo toom43_mul$U.lo toom53_mul$U.lo toom54_mul$U.lo toom63_mul$U.lo toom44_mul$U.lo toom6h_mul$U."\
"lo toom6_sqr$U.lo toom8h_mul$U.lo toom8_sqr$U.lo toom_couple_handling$U.lo toom2_sqr$U.lo toom3_sqr$U.lo toom4_sqr$U.lo toom_eval_dgr3_pm1$U.lo toom"\
"_eval_dgr3_pm2$U.lo toom_eval_pm1$U.lo toom_eval_pm2$U.lo toom_eval_pm2exp$U.lo toom_eval_pm2rexp$U.lo toom_interpolate_5pts$U.lo toom_interpolate_6"\
"pts$U.lo toom_interpolate_7pts$U.lo toom_interpolate_8pts$U.lo toom_interpolate_12pts$U.lo toom_interpolate_16pts$U.lo invertappr$U.lo invert$U.lo b"\
"invert$U.lo mulmod_bnm1$U.lo sqrmod_bnm1$U.lo div_qr_1$U.lo div_qr_1n_pi1.lo div_qr_2$U.lo div_qr_2n_pi1.lo div_qr_2u_pi1.lo sbpi1_div_q$U.lo sbpi1_"\
"div_qr$U.lo sbpi1_divappr_q$U.lo dcpi1_div_q$U.lo dcpi1_div_qr$U.lo dcpi1_divappr_q$U.lo mu_div_qr$U.lo mu_divappr_q$U.lo mu_div_q$U.lo bdiv_q_1.lo "\
"sbpi1_bdiv_q$U.lo sbpi1_bdiv_qr$U.lo sbpi1_bdiv_r$U.lo dcpi1_bdiv_q$U.lo dcpi1_bdiv_qr$U.lo mu_bdiv_q$U.lo mu_bdiv_qr$U.lo bdiv_q$U.lo bdiv_qr$U.lo "\
"broot$U.lo brootinv$U.lo bsqrt$U.lo bsqrtinv$U.lo divexact$U.lo bdiv_dbm1c.lo redc_1.lo redc_2$U.lo redc_n$U.lo powm$U.lo powlo$U.lo sec_powm$U.lo s"\
"ec_mul$U.lo sec_sqr$U.lo sec_div_qr$U.lo sec_div_r$U.lo sec_pi1_div_qr$U.lo sec_pi1_div_r$U.lo sec_add_1$U.lo sec_sub_1$U.lo sec_invert$U.lo trialdi"\
"v$U.lo remove$U.lo and_n.lo andn_n.lo nand_n.lo ior_n.lo iorn_n.lo nior_n.lo xor_n.lo xnor_n.lo copyi.lo copyd.lo zero$U.lo sec_tabselect.lo comb_ta"\
"bles$U.lo invert_limb.lo sqr_diag_addlsh1.lo mul_2.lo addlsh1_n.lo sublsh1_n.lo rsblsh1_n.lo rsh1add_n.lo rsh1sub_n.lo addlsh2_n.lo sublsh2_n.lo rsb"\
"lsh2_n.lo addlsh_n.lo rsblsh_n.lo add_n_sub_n$U.lo addaddmul_1msb0.lo"
S["GMP_LIMB_BITS"]="64"
S["M4"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbm4"
S["TUNE_LIBS"]=""
S["TAL_OBJECT"]="tal-reent.lo"
S["LIBM"]=""
S["ENABLE_STATIC_FALSE"]="#"
S["ENABLE_STATIC_TRUE"]=""
S["LT_SYS_LIBRARY_PATH"]=""
S["OTOOL64"]=":"
S["OTOOL"]="otool"
S["LIPO"]="lipo"
S["NMEDIT"]="nmedit"
S["DSYMUTIL"]="dsymutil"
S["MANIFEST_TOOL"]=":"
S["RANLIB"]="ranlib"
S["ac_ct_AR"]="ar"
S["LN_S"]="ln -s"
S["LD"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld"
S["FGREP"]="/usr/bin/grep -F"
S["SED"]="/usr/bin/sed"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["LIBGMP_DLL"]="0"
S["OBJDUMP"]="objdump"
S["DLLTOOL"]="dlltool"
S["AS"]="as"
S["NM"]="/usr/bin/nm -B"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["AR"]="ar"
S["ASMFLAGS"]=""
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CXXCPP"]="c++ -E"
S["WANT_CXX_FALSE"]=""
S["WANT_CXX_TRUE"]="#"
S["ac_ct_CXX"]=""
S["CXXFLAGS"]=""
S["CXX"]="c++"
S["CCAS"]="cc -c"
S["LIBM_FOR_BUILD"]="-lm"
S["U_FOR_BUILD"]=""
S["EXEEXT_FOR_BUILD"]=""
S["CPP_FOR_BUILD"]="cc -E"
S["CC_FOR_BUILD"]="cc"
S["CPP"]="cc -E"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="cc"
S["CPPFLAGS"]=""
S["LDFLAGS"]=""
S["CFLAGS"]="-O2 -pedantic -fomit-frame-pointer -m64 -mtune=nehalem -march=nehalem"
S["CC"]="cc"
S["DEFN_LONG_LONG_LIMB"]="/* #undef _LONG_LONG_LIMB */"
S["CALLING_CONVENTIONS_OBJS"]="amd64call.lo amd64check$U.lo"
S["SPEED_CYCLECOUNTER_OBJ"]="x86_64.lo"
S["LIBGMPXX_LDFLAGS"]=""
S["LIBGMP_LDFLAGS"]=""
S["GMP_LDFLAGS"]=""
S["HAVE_HOST_CPU_FAMILY_powerpc"]="0"
S["HAVE_HOST_CPU_FAMILY_power"]="0"
S["ABI"]="64"
S["GMP_NAIL_BITS"]="0"
S["MAINT"]="#"
S["MAINTAINER_MODE_FALSE"]=""
S["MAINTAINER_MODE_TRUE"]="#"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="1"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["am__untar"]="$${TAR-tar} xf -"
S["am__tar"]="$${TAR-tar} chof - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbawk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/m68k--netbsdelf-install -d -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/lgpl3/gmp/dist/install-sh"
S["MAKEINFO"]="${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/lgpl3/gmp/dist/missing makeinfo"
S["AUTOHEADER"]="${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/lgpl3/gmp/dist/missing autoheader"
S["AUTOMAKE"]="${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/lgpl3/gmp/dist/missing automake-1.15"
S["AUTOCONF"]="${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/lgpl3/gmp/dist/missing autoconf"
S["ACLOCAL"]="${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/lgpl3/gmp/dist/missing aclocal-1.15"
S["VERSION"]="6.2.1"
S["PACKAGE"]="gmp"
S["CYGPATH_W"]="echo"
S["am__isrc"]=" -I$(srcdir)"
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["host_os"]="darwin22.1.0"
S["host_vendor"]="apple"
S["host_cpu"]="nehalem"
S["host"]="nehalem-apple-darwin22.1.0"
S["build_os"]="darwin22.1.0"
S["build_vendor"]="apple"
S["build_cpu"]="nehalem"
S["build"]="nehalem-apple-darwin22.1.0"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]=""
S["ECHO_T"]=""
S["ECHO_N"]=""
S["ECHO_C"]="\\c"
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]="http://www.gnu.org/software/gmp/"
S["PACKAGE_BUGREPORT"]="gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html"
S["PACKAGE_STRING"]="GNU MP 6.2.1"
S["PACKAGE_VERSION"]="6.2.1"
S["PACKAGE_TARNAME"]="gmp"
S["PACKAGE_NAME"]="GNU MP"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"GNU MP\""
D["PACKAGE_TARNAME"]=" \"gmp\""
D["PACKAGE_VERSION"]=" \"6.2.1\""
D["PACKAGE_STRING"]=" \"GNU MP 6.2.1\""
D["PACKAGE_BUGREPORT"]=" \"gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html\""
D["PACKAGE_URL"]=" \"http://www.gnu.org/software/gmp/\""
D["PACKAGE"]=" \"gmp\""
D["VERSION"]=" \"6.2.1\""
D["WANT_FFT"]=" 1"
D["HAVE_HOST_CPU_nehalem"]=" 1"
D["HAVE_SPEED_CYCLECOUNTER"]=" 2"
D["HAVE_CALLING_CONVENTIONS"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["STDC_HEADERS"]=" 1"
D["TIME_WITH_SYS_TIME"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_FLOAT_H"]=" 1"
D["HAVE_LANGINFO_H"]=" 1"
D["HAVE_LOCALE_H"]=" 1"
D["HAVE_NL_TYPES_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_TIMES_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_DECL_FGETC"]=" 1"
D["HAVE_DECL_FSCANF"]=" 1"
D["HAVE_DECL_OPTARG"]=" 1"
D["HAVE_DECL_UNGETC"]=" 1"
D["HAVE_DECL_VFPRINTF"]=" 1"
D["HAVE_DECL_SYS_ERRLIST"]=" 1"
D["HAVE_DECL_SYS_NERR"]=" 1"
D["RETSIGTYPE"]=" void"
D["HAVE_INTMAX_T"]=" 1"
D["HAVE_LONG_DOUBLE"]=" 1"
D["HAVE_LONG_LONG"]=" 1"
D["HAVE_PTRDIFF_T"]=" 1"
D["HAVE_QUAD_T"]=" 1"
D["HAVE_UINT_LEAST32_T"]=" 1"
D["HAVE_INTPTR_T"]=" 1"
D["restrict"]=" __restrict"
D["HAVE_ATTRIBUTE_CONST"]=" 1"
D["HAVE_ATTRIBUTE_MALLOC"]=" 1"
D["HAVE_ATTRIBUTE_MODE"]=" 1"
D["HAVE_ATTRIBUTE_NORETURN"]=" 1"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["WANT_TMP_ALLOCA"]=" 1"
D["HAVE_LIMB_LITTLE_ENDIAN"]=" 1"
D["HAVE_DOUBLE_IEEE_LITTLE_ENDIAN"]=" 1"
D["HAVE_ALARM"]=" 1"
D["HAVE_CLOCK"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_GETRUSAGE"]=" 1"
D["HAVE_GETTIMEOFDAY"]=" 1"
D["HAVE_LOCALECONV"]=" 1"
D["HAVE_MEMSET"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_MPROTECT"]=" 1"
D["HAVE_NL_LANGINFO"]=" 1"
D["HAVE_POPEN"]=" 1"
D["HAVE_PROCESSOR_INFO"]=" 1"
D["HAVE_RAISE"]=" 1"
D["HAVE_SIGACTION"]=" 1"
D["HAVE_SIGALTSTACK"]=" 1"
D["HAVE_STRCHR"]=" 1"
D["HAVE_STRERROR"]=" 1"
D["HAVE_STRNLEN"]=" 1"
D["HAVE_STRTOL"]=" 1"
D["HAVE_STRTOUL"]=" 1"
D["HAVE_SYSCONF"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_SYSCTLBYNAME"]=" 1"
D["HAVE_TIMES"]=" 1"
D["HAVE_CLOCK_GETTIME"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["HAVE_NATIVE_mpn_add_n"]=" 1"
D["HAVE_NATIVE_mpn_add_nc"]=" 1"
D["HAVE_NATIVE_mpn_sub_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_nc"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func_nc"]=" 1"
D["HAVE_NATIVE_mpn_add_n"]=" 1"
D["HAVE_NATIVE_mpn_add_nc"]=" 1"
D["HAVE_NATIVE_mpn_sub_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_nc"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func_nc"]=" 1"
D["HAVE_NATIVE_mpn_cnd_add_n"]=" 1"
D["HAVE_NATIVE_mpn_cnd_sub_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_cnd_add_n"]=" 1"
D["HAVE_NATIVE_mpn_cnd_sub_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_com"]=" 1"
D["HAVE_NATIVE_mpn_mul_1c"]=" 1"
D["HAVE_NATIVE_mpn_mul_1"]=" 1"
D["HAVE_NATIVE_mpn_addmul_1"]=" 1"
D["HAVE_NATIVE_mpn_submul_1"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_addmul_1"]=" 1"
D["HAVE_NATIVE_mpn_submul_1"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_add_err1_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_err1_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_add_err2_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_err2_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_add_err3_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_err3_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_add_err1_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_err1_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_add_err2_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_err2_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_add_err3_n"]=" 1"
D["HAVE_NATIVE_mpn_sub_err3_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_lshift"]=" 1"
D["HAVE_NATIVE_mpn_rshift"]=" 1"
D["HAVE_NATIVE_mpn_divexact_1"]=" 1"
D["HAVE_NATIVE_mpn_preinv_divrem_1"]=" 1"
D["HAVE_NATIVE_mpn_divrem_1"]=" 1"
D["HAVE_NATIVE_mpn_divrem_2"]=" 1"
D["HAVE_NATIVE_mpn_mod_34lsub1"]=" 1"
D["HAVE_NATIVE_mpn_modexact_1_odd"]=" 1"
D["HAVE_NATIVE_mpn_modexact_1c_odd"]=" 1"
D["HAVE_NATIVE_mpn_mod_1_1p"]=" 1"
D["HAVE_NATIVE_mpn_mod_1_1p_cps"]=" 1"
D["HAVE_NATIVE_mpn_mod_1s_2p"]=" 1"
D["HAVE_NATIVE_mpn_mod_1s_2p_cps"]=" 1"
D["HAVE_NATIVE_mpn_mod_1s_4p"]=" 1"
D["HAVE_NATIVE_mpn_mod_1s_4p_cps"]=" 1"
D["HAVE_NATIVE_mpn_lshiftc"]=" 1"
D["HAVE_NATIVE_mpn_mul_basecase"]=" 1"
D["HAVE_NATIVE_mpn_sqr_basecase"]=" 1"
D["HAVE_NATIVE_mpn_popcount"]=" 1"
D["HAVE_NATIVE_mpn_hamdist"]=" 1"
D["HAVE_NATIVE_mpn_gcd_11"]=" 1"
D["HAVE_NATIVE_mpn_gcd_22"]=" 1"
D["HAVE_NATIVE_mpn_mullo_basecase"]=" 1"
D["HAVE_NATIVE_mpn_div_qr_1n_pi1"]=" 1"
D["HAVE_NATIVE_mpn_div_qr_2n_pi1"]=" 1"
D["HAVE_NATIVE_mpn_div_qr_2u_pi1"]=" 1"
D["HAVE_NATIVE_mpn_bdiv_q_1"]=" 1"
D["HAVE_NATIVE_mpn_pi1_bdiv_q_1"]=" 1"
D["HAVE_NATIVE_mpn_bdiv_dbm1c"]=" 1"
D["HAVE_NATIVE_mpn_redc_1"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_and_n"]=" 1"
D["HAVE_NATIVE_mpn_andn_n"]=" 1"
D["HAVE_NATIVE_mpn_nand_n"]=" 1"
D["HAVE_NATIVE_mpn_ior_n"]=" 1"
D["HAVE_NATIVE_mpn_iorn_n"]=" 1"
D["HAVE_NATIVE_mpn_nior_n"]=" 1"
D["HAVE_NATIVE_mpn_xor_n"]=" 1"
D["HAVE_NATIVE_mpn_xnor_n"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_func"]=" 1"
D["HAVE_NATIVE_mpn_copyi"]=" 1"
D["HAVE_NATIVE_mpn_copyd"]=" 1"
D["HAVE_NATIVE_mpn_sec_tabselect"]=" 1"
D["HAVE_NATIVE_mpn_invert_limb"]=" 1"
D["HAVE_NATIVE_C"]=" 1"
D["HAVE_NATIVE_Kn"]=" 1"
D["HAVE_NATIVE_C2"]=" 1"
D["HAVE_NATIVE_Ci"]=" 1"
D["HAVE_NATIVE_mpn_sqr_diag_addlsh1"]=" 1"
D["HAVE_NATIVE_mpn_mul_2"]=" 1"
D["HAVE_NATIVE_mpn_addlsh1_n"]=" 1"
D["HAVE_NATIVE_mpn_rsblsh1_n"]=" 1"
D["HAVE_NATIVE_mpn_sublsh1_n"]=" 1"
D["HAVE_NATIVE_mpn_addlsh1_n"]=" 1"
D["HAVE_NATIVE_mpn_rsblsh1_n"]=" 1"
D["HAVE_NATIVE_mpn_rsh1add_n"]=" 1"
D["HAVE_NATIVE_mpn_rsh1add_nc"]=" 1"
D["HAVE_NATIVE_mpn_rsh1sub_n"]=" 1"
D["HAVE_NATIVE_mpn_rsh1sub_nc"]=" 1"
D["HAVE_NATIVE_func_nc"]=" 1"
D["HAVE_NATIVE_func_n"]=" 1"
D["HAVE_NATIVE_mpn_rsh1add_n"]=" 1"
D["HAVE_NATIVE_mpn_rsh1add_nc"]=" 1"
D["HAVE_NATIVE_mpn_rsh1sub_n"]=" 1"
D["HAVE_NATIVE_mpn_rsh1sub_nc"]=" 1"
D["HAVE_NATIVE_func_nc"]=" 1"
D["HAVE_NATIVE_func_n"]=" 1"
D["HAVE_NATIVE_mpn_addlsh2_n"]=" 1"
D["HAVE_NATIVE_mpn_rsblsh2_n"]=" 1"
D["HAVE_NATIVE_mpn_sublsh2_n"]=" 1"
D["HAVE_NATIVE_mpn_addlsh2_n"]=" 1"
D["HAVE_NATIVE_mpn_rsblsh2_n"]=" 1"
D["HAVE_NATIVE_mpn_addlsh_n"]=" 1"
D["HAVE_NATIVE_mpn_addlsh_nc"]=" 1"
D["HAVE_NATIVE_mpn_rsblsh_n"]=" 1"
D["HAVE_NATIVE_func_n"]=" 1"
D["HAVE_NATIVE_func_nc"]=" 1"
D["HAVE_NATIVE_mpn_addlsh_n"]=" 1"
D["HAVE_NATIVE_mpn_addlsh_nc"]=" 1"
D["HAVE_NATIVE_mpn_rsblsh_n"]=" 1"
D["HAVE_NATIVE_func_n"]=" 1"
D["HAVE_NATIVE_func_nc"]=" 1"
D["HAVE_NATIVE_mpn_addaddmul_1msb0"]=" 1"
D["LSYM_PREFIX"]=" \"L\""
D["HAVE_HOST_CPU_FAMILY_x86_64"]=" 1"
D["GMP_MPARAM_H_SUGGEST"]=" \"/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gmp/../../external/lgpl3/gmp/dist/mpn/x86_64/coreinhm/gmp-mparam."\
"h\""
D["SIZEOF_VOID_P"]=" 8"
D["SIZEOF_UNSIGNED_SHORT"]=" 2"
D["SIZEOF_UNSIGNED"]=" 4"
D["SIZEOF_UNSIGNED_LONG"]=" 8"
D["SIZEOF_MP_LIMB_T"]=" 8"
D["HAVE_STACK_T"]=" 1"
D["YYTEXT_POINTER"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;
  :L)
  #
  # CONFIG_LINK
  #

  if test "$ac_source" = "$ac_file" && test "$srcdir" = '.'; then
    :
  else
    # Prefer the file from the source tree if names are identical.
    if test "$ac_source" = "$ac_file" || test ! -r "$ac_source"; then
      ac_source=$srcdir/$ac_source
    fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file" >&5
$as_echo "$as_me: linking $ac_source to $ac_file" >&6;}

    if test ! -r "$ac_source"; then
      as_fn_error $? "$ac_source: file not found" "$LINENO" 5
    fi
    rm -f "$ac_file"

    # Try a relative symlink, then a hard link, then a copy.
    case $ac_source in
    [\\/$]* | ?:[\\/]* ) ac_rel_source=$ac_source ;;
	*) ac_rel_source=$ac_top_build_prefix$ac_source ;;
    esac
    ln -s "$ac_rel_source" "$ac_file" 2>/dev/null ||
      ln "$ac_source" "$ac_file" 2>/dev/null ||
      cp -p "$ac_source" "$ac_file" ||
      as_fn_error $? "cannot link or copy $ac_source to $ac_file" "$LINENO" 5
  fi
 ;;
  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "libtool":C)

    # See if we are running on zsh, and set the options that allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}"; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile=${ofile}T
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL
# Generated automatically by $as_me ($PACKAGE) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.

# Provide generalized library-building support services.
# Written by Gordon Matzigkeit, 1996

# Copyright (C) 2014 Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.  There is NO
# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# GNU Libtool is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of of the License, or
# (at your option) any later version.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program or library that is built
# using GNU Libtool, you may include this file under the  same
# distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# The names of the tagged configurations supported by this script.
available_tags='CXX '

# Configured defaults for sys_lib_dlsearch_path munging.
: \${LT_SYS_LIBRARY_PATH="$configure_time_lt_sys_library_path"}

# ### BEGIN LIBTOOL CONFIG

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Assembler program.
AS=$lt_AS

# DLL creation program.
DLLTOOL=$lt_DLLTOOL

# Object dumper program.
OBJDUMP=$lt_OBJDUMP

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# Shared archive member basename,for filename based shared library versioning on AIX.
shared_archive_member_spec=$shared_archive_member_spec

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that protects backslashes.
ECHO=$lt_ECHO

# The PATH separator for the build system.
PATH_SEPARATOR=$lt_PATH_SEPARATOR

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# convert \$build file names to \$host format.
to_host_file_cmd=$lt_cv_to_host_file_cmd

# convert \$build files to toolchain format.
to_tool_file_cmd=$lt_cv_to_tool_file_cmd

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method = "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# How to find potential files when deplibs_check_method = "file_magic".
file_magic_glob=$lt_file_magic_glob

# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
want_nocaseglob=$lt_want_nocaseglob

# Command to associate shared and link libraries.
sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd

# The archiver.
AR=$lt_AR

# Flags to create an archive.
AR_FLAGS=$lt_AR_FLAGS

# How to feed a file listing to the archiver.
archiver_list_spec=$lt_archiver_list_spec

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# Whether to use a lock for old archive extraction.
lock_old_archive_extraction=$lock_old_archive_extraction

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm into a list of symbols to manually relocate.
global_symbol_to_import=$lt_lt_cv_sys_global_symbol_to_import

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# The name lister interface.
nm_interface=$lt_lt_cv_nm_interface

# Specify filename containing input files for \$NM.
nm_file_list_spec=$lt_nm_file_list_spec

# The root where to search for dependent libraries,and where our libraries should be installed.
lt_sysroot=$lt_sysroot

# Command to truncate a binary pipe.
lt_truncate_bin=$lt_lt_cv_truncate_bin

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Manifest tool.
MANIFEST_TOOL=$lt_MANIFEST_TOOL

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Permission mode override for installation of shared libraries.
install_override_mode=$lt_install_override_mode

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Detected run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_configure_time_dlsearch_path

# Explicit LT_SYS_LIBRARY_PATH set during ./configure time.
configure_time_lt_sys_library_path=$lt_configure_time_lt_sys_library_path

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects
postdep_objects=$lt_postdep_objects
predeps=$lt_predeps
postdeps=$lt_postdeps

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path

# ### END LIBTOOL CONFIG

_LT_EOF

    cat <<'_LT_EOF' >> "$cfgfile"

# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE

# func_munge_path_list VARIABLE PATH
# -----------------------------------
# VARIABLE is name of variable containing _space_ separated list of
# directories to be munged by the contents of PATH, which is string
# having a format:
# "DIR[:DIR]:"
#       string "DIR[ DIR]" will be prepended to VARIABLE
# ":DIR[:DIR]"
#       string "DIR[ DIR]" will be appended to VARIABLE
# "DIRP[:DIRP]::[DIRA:]DIRA"
#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
#       "DIRA[ DIRA]" will be appended to VARIABLE
# "DIR[:DIR]"
#       VARIABLE will be replaced by "DIR[ DIR]"
func_munge_path_list ()
{
    case x$2 in
    x)
        ;;
    *:)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'` \$$1\"
        ;;
    x:*)
        eval $1=\"\$$1 `$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    *::*)
        eval $1=\"\$$1\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
        eval $1=\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \$$1\"
        ;;
    *)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    esac
}


# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
func_cc_basename ()
{
    for cc_temp in $*""; do
      case $cc_temp in
        compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
        distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
        \-*) ;;
        *) break;;
      esac
    done
    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
}


# ### END FUNCTIONS SHARED WITH CONFIGURE

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test set != "${COLLECT_NAMES+set}"; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac


ltmain=$ac_aux_dir/ltmain.sh


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '$q' "$ltmain" >> "$cfgfile" \
     || (rm -f "$cfgfile"; exit 1)

   mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: CXX

# The linker used to build libraries.
LD=$lt_LD_CXX

# How to create reloadable object files.
reload_flag=$lt_reload_flag_CXX
reload_cmds=$lt_reload_cmds_CXX

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_CXX

# A language specific compiler.
CC=$lt_compiler_CXX

# Is the compiler the GNU compiler?
with_gcc=$GCC_CXX

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_CXX

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_CXX

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_CXX

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_CXX

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_CXX

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_CXX
archive_expsym_cmds=$lt_archive_expsym_cmds_CXX

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_CXX
module_expsym_cmds=$lt_module_expsym_cmds_CXX

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_CXX

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_CXX

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_CXX

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_CXX

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_CXX

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_CXX

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_CXX

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_CXX

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_CXX

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_CXX

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_CXX

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_CXX

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_CXX

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_CXX

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_CXX

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_CXX

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_CXX

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_CXX
postdep_objects=$lt_postdep_objects_CXX
predeps=$lt_predeps_CXX
postdeps=$lt_postdeps_CXX

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_CXX

# ### END LIBTOOL TAG CONFIG: CXX
_LT_EOF

 ;;

  esac
done # for ac_tag


as_fn_exit 0
