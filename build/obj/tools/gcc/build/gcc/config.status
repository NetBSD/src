#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by $as_me, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" as:exec-tool.in collect-ld:exec-tool.in nm:exec-tool.in dsymutil:exec-tool.in Makefile         "
config_headers=" auto-host.h:config.in"
config_links=" clearcap.map:/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/config/sol2-clearcapv2.map"
config_commands=" depdir gccdepdir default"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration links:
$config_links

Configuration commands:
$config_commands

Report bugs to the package provider."

ac_cs_config="'--srcdir=/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc' '--cache-file=./config.cache' '--enable-long-long' '--enable-threads' '--with-bugurl=http://www.NetBSD.org/support/send-pr.html' '--with-pkgversion=NetBSD nb1 20220722' '--with-system-zlib' '--without-isl' '--enable-__cxa_atexit' '--enable-libstdcxx-time=rt' '--enable-libstdcxx-threads' '--with-diagnostics-color=auto-if-env' '--with-default-libstdcxx-abi=new' '--with-sysroot=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/destdir.soft68k' '--with-mpc=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--with-mpfr=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--with-gmp=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--disable-nls' '--disable-multilib' '--enable-languages=c c++ objc' '--prefix=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--enable-languages=c,c++,lto,objc' '--program-transform-name=s,^,m68k--netbsdelf-,' '--disable-option-checking' '--build=x86_64-apple-darwin22.1.0' '--host=x86_64-apple-darwin22.1.0' '--target=m68k--netbsdelf' 'build_alias=x86_64-apple-darwin22.1.0' 'host_alias=x86_64-apple-darwin22.1.0' 'target_alias=m68k--netbsdelf' 'CC=cc' 'CFLAGS=-O -O2 -no-cpp-precomp' 'LDFLAGS= ' 'CPPFLAGS=-DNETBSD_TOOLS -DTARGET_SYSTEM_ROOT=0  -DTARGET_SYSTEM_ROOT_RELOCATABLE' 'CXX=c++' 'CXXFLAGS=-O' 'GMPLIBS=-L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -lmpc -lmpfr -lgmp' 'GMPINC=-I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include -I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include -I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include ' 'ISLLIBS=' 'ISLINC='"
ac_cs_version="\
config.status
configured by /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/gpl3/gcc.old/dist/gcc/configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tools/gcc/build/gcc'
srcdir='/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc'
AWK='/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh '/Users/sidqian/Downloads/summer/L2S/netbsd-src/external/gpl3/gcc.old/dist/gcc/configure'  '--srcdir=/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc' '--cache-file=./config.cache' '--enable-long-long' '--enable-threads' '--with-bugurl=http://www.NetBSD.org/support/send-pr.html' '--with-pkgversion=NetBSD nb1 20220722' '--with-system-zlib' '--without-isl' '--enable-__cxa_atexit' '--enable-libstdcxx-time=rt' '--enable-libstdcxx-threads' '--with-diagnostics-color=auto-if-env' '--with-default-libstdcxx-abi=new' '--with-sysroot=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/destdir.soft68k' '--with-mpc=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--with-mpfr=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--with-gmp=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--disable-nls' '--disable-multilib' '--enable-languages=c c++ objc' '--prefix=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64' '--enable-languages=c,c++,lto,objc' '--program-transform-name=s,^,m68k--netbsdelf-,' '--disable-option-checking' '--build=x86_64-apple-darwin22.1.0' '--host=x86_64-apple-darwin22.1.0' '--target=m68k--netbsdelf' 'build_alias=x86_64-apple-darwin22.1.0' 'host_alias=x86_64-apple-darwin22.1.0' 'target_alias=m68k--netbsdelf' 'CC=cc' 'CFLAGS=-O -O2 -no-cpp-precomp' 'LDFLAGS= ' 'CPPFLAGS=-DNETBSD_TOOLS -DTARGET_SYSTEM_ROOT=0  -DTARGET_SYSTEM_ROOT_RELOCATABLE' 'CXX=c++' 'CXXFLAGS=-O' 'GMPLIBS=-L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -lmpc -lmpfr -lgmp' 'GMPINC=-I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include -I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include -I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include ' 'ISLLIBS=' 'ISLINC=' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
ac_aux_dir=/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/.. DEPDIR=.deps
subdirs=" brig c cp d fortran jit lto objc objcp" ac_aux_dir=/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/.. DEPDIR=.deps
subdirs=' brig c cp d fortran jit lto objc objcp'


# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "auto-host.h") CONFIG_HEADERS="$CONFIG_HEADERS auto-host.h:config.in" ;;
    "depdir") CONFIG_COMMANDS="$CONFIG_COMMANDS depdir" ;;
    "gccdepdir") CONFIG_COMMANDS="$CONFIG_COMMANDS gccdepdir" ;;
    "as") CONFIG_FILES="$CONFIG_FILES as:exec-tool.in" ;;
    "collect-ld") CONFIG_FILES="$CONFIG_FILES collect-ld:exec-tool.in" ;;
    "nm") CONFIG_FILES="$CONFIG_FILES nm:exec-tool.in" ;;
    "dsymutil") CONFIG_FILES="$CONFIG_FILES dsymutil:exec-tool.in" ;;
    "clearcap.map") CONFIG_LINKS="$CONFIG_LINKS clearcap.map:${srcdir}/config/$clearcap_map" ;;
    "$all_outputs") CONFIG_FILES="$CONFIG_FILES $all_outputs" ;;
    "default") CONFIG_COMMANDS="$CONFIG_COMMANDS default" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_LINKS+set}" = set || CONFIG_LINKS=$config_links
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then

if $AWK 'BEGIN { getline <"/dev/null" }' </dev/null 2>/dev/null; then
  ac_cs_awk_getline=:
  ac_cs_awk_pipe_init=
  ac_cs_awk_read_file='
      while ((getline aline < (F[key])) > 0)
	print(aline)
      close(F[key])'
  ac_cs_awk_pipe_fini=
else
  ac_cs_awk_getline=false
  ac_cs_awk_pipe_init="print \"cat <<'|#_!!_#|' &&\""
  ac_cs_awk_read_file='
      print "|#_!!_#|"
      print "cat " F[key] " &&"
      '$ac_cs_awk_pipe_init
  # The final `:' finishes the AND list.
  ac_cs_awk_pipe_fini='END { print "|#_!!_#|"; print ":" }'
fi
ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
F["option_includes"]="option-includes.mk"
F["language_hooks"]="Make-hooks"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["NO_PIE_FLAG"]="-no-pie"
S["NO_PIE_CFLAGS"]="-fno-PIE"
S["enable_default_pie"]="no"
S["PICFLAG"]=""
S["enable_host_shared"]=""
S["enable_plugin"]="yes"
S["pluginlibs"]=""
S["ISLINC"]=""
S["ISLLIBS"]=""
S["GMPINC"]="-I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include -I/Users/sidqian/Downloads/summer/L2S/netbsd-src/bui"\
"ld/obj/tooldir.Darwin-22.1.0-x86_64/include -I/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/include "
S["GMPLIBS"]="-L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/o"\
"bj/tooldir.Darwin-22.1.0-x86_64/lib -L/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/lib -lmpc -lmpfr -lgmp"
S["target_cpu_default"]="m68020"
S["d_target_objs"]=" netbsd-d.o"
S["fortran_target_objs"]=""
S["cxx_target_objs"]=" default-c.o"
S["c_target_objs"]=" default-c.o"
S["use_gcc_stdint"]="wrap"
S["xm_defines"]=""
S["xm_include_list"]=" auto-host.h ansidecl.h"
S["xm_file_list"]=" auto-host.h $(srcdir)/../include/ansidecl.h"
S["tm_d_include_list"]="options.h insn-constants.h config/m68k/m68k.h config/m68k/m68k-protos.h defaults.h"
S["tm_d_file_list"]=" $(srcdir)/config/m68k/m68k.h $(srcdir)/config/m68k/m68k-protos.h $(srcdir)/defaults.h"
S["tm_p_include_list"]=" config/m68k/m68k-protos.h config/netbsd-protos.h tm-preds.h"
S["tm_p_file_list"]=" $(srcdir)/config/m68k/m68k-protos.h $(srcdir)/config/netbsd-protos.h tm-preds.h"
S["tm_defines"]=" LIBC_GLIBC=1 LIBC_UCLIBC=2 LIBC_BIONIC=3 LIBC_MUSL=4 MOTOROLA=1 CHAR_FAST8=1 SHORT_FAST16=1"
S["tm_include_list"]="options.h insn-constants.h config/m68k/m68k.h config/dbxelf.h config/elfos.h config/netbsd.h config/netbsd-stdint.h config/netbsd-elf.h config/m68k/"\
"netbsd-elf.h config/initfini-array.h defaults.h"
S["tm_file_list"]="options.h $(srcdir)/config/m68k/m68k.h $(srcdir)/config/dbxelf.h $(srcdir)/config/elfos.h $(srcdir)/config/netbsd.h $(srcdir)/config/netbsd-stdint.h"\
" $(srcdir)/config/netbsd-elf.h $(srcdir)/config/m68k/netbsd-elf.h $(srcdir)/config/initfini-array.h $(srcdir)/defaults.h"
S["common_out_object_file"]="m68k-common.o"
S["common_out_file"]="m68k/m68k-common.c"
S["out_object_file"]="m68k.o"
S["out_file"]="m68k/m68k.c"
S["objc_boehm_gc"]=""
S["md_file"]="m68k/m68k.md"
S["local_prefix"]="/usr/local"
S["lang_tree_files"]=" /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/cp/cp-tree.def /Users/sidqian/Downloads/summer/L2S/ne"\
"tbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/d/d-tree.def /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gc"\
"c.old/dist/gcc/objc/objc-tree.def"
S["lang_specs_files"]=" /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/cp/lang-specs.h /Users/sidqian/Downloads/summer/L2S/n"\
"etbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/lto/lang-specs.h /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gp"\
"l3/gcc.old/dist/gcc/objc/lang-specs.h"
S["lang_opt_files"]=" /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/brig/lang.opt /Users/sidqian/Downloads/summer/L2S/net"\
"bsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/d/lang.opt /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.o"\
"ld/dist/gcc/fortran/lang.opt /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc/lto/lang.opt"
S["install"]=""
S["out_host_hook_obj"]="host-darwin.o host-i386-darwin.o"
S["host_xm_defines"]=""
S["host_xm_include_list"]=" auto-host.h ansidecl.h"
S["host_xm_file_list"]=" auto-host.h $(srcdir)/../include/ansidecl.h"
S["host_exeext"]=""
S["gcc_gxx_include_dir_add_sysroot"]="0"
S["gcc_gxx_include_dir"]="$(libsubdir)/$(libsubdir_to_prefix)m68k--netbsdelf/include/c++/$(version)"
S["gcc_config_arguments"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/configure --target=m68k--netbsdelf --enable-long-long --en"\
"able-threads --with-bugurl=http://www.NetBSD.org/support/send-pr.html --with-pkgversion='NetBSD nb1 20220722' --with-system-zlib --without-isl --ena"\
"ble-__cxa_atexit --enable-libstdcxx-time=rt --enable-libstdcxx-threads --with-diagnostics-color=auto-if-env --with-default-libstdcxx-abi=new --with-"\
"sysroot=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/destdir.soft68k --with-mpc=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj"\
"/tooldir.Darwin-22.1.0-x86_64 --with-mpfr=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64 --with-gmp=/Users/si"\
"dqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64 --disable-nls --disable-multilib --program-transform-name='s,^,m68k--ne"\
"tbsdelf-,' --enable-languages='c c++ objc' --prefix=/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64"
S["float_h_file"]=""
S["extra_programs"]=""
S["extra_objs"]="  netbsd.o"
S["extra_headers_list"]=" $(srcdir)/config/m68k/math-68881.h $(srcdir)/ginclude/tgmath.h"
S["user_headers_inc_next_post"]=""
S["user_headers_inc_next_pre"]=""
S["extra_gcc_objs"]=" "
S["TM_MULTILIB_EXCEPTIONS_CONFIG"]=""
S["TM_MULTILIB_CONFIG"]=""
S["TM_ENDIAN_CONFIG"]=""
S["tmake_file"]=" $(srcdir)/config/m68k/t-m68k $(srcdir)/config/m68k/t-opts $(srcdir)/config/t-netbsd $(srcdir)/config/t-slibgcc"
S["xmake_file"]=" $(srcdir)/config/x-darwin $(srcdir)/config/i386/x-darwin"
S["cpp_install_dir"]=""
S["selftest_languages"]=" selftest-c selftest-c++ selftest-lto selftest-objc"
S["check_languages"]=" check-c check-c++ check-lto check-objc"
S["build_file_translate"]=""
S["build_xm_defines"]=""
S["build_xm_include_list"]=" auto-host.h ansidecl.h"
S["build_xm_file_list"]=" auto-host.h $(srcdir)/../include/ansidecl.h"
S["build_install_headers_dir"]="install-headers-tar"
S["build_exeext"]=""
S["all_selected_languages"]=" c c++ lto objc"
S["all_languages"]=" brig c c++ d fortran jit lto objc obj-c++"
S["all_lang_makefrags"]=" $(srcdir)/brig/Make-lang.in $(srcdir)/c/Make-lang.in $(srcdir)/cp/Make-lang.in $(srcdir)/d/Make-lang.in $(srcdir)/fortran/Make-lang.in $(srcdir)/ji"\
"t/Make-lang.in $(srcdir)/lto/Make-lang.in $(srcdir)/objc/Make-lang.in $(srcdir)/objcp/Make-lang.in"
S["all_lang_configurefrags"]=" $(srcdir)/brig/config-lang.in $(srcdir)/c/config-lang.in $(srcdir)/cp/config-lang.in $(srcdir)/d/config-lang.in $(srcdir)/fortran/config-lang.in $("\
"srcdir)/jit/config-lang.in $(srcdir)/lto/config-lang.in $(srcdir)/objc/config-lang.in $(srcdir)/objcp/config-lang.in"
S["all_gtfiles"]=" [brig] $(srcdir)/brig/brig-lang.c $(srcdir)/brig/brig-c.h [c] $(srcdir)/c/c-lang.c $(srcdir)/c/c-tree.h $(srcdir)/c/c-decl.c $(srcdir)/c-family/c-c"\
"ommon.c $(srcdir)/c-family/c-common.h $(srcdir)/c-family/c-objc.h $(srcdir)/c-family/c-cppbuiltin.c $(srcdir)/c-family/c-pragma.h $(srcdir)/c-family"\
"/c-pragma.c $(srcdir)/c-family/c-format.c $(srcdir)/c/c-objc-common.c $(srcdir)/c/c-parser.h $(srcdir)/c/c-parser.c $(srcdir)/c/c-lang.h [cp] $(srcd"\
"ir)/cp/name-lookup.h $(srcdir)/cp/cp-tree.h $(srcdir)/c-family/c-common.h $(srcdir)/c-family/c-objc.h $(srcdir)/c-family/c-pragma.h $(srcdir)/cp/dec"\
"l.h $(srcdir)/cp/parser.h $(srcdir)/c-family/c-common.c $(srcdir)/c-family/c-format.c $(srcdir)/c-family/c-cppbuiltin.c $(srcdir)/c-family/c-pragma."\
"c $(srcdir)/cp/call.c $(srcdir)/cp/class.c $(srcdir)/cp/constexpr.c $(srcdir)/cp/constraint.cc $(srcdir)/cp/coroutines.cc $(srcdir)/cp/cp-gimplify.c"\
" $(srcdir)/cp/cp-lang.c $(srcdir)/cp/cp-objcp-common.c $(srcdir)/cp/decl.c $(srcdir)/cp/decl2.c $(srcdir)/cp/except.c $(srcdir)/cp/friend.c $(srcdir"\
")/cp/init.c $(srcdir)/cp/lambda.c $(srcdir)/cp/lex.c $(srcdir)/cp/logic.cc $(srcdir)/cp/mangle.c $(srcdir)/cp/method.c $(srcdir)/cp/name-lookup.c $("\
"srcdir)/cp/parser.c $(srcdir)/cp/pt.c $(srcdir)/cp/rtti.c $(srcdir)/cp/semantics.c $(srcdir)/cp/tree.c $(srcdir)/cp/typeck2.c $(srcdir)/cp/vtable-cl"\
"ass-hierarchy.c  [d] $(srcdir)/d/d-tree.h $(srcdir)/d/d-builtins.cc $(srcdir)/d/d-lang.cc $(srcdir)/d/modules.cc $(srcdir)/d/typeinfo.cc [fortran] $"\
"(srcdir)/fortran/f95-lang.c $(srcdir)/fortran/trans-decl.c $(srcdir)/fortran/trans-intrinsic.c $(srcdir)/fortran/trans-io.c $(srcdir)/fortran/trans-"\
"stmt.c $(srcdir)/fortran/trans-types.c $(srcdir)/fortran/trans-types.h $(srcdir)/fortran/trans.h $(srcdir)/fortran/trans-const.h [jit] $(srcdir)/jit"\
"/dummy-frontend.c [lto] $(srcdir)/lto/lto-tree.h $(srcdir)/lto/lto-lang.c $(srcdir)/lto/lto.c $(srcdir)/lto/lto.h $(srcdir)/lto/lto-common.h $(srcdi"\
"r)/lto/lto-common.c $(srcdir)/lto/lto-dump.c [objc] $(srcdir)/objc/objc-map.h $(srcdir)/c-family/c-objc.h $(srcdir)/objc/objc-act.h $(srcdir)/objc/o"\
"bjc-act.c $(srcdir)/objc/objc-runtime-shared-support.c $(srcdir)/objc/objc-gnu-runtime-abi-01.c $(srcdir)/objc/objc-next-runtime-abi-01.c $(srcdir)/"\
"objc/objc-next-runtime-abi-02.c $(srcdir)/c/c-parser.h $(srcdir)/c/c-parser.c $(srcdir)/c/c-tree.h $(srcdir)/c/c-decl.c $(srcdir)/c/c-lang.h $(srcdi"\
"r)/c/c-objc-common.c $(srcdir)/c-family/c-common.c $(srcdir)/c-family/c-common.h $(srcdir)/c-family/c-cppbuiltin.c $(srcdir)/c-family/c-pragma.h $(s"\
"rcdir)/c-family/c-pragma.c $(srcdir)/c-family/c-format.c [objcp] $(srcdir)/cp/name-lookup.h $(srcdir)/cp/cp-tree.h $(srcdir)/c-family/c-common.h $(s"\
"rcdir)/c-family/c-objc.h $(srcdir)/c-family/c-pragma.h $(srcdir)/cp/decl.h $(srcdir)/cp/parser.h $(srcdir)/c-family/c-common.c $(srcdir)/c-family/c-"\
"format.c $(srcdir)/c-family/c-cppbuiltin.c $(srcdir)/c-family/c-pragma.c $(srcdir)/cp/call.c $(srcdir)/cp/class.c $(srcdir)/cp/constexpr.c $(srcdir)"\
"/cp/constraint.cc $(srcdir)/cp/coroutines.cc $(srcdir)/cp/cp-gimplify.c $(srcdir)/objcp/objcp-lang.c $(srcdir)/cp/cp-objcp-common.c $(srcdir)/cp/dec"\
"l.c $(srcdir)/cp/decl2.c $(srcdir)/cp/except.c $(srcdir)/cp/friend.c $(srcdir)/cp/init.c $(srcdir)/cp/lambda.c $(srcdir)/cp/lex.c $(srcdir)/cp/logic"\
".cc $(srcdir)/cp/mangle.c $(srcdir)/cp/method.c $(srcdir)/cp/name-lookup.c $(srcdir)/cp/parser.c $(srcdir)/cp/pt.c $(srcdir)/cp/rtti.c $(srcdir)/cp/"\
"semantics.c $(srcdir)/cp/tree.c $(srcdir)/cp/typeck2.c $(srcdir)/cp/vtable-class-hierarchy.c $(srcdir)/objc/objc-act.h $(srcdir)/objc/objc-map.h $(s"\
"rcdir)/objc/objc-act.c $(srcdir)/objc/objc-gnu-runtime-abi-01.c $(srcdir)/objc/objc-next-runtime-abi-01.c $(srcdir)/objc/objc-next-runtime-abi-02.c "\
"$(srcdir)/objc/objc-runtime-shared-support.c "
S["all_compilers"]=" brig1$(exeext) cc1$(exeext) cc1plus$(exeext) d21$(exeext) f951$(exeext)  lto1$(exeext) cc1obj$(exeext) cc1objplus$(exeext)"
S["srcdir"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/gcc/../../external/gpl3/gcc.old/dist/gcc"
S["subdirs"]=" brig c cp d fortran jit lto objc objcp"
S["dollar"]=""
S["gcc_tooldir"]="$(libsubdir)/$(libsubdir_to_prefix)$(target_noncanonical)"
S["enable_lto"]="yes"
S["DO_LINK_MUTEX"]="false"
S["MAINT"]="#"
S["zlibinc"]=""
S["zlibdir"]=""
S["HOST_LIBS"]=""
S["enable_default_ssp"]="no"
S["thin_archive_support"]="no"
S["ld_soname_option"]="-soname"
S["ld_version_script_option"]="--version-script"
S["libgcc_visibility"]="yes"
S["ORIGINAL_DSYMUTIL_FOR_TARGET"]=""
S["gcc_cv_dsymutil"]=""
S["gcc_cv_otool"]=""
S["gcc_cv_readelf"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/readelf"
S["gcc_cv_objdump"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/objdump"
S["ORIGINAL_NM_FOR_TARGET"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/nm"
S["gcc_cv_nm"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/nm"
S["ORIGINAL_LD_GOLD_FOR_TARGET"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/ld.gold"
S["ORIGINAL_LD_BFD_FOR_TARGET"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/ld.bfd"
S["ORIGINAL_LD_FOR_TARGET"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/ld"
S["ORIGINAL_PLUGIN_LD_FOR_TARGET"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/ld"
S["gcc_cv_ld"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/ld"
S["ORIGINAL_AS_FOR_TARGET"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/as"
S["gcc_cv_as"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/m68k--netbsdelf/bin/as"
S["enable_fast_install"]="needless"
S["objdir"]=".libs"
S["OTOOL64"]=":"
S["OTOOL"]="otool"
S["LIPO"]="lipo"
S["NMEDIT"]="nmedit"
S["DSYMUTIL"]="dsymutil"
S["STRIP"]="strip"
S["OBJDUMP"]="objdump"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["LD"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld"
S["FGREP"]="/usr/bin/grep -F"
S["SED"]="/usr/bin/sed"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["collect2"]="collect2$(exeext)"
S["STMP_FIXINC"]="stmp-fixinc"
S["BUILD_LDFLAGS"]="$(LDFLAGS)"
S["BUILD_CXXFLAGS"]="$(ALL_CXXFLAGS)"
S["BUILD_CFLAGS"]="$(ALL_CFLAGS)"
S["CXX_FOR_BUILD"]="$(CXX)"
S["CC_FOR_BUILD"]="$(CC)"
S["inhibit_libc"]="false"
S["BUILD_SYSTEM_HEADER_DIR"]="$(CROSS_SYSTEM_HEADER_DIR)"
S["SYSTEM_HEADER_DIR"]="$(CROSS_SYSTEM_HEADER_DIR)"
S["ALL"]="all.cross"
S["CROSS"]="-DCROSS_DIRECTORY_STRUCTURE"
S["CATOBJEXT"]=""
S["GENCAT"]=""
S["INSTOBJEXT"]=""
S["DATADIRNAME"]=""
S["CATALOGS"]=""
S["POSUB"]=""
S["GMSGFMT"]="/usr/local/bin/msgfmt"
S["XGETTEXT"]="/usr/local/bin/xgettext"
S["INCINTL"]=""
S["LIBINTL_DEP"]=""
S["LIBINTL"]=""
S["USE_NLS"]="no"
S["get_gcc_base_ver"]="cat"
S["HAVE_AUTO_BUILD"]="# "
S["extra_opt_files"]=" $(srcdir)/config/m68k/m68k-tables.opt $(srcdir)/config/m68k/m68k.opt $(srcdir)/config/netbsd.opt $(srcdir)/config/netbsd-elf.opt"
S["extra_modes_file"]="$(srcdir)/config/m68k/m68k-modes.def"
S["NATIVE_SYSTEM_HEADER_DIR"]="/usr/include"
S["objext"]="o"
S["manext"]=".1"
S["LIBICONV_DEP"]=""
S["LTLIBICONV"]="-liconv"
S["LIBICONV"]="-liconv"
S["ZSTD_LIB"]="-lzstd "
S["ZSTD_INCLUDE"]=""
S["DL_LIB"]=""
S["LDEXP_LIB"]=""
S["EXTRA_GCC_LIBS"]=""
S["GNAT_LIBEXC"]=""
S["COLLECT2_LIBS"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["DEPDIR"]=".deps"
S["am__leading_dot"]="."
S["doc_build_sys"]="texinfo"
S["AR"]="ar"
S["NM"]="nm"
S["BISON"]="true"
S["FLEX"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nblex"
S["GENERATED_MANPAGES"]="generated-manpages"
S["BUILD_INFO"]="info"
S["MAKEINFO"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbmakeinfo"
S["have_mktemp_command"]="yes"
S["make_compare_target"]="gnucompare"
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["INSTALL"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/m68k--netbsdelf-install -c  -r"
S["ranlib_flags"]=""
S["RANLIB"]="ranlib"
S["LN"]="ln"
S["LN_S"]="ln -s"
S["AWK"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbawk"
S["SET_MAKE"]=""
S["omp_device_property_deps"]=""
S["omp_device_properties"]=""
S["accel_dir_suffix"]=""
S["real_target_noncanonical"]="m68k--netbsdelf"
S["enable_as_accelerator"]=""
S["gnat_install_lib"]=""
S["REPORT_BUGS_TEXI"]="@uref{http://www.NetBSD.org/support/send-pr.html}"
S["REPORT_BUGS_TO"]="<http://www.NetBSD.org/support/send-pr.html>"
S["PKGVERSION"]="(NetBSD nb1 20220722) "
S["CONFIGURE_SPECS"]=""
S["enable_gcov"]="yes"
S["enable_shared"]="yes"
S["enable_fixed_point"]="no"
S["enable_decimal_float"]="dpd"
S["with_float"]=""
S["with_cpu"]="m68020"
S["enable_multiarch"]="auto"
S["enable_multilib"]="no"
S["coverage_flags"]=""
S["valgrind_command"]=""
S["valgrind_path_defines"]=""
S["valgrind_path"]=""
S["TREECHECKING"]=""
S["nocommon_flag"]=""
S["noexception_flags"]="-fno-exceptions -fno-rtti -fasynchronous-unwind-tables"
S["warn_cxxflags"]="$(GCC_WARN_CXXFLAGS)"
S["warn_cflags"]="$(GCC_WARN_CFLAGS)"
S["c_strict_warn"]="-Wold-style-definition -Wc++-compat"
S["strict_warn"]="-Wmissing-format-attribute -Woverloaded-virtual -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings"
S["c_loose_warn"]="-Wstrict-prototypes -Wmissing-prototypes -Wno-error=format-diag"
S["loose_warn"]="-W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual -Wno-error=format-diag"
S["aliasing_flags"]="-fno-strict-aliasing"
S["CPP"]="cc -E"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CXXCPP"]="c++ -E"
S["PICFLAG_FOR_TARGET"]="-fPIC"
S["GNATMAKE"]="no"
S["GNATBIND"]="no"
S["ac_ct_CXX"]=""
S["CXXFLAGS"]=" "
S["CXX"]="c++"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]=""
S["CPPFLAGS"]="-DNETBSD_TOOLS -DTARGET_SYSTEM_ROOT=0  -DTARGET_SYSTEM_ROOT_RELOCATABLE"
S["LDFLAGS"]="  "
S["CFLAGS"]="-O2 -no-cpp-precomp "
S["CC"]="cc"
S["GENINSRC"]="#"
S["CROSS_SYSTEM_HEADER_DIR"]="$(TARGET_SYSTEM_ROOT)$${sysroot_headers_suffix}$(NATIVE_SYSTEM_HEADER_DIR)"
S["TARGET_SYSTEM_ROOT_DEFINE"]="-DTARGET_SYSTEM_ROOT=\\\"$(TARGET_SYSTEM_ROOT)\\\""
S["TARGET_SYSTEM_ROOT"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/destdir.soft68k"
S["SYSROOT_CFLAGS_FOR_TARGET"]=""
S["target_subdir"]="m68k--netbsdelf"
S["host_subdir"]="."
S["build_subdir"]="build-x86_64-apple-darwin22.1.0"
S["build_libsubdir"]="build-x86_64-apple-darwin22.1.0"
S["target_noncanonical"]="m68k--netbsdelf"
S["host_noncanonical"]="x86_64-apple-darwin22.1.0"
S["target_os"]="netbsdelf"
S["target_vendor"]=""
S["target_cpu"]="m68k"
S["target"]="m68k--netbsdelf"
S["host_os"]="darwin22.1.0"
S["host_vendor"]="apple"
S["host_cpu"]="x86_64"
S["host"]="x86_64-apple-darwin22.1.0"
S["build_os"]="darwin22.1.0"
S["build_vendor"]="apple"
S["build_cpu"]="x86_64"
S["build"]="x86_64-apple-darwin22.1.0"
S["target_alias"]="m68k--netbsdelf"
S["host_alias"]="x86_64-apple-darwin22.1.0"
S["build_alias"]="x86_64-apple-darwin22.1.0"
S["LIBS"]=""
S["ECHO_T"]=""
S["ECHO_N"]=""
S["ECHO_C"]="\\c"
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,^,m68k--netbsdelf-,"
S["prefix"]="/Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]=""
S["PACKAGE_STRING"]=""
S["PACKAGE_VERSION"]=""
S["PACKAGE_TARNAME"]=""
S["PACKAGE_NAME"]=""
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""
  $ac_cs_awk_pipe_init
}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }
  if (nfields == 3 && !substed) {
    key = field[2]
    if (F[key] != "" && line ~ /^[	 ]*@.*@[	 ]*$/) {
      $ac_cs_awk_read_file
      next
    }
  }
  print line
}
$ac_cs_awk_pipe_fini
_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"\""
D["PACKAGE_TARNAME"]=" \"\""
D["PACKAGE_VERSION"]=" \"\""
D["PACKAGE_STRING"]=" \"\""
D["PACKAGE_BUGREPORT"]=" \"\""
D["PACKAGE_URL"]=" \"\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["SIZEOF_VOID_P"]=" 8"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["HAVE_LONG_LONG"]=" 1"
D["SIZEOF_LONG_LONG"]=" 8"
D["HAVE_UNSIGNED_LONG_LONG_INT"]=" 1"
D["HAVE_LONG_LONG_INT"]=" 1"
D["HAVE_INTMAX_T"]=" 1"
D["HAVE_INTPTR_T"]=" 1"
D["HAVE_UINTMAX_T"]=" 1"
D["HAVE_UINTPTR_T"]=" 1"
D["HAVE_SWAP_IN_UTILITY"]=" 1"
D["CHECKING_P"]=" 0"
D["ENABLE_EXTRA_CHECKING"]=" 0"
D["ENABLE_ASSERT_CHECKING"]=" 1"
D["ENABLE_RUNTIME_CHECKING"]=" 1"
D["GATHER_STATISTICS"]=" 0"
D["DEFAULT_STK_CLASH_GUARD_SIZE"]=" 0"
D["ENABLE_DECIMAL_FLOAT"]=" 0"
D["ENABLE_DECIMAL_BID_FORMAT"]=" 0"
D["ENABLE_FIXED_POINT"]=" 0"
D["ENABLE_VTABLE_VERIFY"]=" 0"
D["ENABLE_ANALYZER"]=" 1"
D["DOCUMENTATION_ROOT_URL"]=" \"https://gcc.gnu.org/onlinedocs/\""
D["CHANGES_ROOT_URL"]=" \"https://gcc.gnu.org/\""
D["OFFLOAD_TARGETS"]=" \"\""
D["ENABLE_OFFLOADING"]=" 0"
D["STDC_HEADERS"]=" 1"
D["TIME_WITH_SYS_TIME"]=" 1"
D["STRING_WITH_STRINGS"]=" 1"
D["HAVE_SYS_WAIT_H"]=" 1"
D["HAVE_LIMITS_H"]=" 1"
D["HAVE_STDDEF_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_TIME_H"]=" 1"
D["HAVE_ICONV_H"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_FTW_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_SYS_FILE_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_TIMES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_LANGINFO_H"]=" 1"
D["HAVE_LOCALE_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["HAVE_UNORDERED_MAP"]=" 1"
D["HAVE_EXT_HASH_MAP"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_ZSTD_H"]=" 1"
D["HAVE_TIMES"]=" 1"
D["HAVE_CLOCK"]=" 1"
D["HAVE_KILL"]=" 1"
D["HAVE_GETRLIMIT"]=" 1"
D["HAVE_SETRLIMIT"]=" 1"
D["HAVE_POPEN"]=" 1"
D["HAVE_SYSCONF"]=" 1"
D["HAVE_STRSIGNAL"]=" 1"
D["HAVE_GETRUSAGE"]=" 1"
D["HAVE_NL_LANGINFO"]=" 1"
D["HAVE_GETTIMEOFDAY"]=" 1"
D["HAVE_MBSTOWCS"]=" 1"
D["HAVE_WCSWIDTH"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_SETLOCALE"]=" 1"
D["HAVE_CLEARERR_UNLOCKED"]=" 1"
D["HAVE_FEOF_UNLOCKED"]=" 1"
D["HAVE_FERROR_UNLOCKED"]=" 1"
D["HAVE_FILENO_UNLOCKED"]=" 1"
D["HAVE_GETCHAR_UNLOCKED"]=" 1"
D["HAVE_GETC_UNLOCKED"]=" 1"
D["HAVE_PUTCHAR_UNLOCKED"]=" 1"
D["HAVE_PUTC_UNLOCKED"]=" 1"
D["HAVE_MADVISE"]=" 1"
D["HAVE_WORKING_MBSTOWCS"]=" 1"
D["HAVE_MMAP_FILE"]=" 1"
D["HAVE_MMAP_ANON"]=" 1"
D["HAVE_FORK"]=" 1"
D["HAVE_VFORK"]=" 1"
D["HAVE_WORKING_VFORK"]=" 1"
D["HAVE_WORKING_FORK"]=" 1"
D["HAVE_ICONV"]=" 1"
D["ICONV_CONST"]=" "
D["HAVE_LC_MESSAGES"]=" 1"
D["HAVE_LANGINFO_CODESET"]=" 1"
D["HAVE_DECL_BASENAME"]=" 0"
D["HAVE_DECL_STRSTR"]=" 1"
D["HAVE_DECL_GETENV"]=" 1"
D["HAVE_DECL_ATOL"]=" 1"
D["HAVE_DECL_ATOLL"]=" 1"
D["HAVE_DECL_ASPRINTF"]=" 1"
D["HAVE_DECL_SBRK"]=" 1"
D["HAVE_DECL_ABORT"]=" 1"
D["HAVE_DECL_ATOF"]=" 1"
D["HAVE_DECL_GETCWD"]=" 1"
D["HAVE_DECL_GETWD"]=" 1"
D["HAVE_DECL_MADVISE"]=" 1"
D["HAVE_DECL_STPCPY"]=" 1"
D["HAVE_DECL_STRNLEN"]=" 1"
D["HAVE_DECL_STRSIGNAL"]=" 1"
D["HAVE_DECL_STRVERSCMP"]=" 0"
D["HAVE_DECL_STRTOL"]=" 1"
D["HAVE_DECL_STRTOUL"]=" 1"
D["HAVE_DECL_STRTOLL"]=" 1"
D["HAVE_DECL_STRTOULL"]=" 1"
D["HAVE_DECL_SETENV"]=" 1"
D["HAVE_DECL_UNSETENV"]=" 1"
D["HAVE_DECL_ERRNO"]=" 1"
D["HAVE_DECL_SNPRINTF"]=" 1"
D["HAVE_DECL_VSNPRINTF"]=" 1"
D["HAVE_DECL_VASPRINTF"]=" 1"
D["HAVE_DECL_MALLOC"]=" 1"
D["HAVE_DECL_REALLOC"]=" 1"
D["HAVE_DECL_CALLOC"]=" 1"
D["HAVE_DECL_FREE"]=" 1"
D["HAVE_DECL_GETOPT"]=" 1"
D["HAVE_DECL_CLOCK"]=" 1"
D["HAVE_DECL_GETPAGESIZE"]=" 1"
D["HAVE_DECL_FFS"]=" 1"
D["HAVE_DECL_CLEARERR_UNLOCKED"]=" 1"
D["HAVE_DECL_FEOF_UNLOCKED"]=" 1"
D["HAVE_DECL_FERROR_UNLOCKED"]=" 1"
D["HAVE_DECL_FFLUSH_UNLOCKED"]=" 0"
D["HAVE_DECL_FGETC_UNLOCKED"]=" 0"
D["HAVE_DECL_FGETS_UNLOCKED"]=" 0"
D["HAVE_DECL_FILENO_UNLOCKED"]=" 1"
D["HAVE_DECL_FPRINTF_UNLOCKED"]=" 0"
D["HAVE_DECL_FPUTC_UNLOCKED"]=" 0"
D["HAVE_DECL_FPUTS_UNLOCKED"]=" 0"
D["HAVE_DECL_FREAD_UNLOCKED"]=" 0"
D["HAVE_DECL_FWRITE_UNLOCKED"]=" 0"
D["HAVE_DECL_GETCHAR_UNLOCKED"]=" 1"
D["HAVE_DECL_GETC_UNLOCKED"]=" 1"
D["HAVE_DECL_PUTCHAR_UNLOCKED"]=" 1"
D["HAVE_DECL_PUTC_UNLOCKED"]=" 1"
D["HAVE_DECL_GETRLIMIT"]=" 1"
D["HAVE_DECL_SETRLIMIT"]=" 1"
D["HAVE_DECL_GETRUSAGE"]=" 1"
D["HAVE_DECL_MALLINFO"]=" 0"
D["HAVE_DECL_LDGETNAME"]=" 0"
D["HAVE_DECL_TIMES"]=" 1"
D["HAVE_DECL_SIGALTSTACK"]=" 1"
D["HAVE_STRUCT_TMS"]=" 1"
D["HAVE_CLOCK_T"]=" 1"
D["HOST_HAS_F_SETLKW"]=" 1"
D["HAVE_GNU_LD"]=" 1"
D["HAVE_GNU_AS"]=" 1"
D["DEFAULT_USE_CXA_ATEXIT"]=" 2"
D["EXTRA_MODES_FILE"]=" \"config/m68k/m68k-modes.def\""
D["LTOPLUGINSONAME"]=" \"liblto_plugin.so\""
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["PLUGIN_LD_SUFFIX"]=" \"ld\""
D["HAVE_GAS_BALIGN_AND_P2ALIGN"]=" 1"
D["HAVE_GAS_MAX_SKIP_P2ALIGN"]=" 1"
D["HAVE_GAS_SUBSECTION_ORDERING"]=" 1"
D["HAVE_GAS_WEAK"]=" 1"
D["HAVE_GAS_WEAKREF"]=" 1"
D["HAVE_GNU_INDIRECT_FUNCTION"]=" 0"
D["HAVE_GAS_HIDDEN"]=" 1"
D["HAVE_LD_RO_RW_SECTION_MIXING"]=" 1"
D["HAVE_INITFINI_ARRAY_SUPPORT"]=" 0"
D["HAVE_AS_LEB128"]=" 1"
D["HAVE_GAS_CFI_DIRECTIVE"]=" 1"
D["HAVE_GAS_CFI_PERSONALITY_DIRECTIVE"]=" 1"
D["HAVE_GAS_CFI_SECTIONS_DIRECTIVE"]=" 1"
D["HAVE_GAS_SECTION_EXCLUDE"]=" 1"
D["HAVE_GAS_SHF_MERGE"]=" 1"
D["HAVE_LD_ALIGNED_SHF_MERGE"]=" 1"
D["HAVE_AS_STABS_DIRECTIVE"]=" 1"
D["HAVE_COMDAT_GROUP"]=" 1"
D["HAVE_GAS_LOC_STMT"]=" 1"
D["HAVE_GAS_DISCRIMINATOR"]=" 1"
D["HAVE_AS_TLS"]=" 1"
D["HAVE_LD_STATIC_DYNAMIC"]=" 1"
D["LD_STATIC_OPTION"]=" \"-Bstatic\""
D["LD_DYNAMIC_OPTION"]=" \"-Bdynamic\""
D["HAVE_LD_DEMANGLE"]=" 1"
D["HAVE_LTO_PLUGIN"]=" 2"
D["HAVE_AS_DWARF2_DEBUG_LINE"]=" 1"
D["HAVE_AS_DWARF2_DEBUG_VIEW"]=" 1"
D["HAVE_AS_GDWARF2_DEBUG_FLAG"]=" 1"
D["HAVE_AS_GSTABS_DEBUG_FLAG"]=" 1"
D["HAVE_AS_DEBUG_PREFIX_MAP"]=" 1"
D["HAVE_AS_COMPRESS_DEBUG"]=" 2"
D["AS_COMPRESS_DEBUG_OPTION"]=" \"--compress-debug-sections\""
D["AS_NO_COMPRESS_DEBUG_OPTION"]=" \"--nocompress-debug-sections\""
D["TARGET_GLIBC_MAJOR"]=" 0"
D["TARGET_GLIBC_MINOR"]=" 0"
D["HAVE_AS_LINE_ZERO"]=" 1"
D["HAVE_LD_EH_FRAME_HDR"]=" 1"
D["HAVE_LD_EH_FRAME_CIEV3"]=" 1"
D["HAVE_LD_PIE"]=" 1"
D["HAVE_LD_PIE_COPYRELOC"]=" 0"
D["HAVE_LD_EH_GC_SECTIONS"]=" 1"
D["HAVE_LD_COMPRESS_DEBUG"]=" 3"
D["LD_COMPRESS_DEBUG_OPTION"]=" \"--compress-debug-sections\""
D["HAVE_LD_AS_NEEDED"]=" 1"
D["LD_AS_NEEDED_OPTION"]=" \"--push-state --as-needed\""
D["LD_NO_AS_NEEDED_OPTION"]=" \"--pop-state\""
D["HAVE_LD_CLEARCAP"]=" 1"
D["HAVE_LD_BUILDID"]=" 1"
D["HAVE_LD_SYSROOT"]=" 1"
D["TARGET_LIBC_PROVIDES_SSP"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_LTO"]=" 1"
D["ENABLE_PLUGIN"]=" 1"
D["ENABLE_LIBQUADMATH_SUPPORT"]=" 1"
D["DIAGNOSTICS_COLOR_DEFAULT"]=" -1"
D["DIAGNOSTICS_URLS_DEFAULT"]=" DIAGNOSTICS_URL_AUTO"
D["HAVE_LD_PUSHPOPSTATE_SUPPORT"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" |
if $ac_cs_awk_getline; then
  $AWK -f "$ac_tmp/subs.awk"
else
  $AWK -f "$ac_tmp/subs.awk" | $SHELL
fi \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
 ;;
  :L)
  #
  # CONFIG_LINK
  #

  if test "$ac_source" = "$ac_file" && test "$srcdir" = '.'; then
    :
  else
    # Prefer the file from the source tree if names are identical.
    if test "$ac_source" = "$ac_file" || test ! -r "$ac_source"; then
      ac_source=$srcdir/$ac_source
    fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file" >&5
$as_echo "$as_me: linking $ac_source to $ac_file" >&6;}

    if test ! -r "$ac_source"; then
      as_fn_error $? "$ac_source: file not found" "$LINENO" 5
    fi
    rm -f "$ac_file"

    # Try a relative symlink, then a hard link, then a copy.
    case $ac_source in
    [\\/$]* | ?:[\\/]* ) ac_rel_source=$ac_source ;;
	*) ac_rel_source=$ac_top_build_prefix$ac_source ;;
    esac
    ln -s "$ac_rel_source" "$ac_file" 2>/dev/null ||
      ln "$ac_source" "$ac_file" 2>/dev/null ||
      cp -p "$ac_source" "$ac_file" ||
      as_fn_error $? "cannot link or copy $ac_source to $ac_file" "$LINENO" 5
  fi
 ;;
  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depdir":C) $SHELL $ac_aux_dir/mkinstalldirs $DEPDIR ;;
    "gccdepdir":C)
  ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs build/$DEPDIR
  for lang in $subdirs c-family common analyzer
  do
      ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs $lang/$DEPDIR
  done ;;
    "as":F) chmod +x as ;;
    "collect-ld":F) chmod +x collect-ld ;;
    "nm":F) chmod +x nm ;;
    "dsymutil":F) chmod +x dsymutil ;;
    "default":C)
case ${CONFIG_HEADERS} in
  *auto-host.h:config.in*)
  echo > cstamp-h ;;
esac
# Make sure all the subdirs exist.
for d in $subdirs doc build common c-family
do
    test -d $d || mkdir $d
done
 ;;

  esac
done # for ac_tag


as_fn_exit 0
