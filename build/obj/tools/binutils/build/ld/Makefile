# Makefile.in generated by automake 1.15.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#   Copyright (C) 2012-2022 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#


VPATH = /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/binutils/../../external/gpl3/binutils/dist/ld
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ld
pkgincludedir = $(includedir)/ld
pkglibdir = $(libdir)/ld
pkglibexecdir = $(libexecdir)/ld
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin22.1.0
host_triplet = x86_64-apple-darwin22.1.0
target_triplet = m68k--netbsdelf
bin_PROGRAMS = ld-new$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../bfd/acinclude.m4 \
	$(top_srcdir)/../bfd/warning.m4 $(top_srcdir)/../config/acx.m4 \
	$(top_srcdir)/../config/bfd64.m4 \
	$(top_srcdir)/../config/depstand.m4 \
	$(top_srcdir)/../config/enable.m4 \
	$(top_srcdir)/../config/gettext-sister.m4 \
	$(top_srcdir)/../config/jobserver.m4 \
	$(top_srcdir)/../config/largefile.m4 \
	$(top_srcdir)/../config/lcmessage.m4 \
	$(top_srcdir)/../config/lead-dot.m4 \
	$(top_srcdir)/../config/nls.m4 \
	$(top_srcdir)/../config/override.m4 \
	$(top_srcdir)/../config/pkg.m4 \
	$(top_srcdir)/../config/plugins.m4 \
	$(top_srcdir)/../config/po.m4 \
	$(top_srcdir)/../config/progtest.m4 \
	$(top_srcdir)/../config/zlib.m4 $(top_srcdir)/../libtool.m4 \
	$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \
	$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \
	$(top_srcdir)/../bfd/version.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = po/Makefile.in
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(bfdplugindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(infodir)" "$(DESTDIR)$(man1dir)"
LTLIBRARIES = $(bfdplugin_LTLIBRARIES) $(noinst_LTLIBRARIES)
libdep_la_LIBADD =
am_libdep_la_OBJECTS = libdep_plugin.lo
libdep_la_OBJECTS = $(am_libdep_la_OBJECTS)
libldtestplug_la_LIBADD =
am_libldtestplug_la_OBJECTS = libldtestplug_la-testplug.lo
libldtestplug_la_OBJECTS = $(am_libldtestplug_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libldtestplug_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libldtestplug_la_CFLAGS) $(CFLAGS) \
	$(libldtestplug_la_LDFLAGS) $(LDFLAGS) -o $@
libldtestplug2_la_LIBADD =
am_libldtestplug2_la_OBJECTS = libldtestplug2_la-testplug2.lo
libldtestplug2_la_OBJECTS = $(am_libldtestplug2_la_OBJECTS)
libldtestplug2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libldtestplug2_la_CFLAGS) $(CFLAGS) \
	$(libldtestplug2_la_LDFLAGS) $(LDFLAGS) -o $@
libldtestplug3_la_LIBADD =
am_libldtestplug3_la_OBJECTS = libldtestplug3_la-testplug3.lo
libldtestplug3_la_OBJECTS = $(am_libldtestplug3_la_OBJECTS)
libldtestplug3_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libldtestplug3_la_CFLAGS) $(CFLAGS) \
	$(libldtestplug3_la_LDFLAGS) $(LDFLAGS) -o $@
libldtestplug4_la_LIBADD =
am_libldtestplug4_la_OBJECTS = libldtestplug4_la-testplug4.lo
libldtestplug4_la_OBJECTS = $(am_libldtestplug4_la_OBJECTS)
libldtestplug4_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libldtestplug4_la_CFLAGS) $(CFLAGS) \
	$(libldtestplug4_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_ld_new_OBJECTS = ldgram.$(OBJEXT) ldlex-wrapper.$(OBJEXT) \
	lexsup.$(OBJEXT) ldlang.$(OBJEXT) mri.$(OBJEXT) \
	ldctor.$(OBJEXT) ldmain.$(OBJEXT) ldwrite.$(OBJEXT) \
	ldexp.$(OBJEXT) ldemul.$(OBJEXT) ldver.$(OBJEXT) \
	ldmisc.$(OBJEXT) ldfile.$(OBJEXT) ldcref.$(OBJEXT) \
	plugin.$(OBJEXT) ldbuildid.$(OBJEXT)
ld_new_OBJECTS = $(am_ld_new_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = ../libctf/libctf.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
am__skiplex = test -f $@ ||
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/../ylwrap
am__skipyacc = test -f $@ ||
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(libdep_la_SOURCES) $(libldtestplug_la_SOURCES) \
	$(libldtestplug2_la_SOURCES) $(libldtestplug3_la_SOURCES) \
	$(libldtestplug4_la_SOURCES) $(ld_new_SOURCES) \
	$(EXTRA_ld_new_SOURCES)
AM_V_DVIPS = $(am__v_DVIPS_$(V))
am__v_DVIPS_ = $(am__v_DVIPS_$(AM_DEFAULT_VERBOSITY))
am__v_DVIPS_0 = @echo "  DVIPS   " $@;
am__v_DVIPS_1 = 
AM_V_MAKEINFO = $(am__v_MAKEINFO_$(V))
am__v_MAKEINFO_ = $(am__v_MAKEINFO_$(AM_DEFAULT_VERBOSITY))
am__v_MAKEINFO_0 = @echo "  MAKEINFO" $@;
am__v_MAKEINFO_1 = 
AM_V_INFOHTML = $(am__v_INFOHTML_$(V))
am__v_INFOHTML_ = $(am__v_INFOHTML_$(AM_DEFAULT_VERBOSITY))
am__v_INFOHTML_0 = @echo "  INFOHTML" $@;
am__v_INFOHTML_1 = 
AM_V_TEXI2DVI = $(am__v_TEXI2DVI_$(V))
am__v_TEXI2DVI_ = $(am__v_TEXI2DVI_$(AM_DEFAULT_VERBOSITY))
am__v_TEXI2DVI_0 = @echo "  TEXI2DVI" $@;
am__v_TEXI2DVI_1 = 
AM_V_TEXI2PDF = $(am__v_TEXI2PDF_$(V))
am__v_TEXI2PDF_ = $(am__v_TEXI2PDF_$(AM_DEFAULT_VERBOSITY))
am__v_TEXI2PDF_0 = @echo "  TEXI2PDF" $@;
am__v_TEXI2PDF_1 = 
AM_V_texinfo = $(am__v_texinfo_$(V))
am__v_texinfo_ = $(am__v_texinfo_$(AM_DEFAULT_VERBOSITY))
am__v_texinfo_0 = -q
am__v_texinfo_1 = 
AM_V_texidevnull = $(am__v_texidevnull_$(V))
am__v_texidevnull_ = $(am__v_texidevnull_$(AM_DEFAULT_VERBOSITY))
am__v_texidevnull_0 = > /dev/null
am__v_texidevnull_1 = 
INFO_DEPS = ld.info
am__TEXINFO_TEX_DIR = $(srcdir)/../texinfo
DVIS = ld.dvi
PDFS = ld.pdf
PSS = ld.ps
HTMLS = ld.html
TEXINFOS = ld.texi
TEXI2PDF = $(TEXI2DVI) --pdf --batch
MAKEINFOHTML = $(MAKEINFO) --html
AM_MAKEINFOHTMLFLAGS = $(AM_MAKEINFOFLAGS)
DVIPS = dvips
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DEJATOOL = $(PACKAGE)
RUNTESTDEFAULTFLAGS = --tool $$tool --srcdir $$srcdir
DIST_SUBDIRS = $(SUBDIRS)
transform = s/^ld-new$$/$(installed_linker)/;s,^,m68k--netbsdelf-,
ACLOCAL = ${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/gpl3/binutils/dist/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/gpl3/binutils/dist/missing autoconf
AUTOHEADER = ${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/gpl3/binutils/dist/missing autoheader
AUTOMAKE = ${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/gpl3/binutils/dist/missing automake-1.15
AWK = /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbawk
CATALOGS = 
CATOBJEXT = 
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS = -O -O2 -no-cpp-precomp  
CPP = cc -E
CPPFLAGS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O  
CYGPATH_W = echo
DATADIRNAME = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = @DSYMUTIL@
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EMUL = m68kelfnbsd
EMULATION_LIBPATH = m68kelfnbsd
EMULATION_OFILES =  em68kelfnbsd.o
EMUL_EXTRA_OFILES =  ldelf.o ldelfgen.o
EXEEXT = 
FGREP = /usr/bin/grep -F
GENCAT = 
GMSGFMT = /usr/local/bin/msgfmt
GREP = /usr/bin/grep
HDEFINES = 
INCINTL = 
INSTALL = /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/m68k--netbsdelf-install -c  -r
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = 
JANSSON_CFLAGS = 
JANSSON_LIBS = 
LARGEFILE_CPPFLAGS = 
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS =   
LEX = `if [ -f ../flex/flex ]; then echo ../flex/flex; else echo /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nblex; fi`
LEXLIB = -ll
LEX_OUTPUT_ROOT = lex.yy
LIBINTL = 
LIBINTL_DEP = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool

# Search path to override the default search path for -lfoo libraries.
# If LIB_PATH is empty, the ones in the script (if any) are left alone.
# (The default is usually /lib:/usr/lib:/usr/local/lib, unless building
# a cross-linker, in which case the default is empty.  See genscripts.sh.)
# Otherwise, they are replaced with the ones given in LIB_PATH,
# which may have the form: LIB_PATH=/lib:/usr/local/lib.  This can be set
# when the linker is configured via the --with-lib-path configure switch.
LIB_PATH = =/usr/lib
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbmakeinfo
MKDIR_P = /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/m68k--netbsdelf-install -d -p
MKINSTALLDIRS = /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/binutils/../../external/gpl3/binutils/dist/ld/../mkinstalldirs
MSGFMT = /usr/local/bin/msgfmt
MSGMERGE = /usr/local/bin/msgmerge
NATIVE_LIB_DIRS = /usr/local/lib /lib /usr/lib
NM = /usr/bin/nm
NMEDIT = nmedit
NO_WERROR = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = @OTOOL@
OTOOL64 = :
PACKAGE = ld
PACKAGE_BUGREPORT = 
PACKAGE_NAME = ld
PACKAGE_STRING = ld 2.39
PACKAGE_TARNAME = ld
PACKAGE_URL = 
PACKAGE_VERSION = 2.39
PATH_SEPARATOR = :
PKG_CONFIG = 
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRINGIFY = astring.sed
STRIP = strip
TARGET_SYSTEM_ROOT = ${exec_prefix}/${target_alias}/sys-root
TARGET_SYSTEM_ROOT_DEFINE = -DTARGET_SYSTEM_ROOT=\"$(TARGET_SYSTEM_ROOT)\" -DTARGET_SYSTEM_ROOT_RELOCATABLE

# This is the real libbfd.a and libctf.a created by libtool.
TESTBFDLIB = ../bfd/.libs/libbfd.a
TESTCTFLIB = ../libctf/.libs/libctf.a
USE_NLS = no
VERSION = 2.39
WARN_CFLAGS = -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow
WARN_CFLAGS_FOR_BUILD = -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow
WARN_WRITE_STRINGS = -Wwrite-strings
XGETTEXT = /usr/local/bin/xgettext
YACC = `if [ -f ../bison/bison ]; then echo ../bison/bison -y -L$(srcdir)/../bison/; else echo /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64/bin/nbyacc; fi`
YFLAGS = -d
abs_builddir = /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tools/binutils/build/ld
abs_srcdir = /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/binutils/../../external/gpl3/binutils/dist/ld
abs_top_builddir = /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tools/binutils/build/ld
abs_top_srcdir = /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/binutils/../../external/gpl3/binutils/dist/ld
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin22.1.0
build_alias = x86_64-apple-darwin22.1.0
build_cpu = x86_64
build_os = darwin22.1.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
do_compare = cmp --ignore-initial=16 $$f1 $$f2
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
elf_list_options = true
elf_plt_unwind_list_options = false
elf_shlib_list_options = true
enable_initfini_array = yes
enable_libctf = yes
exec_prefix = ${prefix}
host = x86_64-apple-darwin22.1.0
host_alias = x86_64-apple-darwin22.1.0
host_cpu = x86_64
host_os = darwin22.1.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_as_default = yes
install_sh = ${SHELL} /Users/sidqian/Downloads/summer/L2S/netbsd-src/external/gpl3/binutils/dist/install-sh
installed_linker = ld.bfd
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/sidqian/Downloads/summer/L2S/netbsd-src/build/obj/tooldir.Darwin-22.1.0-x86_64
program_transform_name = s,^,m68k--netbsdelf-,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/binutils/../../external/gpl3/binutils/dist/ld
sysconfdir = ${prefix}/etc
target = m68k--netbsdelf
target_alias = m68k--netbsdelf
target_cpu = m68k
target_os = netbsdelf
target_vendor = 
top_build_prefix = 
top_builddir = .
top_srcdir = /Users/sidqian/Downloads/summer/L2S/netbsd-src/tools/binutils/../../external/gpl3/binutils/dist/ld
use_sysroot = yes
zlibdir = -L$(top_builddir)/../zlib
zlibinc = -I$(top_srcdir)/../zlib
AUTOMAKE_OPTIONS = dejagnu no-texinfo.tex no-dist foreign info-in-builddir
ACLOCAL_AMFLAGS = -I .. -I ../config -I ../bfd
TEXINFO_TEX = ../texinfo/texinfo.tex
SUBDIRS = po
tooldir = $(exec_prefix)/$(target_alias)

# Automake 1.10+ disables lex and yacc output file regeneration if
# maintainer mode is disabled.  Avoid this.
am__skiplex = 
am__skipyacc = 

# This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is
# -I../zlib, unless we were configured with --with-system-zlib, in which
# case both are empty.
ZLIB = -L$(top_builddir)/../zlib -lz
ZLIBINC = -I$(top_srcdir)/../zlib
ELF_CLFAGS = -DELF_LIST_OPTIONS=true \
	   -DELF_SHLIB_LIST_OPTIONS=true \
	   -DELF_PLT_UNWIND_LIST_OPTIONS=false

AM_CFLAGS = $(WARN_CFLAGS) $(ELF_CLFAGS) $(JANSSON_CFLAGS)

# We put the scripts in the directory $(scriptdir)/ldscripts.
# We can't put the scripts in $(datadir) because the SEARCH_DIR
# directives need to be different for native and cross linkers.
scriptdir = $(tooldir)/lib
BASEDIR = $(srcdir)/..
BFDDIR = $(BASEDIR)/bfd
INCDIR = $(BASEDIR)/include

# What version of the manual to build
DOCVER = gen

# Options to extract the man page from ld.texi
MANCONF = -Dman
TEXI2POD = perl $(BASEDIR)/etc/texi2pod.pl $(AM_MAKEINFOFLAGS)
POD2MAN = pod2man --center="GNU Development Tools" \
	--release="binutils-$(VERSION)" --section=1


# Setup the testing framework, if you have one
EXPECT = expect
RUNTEST = runtest
RUNTESTFLAGS = 
CC_FOR_TARGET = ` \
  if [ -f $$r/../gcc/xgcc ] ; then \
    if [ -f $$r/../newlib/Makefile ] ; then \
      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
    else \
      echo $$r/../gcc/xgcc -B$$r/../gcc/; \
    fi; \
  else \
    if [ "x86_64-apple-darwin22.1.0" = "m68k--netbsdelf" ] ; then \
      echo $(CC); \
    else \
      echo gcc | sed '$(transform)'; \
    fi; \
  fi`

CXX_FOR_TARGET = ` \
  if [ -f $$r/../gcc/g++ ] ; then \
    if [ -f $$r/../newlib/Makefile ] ; then \
      echo $$r/../gcc/g++ -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
    else \
      echo $$r/../gcc/g++ -B$$r/../gcc/; \
    fi; \
  elif [ -f $$r/../gcc/xg++ ] ; then \
    if [ -f $$r/../newlib/Makefile ] ; then \
      echo $$r/../gcc/xg++ -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
    else \
      echo $$r/../gcc/xg++ -B$$r/../gcc/; \
    fi; \
  else \
    if [ "x86_64-apple-darwin22.1.0" = "m68k--netbsdelf" ] ; then \
      echo $(CXX); \
    else \
      echo g++ | sed '$(transform)'; \
    fi; \
  fi`


# Strip out sanitization options as we want to test building binaries without any extra paraphernalia
CFLAGS_FOR_TARGET = `echo $(CFLAGS) | sed -e 's/-fsanitize=[^ ]*//g'`
CXXFLAGS_FOR_TARGET = `echo $(CXXFLAGS) | sed -e 's/-fsanitize=[^ ]*//g'`
info_TEXINFOS = ld.texi
ld_TEXINFOS = configdoc.texi
noinst_TEXINFOS = ldint.texi
man_MANS = ld.1
AM_MAKEINFOFLAGS = -I $(srcdir) -I $(BFDDIR)/doc -I ../bfd/doc \
		   -I $(top_srcdir)/../libiberty --no-split

TEXI2DVI = texi2dvi -I $(srcdir) -I $(BFDDIR)/doc -I ../bfd/doc \
		    -I $(top_srcdir)/../libiberty

AM_CPPFLAGS = -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) -I$(top_srcdir)/../zlib \
	 $(HDEFINES) $(CFLAGS)  \
	-DLOCALEDIR="\"$(datadir)/locale\""

BFDLIB = ../bfd/libbfd.la
LIBIBERTY = ../libiberty/libiberty.a
#LIBCTF = 
LIBCTF = ../libctf/libctf.la

# These all start with e so 'make clean' can find them.
ALL_EMULATION_SOURCES = \
	eaix5ppc.c \
	eaix5rs6.c \
	eaixppc.c \
	eaixrs6.c \
	ealpha.c \
	ealphavms.c \
	earcelf.c \
	earclinux.c \
	earclinux_nps.c \
	earcv2elf.c \
	earcv2elfx.c \
	earm_wince_pe.c \
	earmelf.c \
	earmelf_fbsd.c \
	earmelf_fuchsia.c \
	earmelf_haiku.c \
	earmelf_linux.c \
	earmelf_linux_eabi.c \
	earmelf_linux_fdpiceabi.c \
	earmelf_nacl.c \
	earmelf_nbsd.c \
	earmelf_nbsd_eabi.c \
	earmelf_nbsd_eabihf.c \
	earmelf_phoenix.c \
	earmelf_vxworks.c \
	earmelfb.c \
	earmelfb_fbsd.c \
	earmelfb_fuchsia.c \
	earmelfb_linux.c \
	earmelfb_linux_eabi.c \
	earmelfb_linux_fdpiceabi.c \
	earmelfb_nacl.c \
	earmelfb_nbsd.c \
	earmelfb_nbsd_eabi.c \
	earmelfb_nbsd_eabihf.c \
	earmnbsd.c \
	earmnto.c \
	earmpe.c \
	eavr1.c \
	eavr2.c \
	eavr25.c \
	eavr3.c \
	eavr31.c \
	eavr35.c \
	eavr4.c \
	eavr5.c \
	eavr51.c \
	eavr6.c \
	eavrtiny.c   \
	eavrxmega1.c \
	eavrxmega2.c \
	eavrxmega3.c \
	eavrxmega4.c \
	eavrxmega5.c \
	eavrxmega6.c \
	eavrxmega7.c \
	ecrisaout.c \
	ecriself.c \
	ecrislinux.c \
	ecskyelf.c \
	ecskyelf_linux.c \
	ed10velf.c \
	ed30v_e.c \
	ed30v_o.c \
	ed30velf.c \
	eelf32_dlx.c \
	eelf32_sparc.c \
	eelf32_sparc_sol2.c \
	eelf32_sparc_vxworks.c \
	eelf32_spu.c \
	eelf32_tic6x_be.c \
	eelf32_tic6x_elf_be.c \
	eelf32_tic6x_elf_le.c \
	eelf32_tic6x_le.c \
	eelf32_tic6x_linux_be.c \
	eelf32_tic6x_linux_le.c \
	eelf32am33lin.c \
	eelf32bfin.c \
	eelf32bfinfd.c \
	eelf32cr16.c \
	eelf32crx.c \
	eelf32epiphany.c \
	eelf32epiphany_4x4.c \
	eelf32fr30.c \
	eelf32frv.c \
	eelf32frvfd.c \
	eelf32ft32.c \
	eelf32ip2k.c \
	eelf32iq10.c \
	eelf32iq2000.c \
	eelf32lm32.c \
	eelf32lm32fd.c \
	eelf32lppc.c \
	eelf32lppclinux.c \
	eelf32lppcnto.c \
	eelf32lppcsim.c \
	eelf32lriscv.c \
	eelf32lsmip.c \
	eelf32ltsmip.c \
	eelf32ltsmip_fbsd.c \
	eelf32ltsmipn32.c \
	eelf32ltsmipn32_fbsd.c \
	eelf32m32c.c \
	eelf32mb_linux.c \
	eelf32mbel_linux.c \
	eelf32mcore.c \
	eelf32mep.c \
	eelf32metag.c \
	eelf32microblaze.c \
	eelf32microblazeel.c \
	eelf32moxie.c \
	eelf32mt.c \
	eelf32or1k.c \
	eelf32or1k_linux.c \
	eelf32or1k_nbsd.c \
	eelf32ppc.c \
	eelf32ppc_fbsd.c \
	eelf32ppc_nbsd.c \
	eelf32ppchaiku.c \
	eelf32ppclinux.c \
	eelf32ppcnto.c \
	eelf32ppcsim.c \
	eelf32ppcvxworks.c \
	eelf32ppcwindiss.c \
	eelf32rl78.c \
	eelf32rx.c \
	eelf32rx_linux.c \
	eelf32tilegx.c \
	eelf32tilegx_be.c \
	eelf32tilepro.c \
	eelf32vax.c \
	eelf32visium.c \
	eelf32xstormy16.c \
	eelf32xtensa.c \
	eelf32z80.c \
	eelf_i386.c \
	eelf_i386_be.c \
	eelf_i386_fbsd.c \
	eelf_i386_haiku.c \
	eelf_i386_ldso.c \
	eelf_i386_sol2.c \
	eelf_i386_vxworks.c \
	eelf_iamcu.c \
	eelf_s390.c \
	eh8300elf.c \
	eh8300elf_linux.c \
	eh8300helf.c \
	eh8300helf_linux.c \
	eh8300hnelf.c \
	eh8300self.c \
	eh8300self_linux.c \
	eh8300snelf.c \
	eh8300sxelf.c \
	eh8300sxelf_linux.c \
	eh8300sxnelf.c \
	ehppaelf.c \
	ehppalinux.c \
	ehppanbsd.c \
	ehppaobsd.c \
	ei386aout.c \
	ei386beos.c \
	ei386bsd.c \
	ei386go32.c \
	ei386lynx.c \
	ei386moss.c \
	ei386msdos.c \
	ei386nto.c \
	ei386pe.c \
	ei386pe_posix.c \
	em32relf.c \
	em32relf_linux.c \
	em32rlelf.c \
	em32rlelf_linux.c \
	em68hc11elf.c \
	em68hc11elfb.c \
	em68hc12elf.c \
	em68hc12elfb.c \
	em68kelf.c \
	em68kelfnbsd.c \
	em9s12zelf.c \
	emcorepe.c \
	emn10200.c \
	emn10300.c \
	emoxiebox.c \
	emsp430X.c \
	emsp430elf.c \
	ends32belf.c \
	ends32belf16m.c \
	ends32belf_linux.c \
	ends32elf.c \
	ends32elf16m.c \
	ends32elf_linux.c \
	enios2elf.c \
	enios2linux.c \
	ens32knbsd.c \
	epc532macha.c \
	epdp11.c \
	epjelf.c \
	epjlelf.c \
	eppcmacos.c \
	epruelf.c \
	escore3_elf.c \
	escore7_elf.c \
	esh.c \
	eshelf.c \
	eshelf_fd.c \
	eshelf_linux.c \
	eshelf_nbsd.c \
	eshelf_nto.c \
	eshelf_uclinux.c \
	eshelf_vxworks.c \
	eshl.c \
	eshlelf.c \
	eshlelf_fd.c \
	eshlelf_linux.c \
	eshlelf_nbsd.c \
	eshlelf_nto.c \
	eshlelf_vxworks.c \
	eshpe.c \
	etic30coff.c \
	etic3xcoff.c \
	etic3xcoff_onchip.c \
	etic4xcoff.c \
	etic54xcoff.c \
	ev850.c \
	ev850_rh850.c \
	evanilla.c \
	evaxnbsd.c \
	exgateelf.c \
	ez80.c \
	ez8001.c \
	ez8002.c

ALL_EMULATIONS = $(ALL_EMULATION_SOURCES:.c=.o)
ALL_64_EMULATION_SOURCES = \
	eaarch64cloudabi.c \
	eaarch64cloudabib.c \
	eaarch64elf.c \
	eaarch64elf32.c \
	eaarch64elf32b.c \
	eaarch64elfb.c \
	eaarch64fbsd.c \
	eaarch64fbsdb.c \
	eaarch64haiku.c \
	eaarch64linux.c \
	eaarch64nbsd.c \
	eaarch64nbsdb.c \
	eaarch64linux32.c \
	eaarch64linux32b.c \
	eaarch64linuxb.c \
	eelf32_x86_64.c \
	eelf32b4300.c \
	eelf32bmip.c \
	eelf32bmipn32.c \
	eelf32briscv.c \
	eelf32briscv_ilp32.c \
	eelf32briscv_ilp32f.c \
	eelf32bsmip.c \
	eelf32btsmip.c \
	eelf32btsmip_fbsd.c \
	eelf32btsmipn32.c \
	eelf32btsmipn32_fbsd.c \
	eelf32ebmip.c \
	eelf32ebmipvxworks.c \
	eelf32elmip.c \
	eelf32elmipvxworks.c \
	eelf32l4300.c \
	eelf32lmip.c \
	eelf32loongarch.c \
	eelf32lr5900.c \
	eelf32lr5900n32.c \
	eelf32lriscv.c \
	eelf32lriscv_ilp32.c \
	eelf32lriscv_ilp32f.c \
	eelf32lsmip.c \
	eelf32ltsmip.c \
	eelf32ltsmip_fbsd.c \
	eelf32ltsmipn32.c \
	eelf32ltsmipn32_fbsd.c \
	eelf32mipswindiss.c \
	eelf64_aix.c \
	eelf64_ia64.c \
	eelf64_ia64_fbsd.c \
	eelf64_ia64_vms.c \
	eelf64_s390.c \
	eelf64_sparc.c \
	eelf64_sparc_fbsd.c \
	eelf64_sparc_sol2.c \
	eelf64alpha.c \
	eelf64alpha_fbsd.c \
	eelf64alpha_nbsd.c \
	eelf64bmip.c \
	eelf64bpf.c \
	eelf64briscv.c \
	eelf64briscv_lp64.c \
	eelf64briscv_lp64f.c \
	eelf64btsmip.c \
	eelf64btsmip_fbsd.c \
	eelf64hppa.c \
	eelf64loongarch.c \
	eelf64lppc.c \
	eelf64lppc_fbsd.c \
	eelf64lriscv.c \
	eelf64lriscv_lp64.c \
	eelf64lriscv_lp64f.c \
	eelf64ltsmip.c \
	eelf64ltsmip_fbsd.c \
	eelf64mmix.c \
	eelf64ppc.c \
	eelf64ppc_fbsd.c \
	eelf64rdos.c \
	eelf64tilegx.c \
	eelf64tilegx_be.c \
	eelf_mipsel_haiku.c \
	eelf_x86_64.c \
	eelf_x86_64_cloudabi.c \
	eelf_x86_64_fbsd.c \
	eelf_x86_64_haiku.c \
	eelf_x86_64_sol2.c \
	ehppa64linux.c \
	ei386pep.c \
	emmo.c

ALL_64_EMULATIONS = $(ALL_64_EMULATION_SOURCES:.c=.o)
ALL_EMUL_EXTRA_OFILES = \
	deffilep.o \
	pe-dll.o \
	ldelf.o \
	ldelfgen.o

ALL_64_EMUL_EXTRA_OFILES = \
	pep-dll.o

CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c \
	ldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c \
	mri.c ldcref.c pe-dll.c pep-dll.c ldlex-wrapper.c \
	plugin.c ldbuildid.c ldelf.c ldelfgen.c

HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h \
	ldlang.h ldlex.h ldmain.h ldmisc.h ldver.h \
	ldwrite.h mri.h deffile.h pe-dll.h pep-dll.h \
	elf-hints-local.h plugin.h ldbuildid.h ldelf.h ldelfgen.h

GENERATED_CFILES = ldgram.c ldlex.c deffilep.c
GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h

# Require an early dependency on the generated headers, as the dependency
# tracking will not cause them to be built beforehand.
BUILT_SOURCES = $(GENERATED_HFILES)
OFILES = ldgram.o ldlex-wrapper.o lexsup.o ldlang.o \
	mri.o ldctor.o ldmain.o plugin.o \
	ldwrite.o ldexp.o  ldemul.o ldver.o ldmisc.o \
	ldfile.o ldcref.o ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES} \
	ldbuildid.o

STAGESTUFF = *.o ldscripts/* e*.c
SRC_POTFILES = $(CFILES) $(HFILES)
BLD_POTFILES = $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES)
#GENDEPDIR = 
GENDEPDIR = $(DEPDIR)
GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh "${srcdir}" "${libdir}" "${prefix}" "${exec_prefix}" x86_64-apple-darwin22.1.0 m68k--netbsdelf m68k--netbsdelf "$(GENDEPDIR)" "${LIB_PATH}" "m68kelfnbsd" "/usr/local/lib /lib /usr/lib" yes yes
GEN_DEPENDS = $(srcdir)/genscripts.sh stringify.sed

# We need this for automake to use YLWRAP.
# Allow dependency tracking to work for these files, too.

# Dependency tracking for the generated emulation files.
EXTRA_ld_new_SOURCES = deffilep.y ldlex.l pep-dll.c pe-dll.c ldelf.c \
	ldelfgen.c $(ALL_EMULATION_SOURCES) \
	$(ALL_64_EMULATION_SOURCES)
ld_new_SOURCES = ldgram.y ldlex-wrapper.c lexsup.c ldlang.c mri.c ldctor.c ldmain.c \
	ldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c plugin.c \
	ldbuildid.c

ld_new_DEPENDENCIES = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) \
		      $(BFDLIB) $(LIBCTF) $(LIBIBERTY) $(LIBINTL_DEP) $(JANSSON_LIBS)

ld_new_LDADD = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBCTF) $(LIBIBERTY) $(LIBINTL) $(ZLIB) $(JANSSON_LIBS)
#
#
# Build a dummy plugin using libtool.
#
noinst_LTLIBRARIES = libldtestplug.la libldtestplug2.la \
		     libldtestplug3.la libldtestplug4.la

libldtestplug_la_SOURCES = testplug.c
libldtestplug_la_CFLAGS = -g -O2
libldtestplug_la_LDFLAGS = -no-undefined -rpath /nowhere
libldtestplug2_la_SOURCES = testplug2.c
libldtestplug2_la_CFLAGS = -g -O2
libldtestplug2_la_LDFLAGS = -no-undefined -rpath /nowhere
libldtestplug3_la_SOURCES = testplug3.c
libldtestplug3_la_CFLAGS = -g -O2
libldtestplug3_la_LDFLAGS = -no-undefined -rpath /nowhere
libldtestplug4_la_SOURCES = testplug4.c
libldtestplug4_la_CFLAGS = -g -O2
libldtestplug4_la_LDFLAGS = -no-undefined -rpath /nowhere
bfdplugindir = $(libdir)/bfd-plugins
bfdplugin_LTLIBRARIES = libdep.la
libdep_la_SOURCES = libdep_plugin.c
libdep_la_LDFLAGS = -no-undefined -rpath /nowhere -module -avoid-version
libdep_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	--tag=disable-static \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libdep_la_LDFLAGS) $(LDFLAGS) -o $@

MAINTAINERCLEANFILES = configdoc.texi ld.1 ld.info

# We want to reconfigure if configure.host or configure.tgt changes.
# development.sh is used to determine -Werror default.
CONFIG_STATUS_DEPENDENCIES = $(srcdir)/configure.host $(srcdir)/configure.tgt \
	$(BFDDIR)/development.sh

EXTRA_DEJAGNU_SITE_CONFIG = development.exp enablings.exp
MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) \
	ldemul-list.h crtbegin.o crtend.o ld.log ld.sum

CLEANFILES = dep.sed DEP DEPA DEP1 DEP2 spu_ovl.s spu_ovl.o spu_icache.s spu_icache.o

# Stuff that should be included in a distribution.  The diststuff
# target is run by the taz target in ../Makefile.in.
EXTRA_DIST = ldgram.c ldgram.h ldlex.c emultempl/spu_ovl.o_c \
	     emultempl/spu_icache.o_c deffilep.c deffilep.h $(man_MANS)

DISTCLEANFILES = site.exp development.exp enablings.exp site.bak stringify.sed
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .dvi .l .lo .o .obj .ps .y
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
po/Makefile.in: $(top_builddir)/config.status $(top_srcdir)/po/Make-in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-bfdpluginLTLIBRARIES: $(bfdplugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(bfdplugin_LTLIBRARIES)'; test -n "$(bfdplugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bfdplugindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bfdplugindir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(bfdplugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(bfdplugindir)"; \
	}

uninstall-bfdpluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(bfdplugin_LTLIBRARIES)'; test -n "$(bfdplugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(bfdplugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(bfdplugindir)/$$f"; \
	done

clean-bfdpluginLTLIBRARIES:
	-test -z "$(bfdplugin_LTLIBRARIES)" || rm -f $(bfdplugin_LTLIBRARIES)
	@list='$(bfdplugin_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libdep.la: $(libdep_la_OBJECTS) $(libdep_la_DEPENDENCIES) $(EXTRA_libdep_la_DEPENDENCIES) 
	$(AM_V_GEN)$(libdep_la_LINK) -rpath $(bfdplugindir) $(libdep_la_OBJECTS) $(libdep_la_LIBADD) $(LIBS)

libldtestplug.la: $(libldtestplug_la_OBJECTS) $(libldtestplug_la_DEPENDENCIES) $(EXTRA_libldtestplug_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libldtestplug_la_LINK)  $(libldtestplug_la_OBJECTS) $(libldtestplug_la_LIBADD) $(LIBS)

libldtestplug2.la: $(libldtestplug2_la_OBJECTS) $(libldtestplug2_la_DEPENDENCIES) $(EXTRA_libldtestplug2_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libldtestplug2_la_LINK)  $(libldtestplug2_la_OBJECTS) $(libldtestplug2_la_LIBADD) $(LIBS)

libldtestplug3.la: $(libldtestplug3_la_OBJECTS) $(libldtestplug3_la_DEPENDENCIES) $(EXTRA_libldtestplug3_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libldtestplug3_la_LINK)  $(libldtestplug3_la_OBJECTS) $(libldtestplug3_la_LIBADD) $(LIBS)

libldtestplug4.la: $(libldtestplug4_la_OBJECTS) $(libldtestplug4_la_DEPENDENCIES) $(EXTRA_libldtestplug4_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libldtestplug4_la_LINK)  $(libldtestplug4_la_OBJECTS) $(libldtestplug4_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
ldgram.h: ldgram.c
	@if test ! -f $@; then rm -f ldgram.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) ldgram.c; else :; fi
deffilep.h: deffilep.c
	@if test ! -f $@; then rm -f deffilep.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) deffilep.c; else :; fi

ld-new$(EXEEXT): $(ld_new_OBJECTS) $(ld_new_DEPENDENCIES) $(EXTRA_ld_new_DEPENDENCIES) 
	@rm -f ld-new$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ld_new_OBJECTS) $(ld_new_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/deffilep.Po
include ./$(DEPDIR)/eaarch64cloudabi.Po
include ./$(DEPDIR)/eaarch64cloudabib.Po
include ./$(DEPDIR)/eaarch64elf.Po
include ./$(DEPDIR)/eaarch64elf32.Po
include ./$(DEPDIR)/eaarch64elf32b.Po
include ./$(DEPDIR)/eaarch64elfb.Po
include ./$(DEPDIR)/eaarch64fbsd.Po
include ./$(DEPDIR)/eaarch64fbsdb.Po
include ./$(DEPDIR)/eaarch64haiku.Po
include ./$(DEPDIR)/eaarch64linux.Po
include ./$(DEPDIR)/eaarch64linux32.Po
include ./$(DEPDIR)/eaarch64linux32b.Po
include ./$(DEPDIR)/eaarch64linuxb.Po
include ./$(DEPDIR)/eaarch64nbsd.Po
include ./$(DEPDIR)/eaarch64nbsdb.Po
include ./$(DEPDIR)/eaix5ppc.Po
include ./$(DEPDIR)/eaix5rs6.Po
include ./$(DEPDIR)/eaixppc.Po
include ./$(DEPDIR)/eaixrs6.Po
include ./$(DEPDIR)/ealpha.Po
include ./$(DEPDIR)/ealphavms.Po
include ./$(DEPDIR)/earcelf.Po
include ./$(DEPDIR)/earclinux.Po
include ./$(DEPDIR)/earclinux_nps.Po
include ./$(DEPDIR)/earcv2elf.Po
include ./$(DEPDIR)/earcv2elfx.Po
include ./$(DEPDIR)/earm_wince_pe.Po
include ./$(DEPDIR)/earmelf.Po
include ./$(DEPDIR)/earmelf_fbsd.Po
include ./$(DEPDIR)/earmelf_fuchsia.Po
include ./$(DEPDIR)/earmelf_haiku.Po
include ./$(DEPDIR)/earmelf_linux.Po
include ./$(DEPDIR)/earmelf_linux_eabi.Po
include ./$(DEPDIR)/earmelf_linux_fdpiceabi.Po
include ./$(DEPDIR)/earmelf_nacl.Po
include ./$(DEPDIR)/earmelf_nbsd.Po
include ./$(DEPDIR)/earmelf_nbsd_eabi.Po
include ./$(DEPDIR)/earmelf_nbsd_eabihf.Po
include ./$(DEPDIR)/earmelf_phoenix.Po
include ./$(DEPDIR)/earmelf_vxworks.Po
include ./$(DEPDIR)/earmelfb.Po
include ./$(DEPDIR)/earmelfb_fbsd.Po
include ./$(DEPDIR)/earmelfb_fuchsia.Po
include ./$(DEPDIR)/earmelfb_linux.Po
include ./$(DEPDIR)/earmelfb_linux_eabi.Po
include ./$(DEPDIR)/earmelfb_linux_fdpiceabi.Po
include ./$(DEPDIR)/earmelfb_nacl.Po
include ./$(DEPDIR)/earmelfb_nbsd.Po
include ./$(DEPDIR)/earmelfb_nbsd_eabi.Po
include ./$(DEPDIR)/earmelfb_nbsd_eabihf.Po
include ./$(DEPDIR)/earmnbsd.Po
include ./$(DEPDIR)/earmnto.Po
include ./$(DEPDIR)/earmpe.Po
include ./$(DEPDIR)/eavr1.Po
include ./$(DEPDIR)/eavr2.Po
include ./$(DEPDIR)/eavr25.Po
include ./$(DEPDIR)/eavr3.Po
include ./$(DEPDIR)/eavr31.Po
include ./$(DEPDIR)/eavr35.Po
include ./$(DEPDIR)/eavr4.Po
include ./$(DEPDIR)/eavr5.Po
include ./$(DEPDIR)/eavr51.Po
include ./$(DEPDIR)/eavr6.Po
include ./$(DEPDIR)/eavrtiny.Po
include ./$(DEPDIR)/eavrxmega1.Po
include ./$(DEPDIR)/eavrxmega2.Po
include ./$(DEPDIR)/eavrxmega3.Po
include ./$(DEPDIR)/eavrxmega4.Po
include ./$(DEPDIR)/eavrxmega5.Po
include ./$(DEPDIR)/eavrxmega6.Po
include ./$(DEPDIR)/eavrxmega7.Po
include ./$(DEPDIR)/ecrisaout.Po
include ./$(DEPDIR)/ecriself.Po
include ./$(DEPDIR)/ecrislinux.Po
include ./$(DEPDIR)/ecskyelf.Po
include ./$(DEPDIR)/ecskyelf_linux.Po
include ./$(DEPDIR)/ed10velf.Po
include ./$(DEPDIR)/ed30v_e.Po
include ./$(DEPDIR)/ed30v_o.Po
include ./$(DEPDIR)/ed30velf.Po
include ./$(DEPDIR)/eelf32_dlx.Po
include ./$(DEPDIR)/eelf32_sparc.Po
include ./$(DEPDIR)/eelf32_sparc_sol2.Po
include ./$(DEPDIR)/eelf32_sparc_vxworks.Po
include ./$(DEPDIR)/eelf32_spu.Po
include ./$(DEPDIR)/eelf32_tic6x_be.Po
include ./$(DEPDIR)/eelf32_tic6x_elf_be.Po
include ./$(DEPDIR)/eelf32_tic6x_elf_le.Po
include ./$(DEPDIR)/eelf32_tic6x_le.Po
include ./$(DEPDIR)/eelf32_tic6x_linux_be.Po
include ./$(DEPDIR)/eelf32_tic6x_linux_le.Po
include ./$(DEPDIR)/eelf32_x86_64.Po
include ./$(DEPDIR)/eelf32am33lin.Po
include ./$(DEPDIR)/eelf32b4300.Po
include ./$(DEPDIR)/eelf32bfin.Po
include ./$(DEPDIR)/eelf32bfinfd.Po
include ./$(DEPDIR)/eelf32bmip.Po
include ./$(DEPDIR)/eelf32bmipn32.Po
include ./$(DEPDIR)/eelf32briscv.Po
include ./$(DEPDIR)/eelf32briscv_ilp32.Po
include ./$(DEPDIR)/eelf32briscv_ilp32f.Po
include ./$(DEPDIR)/eelf32bsmip.Po
include ./$(DEPDIR)/eelf32btsmip.Po
include ./$(DEPDIR)/eelf32btsmip_fbsd.Po
include ./$(DEPDIR)/eelf32btsmipn32.Po
include ./$(DEPDIR)/eelf32btsmipn32_fbsd.Po
include ./$(DEPDIR)/eelf32cr16.Po
include ./$(DEPDIR)/eelf32crx.Po
include ./$(DEPDIR)/eelf32ebmip.Po
include ./$(DEPDIR)/eelf32ebmipvxworks.Po
include ./$(DEPDIR)/eelf32elmip.Po
include ./$(DEPDIR)/eelf32elmipvxworks.Po
include ./$(DEPDIR)/eelf32epiphany.Po
include ./$(DEPDIR)/eelf32epiphany_4x4.Po
include ./$(DEPDIR)/eelf32fr30.Po
include ./$(DEPDIR)/eelf32frv.Po
include ./$(DEPDIR)/eelf32frvfd.Po
include ./$(DEPDIR)/eelf32ft32.Po
include ./$(DEPDIR)/eelf32ip2k.Po
include ./$(DEPDIR)/eelf32iq10.Po
include ./$(DEPDIR)/eelf32iq2000.Po
include ./$(DEPDIR)/eelf32l4300.Po
include ./$(DEPDIR)/eelf32lm32.Po
include ./$(DEPDIR)/eelf32lm32fd.Po
include ./$(DEPDIR)/eelf32lmip.Po
include ./$(DEPDIR)/eelf32loongarch.Po
include ./$(DEPDIR)/eelf32lppc.Po
include ./$(DEPDIR)/eelf32lppclinux.Po
include ./$(DEPDIR)/eelf32lppcnto.Po
include ./$(DEPDIR)/eelf32lppcsim.Po
include ./$(DEPDIR)/eelf32lriscv.Po
include ./$(DEPDIR)/eelf32lr5900.Po
include ./$(DEPDIR)/eelf32lr5900n32.Po
include ./$(DEPDIR)/eelf32lriscv.Po
include ./$(DEPDIR)/eelf32lriscv_ilp32.Po
include ./$(DEPDIR)/eelf32lriscv_ilp32f.Po
include ./$(DEPDIR)/eelf32lsmip.Po
include ./$(DEPDIR)/eelf32ltsmip.Po
include ./$(DEPDIR)/eelf32ltsmip_fbsd.Po
include ./$(DEPDIR)/eelf32ltsmipn32.Po
include ./$(DEPDIR)/eelf32ltsmipn32_fbsd.Po
include ./$(DEPDIR)/eelf32m32c.Po
include ./$(DEPDIR)/eelf32mb_linux.Po
include ./$(DEPDIR)/eelf32mbel_linux.Po
include ./$(DEPDIR)/eelf32mcore.Po
include ./$(DEPDIR)/eelf32mep.Po
include ./$(DEPDIR)/eelf32metag.Po
include ./$(DEPDIR)/eelf32microblaze.Po
include ./$(DEPDIR)/eelf32microblazeel.Po
include ./$(DEPDIR)/eelf32mipswindiss.Po
include ./$(DEPDIR)/eelf32moxie.Po
include ./$(DEPDIR)/eelf32mt.Po
include ./$(DEPDIR)/eelf32or1k.Po
include ./$(DEPDIR)/eelf32or1k_linux.Po
include ./$(DEPDIR)/eelf32or1k_nbsd.Po
include ./$(DEPDIR)/eelf32ppc.Po
include ./$(DEPDIR)/eelf32ppc_fbsd.Po
include ./$(DEPDIR)/eelf32ppc_nbsd.Po
include ./$(DEPDIR)/eelf32ppchaiku.Po
include ./$(DEPDIR)/eelf32ppclinux.Po
include ./$(DEPDIR)/eelf32ppcnto.Po
include ./$(DEPDIR)/eelf32ppcsim.Po
include ./$(DEPDIR)/eelf32ppcvxworks.Po
include ./$(DEPDIR)/eelf32ppcwindiss.Po
include ./$(DEPDIR)/eelf32rl78.Po
include ./$(DEPDIR)/eelf32rx.Po
include ./$(DEPDIR)/eelf32rx_linux.Po
include ./$(DEPDIR)/eelf32tilegx.Po
include ./$(DEPDIR)/eelf32tilegx_be.Po
include ./$(DEPDIR)/eelf32tilepro.Po
include ./$(DEPDIR)/eelf32vax.Po
include ./$(DEPDIR)/eelf32visium.Po
include ./$(DEPDIR)/eelf32xstormy16.Po
include ./$(DEPDIR)/eelf32xtensa.Po
include ./$(DEPDIR)/eelf32z80.Po
include ./$(DEPDIR)/eelf64_aix.Po
include ./$(DEPDIR)/eelf64_ia64.Po
include ./$(DEPDIR)/eelf64_ia64_fbsd.Po
include ./$(DEPDIR)/eelf64_ia64_vms.Po
include ./$(DEPDIR)/eelf64_s390.Po
include ./$(DEPDIR)/eelf64_sparc.Po
include ./$(DEPDIR)/eelf64_sparc_fbsd.Po
include ./$(DEPDIR)/eelf64_sparc_sol2.Po
include ./$(DEPDIR)/eelf64alpha.Po
include ./$(DEPDIR)/eelf64alpha_fbsd.Po
include ./$(DEPDIR)/eelf64alpha_nbsd.Po
include ./$(DEPDIR)/eelf64bmip.Po
include ./$(DEPDIR)/eelf64bpf.Po
include ./$(DEPDIR)/eelf64briscv.Po
include ./$(DEPDIR)/eelf64briscv_lp64.Po
include ./$(DEPDIR)/eelf64briscv_lp64f.Po
include ./$(DEPDIR)/eelf64btsmip.Po
include ./$(DEPDIR)/eelf64btsmip_fbsd.Po
include ./$(DEPDIR)/eelf64hppa.Po
include ./$(DEPDIR)/eelf64loongarch.Po
include ./$(DEPDIR)/eelf64lppc.Po
include ./$(DEPDIR)/eelf64lppc_fbsd.Po
include ./$(DEPDIR)/eelf64lriscv.Po
include ./$(DEPDIR)/eelf64lriscv_lp64.Po
include ./$(DEPDIR)/eelf64lriscv_lp64f.Po
include ./$(DEPDIR)/eelf64ltsmip.Po
include ./$(DEPDIR)/eelf64ltsmip_fbsd.Po
include ./$(DEPDIR)/eelf64mmix.Po
include ./$(DEPDIR)/eelf64ppc.Po
include ./$(DEPDIR)/eelf64ppc_fbsd.Po
include ./$(DEPDIR)/eelf64rdos.Po
include ./$(DEPDIR)/eelf64tilegx.Po
include ./$(DEPDIR)/eelf64tilegx_be.Po
include ./$(DEPDIR)/eelf_i386.Po
include ./$(DEPDIR)/eelf_i386_be.Po
include ./$(DEPDIR)/eelf_i386_fbsd.Po
include ./$(DEPDIR)/eelf_i386_haiku.Po
include ./$(DEPDIR)/eelf_i386_ldso.Po
include ./$(DEPDIR)/eelf_i386_sol2.Po
include ./$(DEPDIR)/eelf_i386_vxworks.Po
include ./$(DEPDIR)/eelf_iamcu.Po
include ./$(DEPDIR)/eelf_mipsel_haiku.Po
include ./$(DEPDIR)/eelf_s390.Po
include ./$(DEPDIR)/eelf_x86_64.Po
include ./$(DEPDIR)/eelf_x86_64_cloudabi.Po
include ./$(DEPDIR)/eelf_x86_64_fbsd.Po
include ./$(DEPDIR)/eelf_x86_64_haiku.Po
include ./$(DEPDIR)/eelf_x86_64_sol2.Po
include ./$(DEPDIR)/eh8300elf.Po
include ./$(DEPDIR)/eh8300elf_linux.Po
include ./$(DEPDIR)/eh8300helf.Po
include ./$(DEPDIR)/eh8300helf_linux.Po
include ./$(DEPDIR)/eh8300hnelf.Po
include ./$(DEPDIR)/eh8300self.Po
include ./$(DEPDIR)/eh8300self_linux.Po
include ./$(DEPDIR)/eh8300snelf.Po
include ./$(DEPDIR)/eh8300sxelf.Po
include ./$(DEPDIR)/eh8300sxelf_linux.Po
include ./$(DEPDIR)/eh8300sxnelf.Po
include ./$(DEPDIR)/ehppa64linux.Po
include ./$(DEPDIR)/ehppaelf.Po
include ./$(DEPDIR)/ehppalinux.Po
include ./$(DEPDIR)/ehppanbsd.Po
include ./$(DEPDIR)/ehppaobsd.Po
include ./$(DEPDIR)/ei386aout.Po
include ./$(DEPDIR)/ei386beos.Po
include ./$(DEPDIR)/ei386bsd.Po
include ./$(DEPDIR)/ei386go32.Po
include ./$(DEPDIR)/ei386lynx.Po
include ./$(DEPDIR)/ei386moss.Po
include ./$(DEPDIR)/ei386msdos.Po
include ./$(DEPDIR)/ei386nto.Po
include ./$(DEPDIR)/ei386pe.Po
include ./$(DEPDIR)/ei386pe_posix.Po
include ./$(DEPDIR)/ei386pep.Po
include ./$(DEPDIR)/em32relf.Po
include ./$(DEPDIR)/em32relf_linux.Po
include ./$(DEPDIR)/em32rlelf.Po
include ./$(DEPDIR)/em32rlelf_linux.Po
include ./$(DEPDIR)/em68hc11elf.Po
include ./$(DEPDIR)/em68hc11elfb.Po
include ./$(DEPDIR)/em68hc12elf.Po
include ./$(DEPDIR)/em68hc12elfb.Po
include ./$(DEPDIR)/em68kelf.Po
include ./$(DEPDIR)/em68kelfnbsd.Po
include ./$(DEPDIR)/em9s12zelf.Po
include ./$(DEPDIR)/emcorepe.Po
include ./$(DEPDIR)/emmo.Po
include ./$(DEPDIR)/emn10200.Po
include ./$(DEPDIR)/emn10300.Po
include ./$(DEPDIR)/emoxiebox.Po
include ./$(DEPDIR)/emsp430X.Po
include ./$(DEPDIR)/emsp430elf.Po
include ./$(DEPDIR)/ends32belf.Po
include ./$(DEPDIR)/ends32belf16m.Po
include ./$(DEPDIR)/ends32belf_linux.Po
include ./$(DEPDIR)/ends32elf.Po
include ./$(DEPDIR)/ends32elf16m.Po
include ./$(DEPDIR)/ends32elf_linux.Po
include ./$(DEPDIR)/enios2elf.Po
include ./$(DEPDIR)/enios2linux.Po
include ./$(DEPDIR)/ens32knbsd.Po
include ./$(DEPDIR)/epc532macha.Po
include ./$(DEPDIR)/epdp11.Po
include ./$(DEPDIR)/epjelf.Po
include ./$(DEPDIR)/epjlelf.Po
include ./$(DEPDIR)/eppcmacos.Po
include ./$(DEPDIR)/epruelf.Po
include ./$(DEPDIR)/escore3_elf.Po
include ./$(DEPDIR)/escore7_elf.Po
include ./$(DEPDIR)/esh.Po
include ./$(DEPDIR)/eshelf.Po
include ./$(DEPDIR)/eshelf_fd.Po
include ./$(DEPDIR)/eshelf_linux.Po
include ./$(DEPDIR)/eshelf_nbsd.Po
include ./$(DEPDIR)/eshelf_nto.Po
include ./$(DEPDIR)/eshelf_uclinux.Po
include ./$(DEPDIR)/eshelf_vxworks.Po
include ./$(DEPDIR)/eshl.Po
include ./$(DEPDIR)/eshlelf.Po
include ./$(DEPDIR)/eshlelf_fd.Po
include ./$(DEPDIR)/eshlelf_linux.Po
include ./$(DEPDIR)/eshlelf_nbsd.Po
include ./$(DEPDIR)/eshlelf_nto.Po
include ./$(DEPDIR)/eshlelf_vxworks.Po
include ./$(DEPDIR)/eshpe.Po
include ./$(DEPDIR)/etic30coff.Po
include ./$(DEPDIR)/etic3xcoff.Po
include ./$(DEPDIR)/etic3xcoff_onchip.Po
include ./$(DEPDIR)/etic4xcoff.Po
include ./$(DEPDIR)/etic54xcoff.Po
include ./$(DEPDIR)/ev850.Po
include ./$(DEPDIR)/ev850_rh850.Po
include ./$(DEPDIR)/evanilla.Po
include ./$(DEPDIR)/evaxnbsd.Po
include ./$(DEPDIR)/exgateelf.Po
include ./$(DEPDIR)/ez80.Po
include ./$(DEPDIR)/ez8001.Po
include ./$(DEPDIR)/ez8002.Po
include ./$(DEPDIR)/ldbuildid.Po
include ./$(DEPDIR)/ldcref.Po
include ./$(DEPDIR)/ldctor.Po
include ./$(DEPDIR)/ldelf.Po
include ./$(DEPDIR)/ldelfgen.Po
include ./$(DEPDIR)/ldemul.Po
include ./$(DEPDIR)/ldexp.Po
include ./$(DEPDIR)/ldfile.Po
include ./$(DEPDIR)/ldgram.Po
include ./$(DEPDIR)/ldlang.Po
include ./$(DEPDIR)/ldlex-wrapper.Po
include ./$(DEPDIR)/ldlex.Po
include ./$(DEPDIR)/ldmain.Po
include ./$(DEPDIR)/ldmisc.Po
include ./$(DEPDIR)/ldver.Po
include ./$(DEPDIR)/ldwrite.Po
include ./$(DEPDIR)/lexsup.Po
include ./$(DEPDIR)/libdep_plugin.Plo
include ./$(DEPDIR)/libldtestplug2_la-testplug2.Plo
include ./$(DEPDIR)/libldtestplug3_la-testplug3.Plo
include ./$(DEPDIR)/libldtestplug4_la-testplug4.Plo
include ./$(DEPDIR)/libldtestplug_la-testplug.Plo
include ./$(DEPDIR)/mri.Po
include ./$(DEPDIR)/pe-dll.Po
include ./$(DEPDIR)/pep-dll.Po
include ./$(DEPDIR)/plugin.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libldtestplug_la-testplug.lo: testplug.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug_la_CFLAGS) $(CFLAGS) -MT libldtestplug_la-testplug.lo -MD -MP -MF $(DEPDIR)/libldtestplug_la-testplug.Tpo -c -o libldtestplug_la-testplug.lo `test -f 'testplug.c' || echo '$(srcdir)/'`testplug.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libldtestplug_la-testplug.Tpo $(DEPDIR)/libldtestplug_la-testplug.Plo
#	$(AM_V_CC)source='testplug.c' object='libldtestplug_la-testplug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug_la_CFLAGS) $(CFLAGS) -c -o libldtestplug_la-testplug.lo `test -f 'testplug.c' || echo '$(srcdir)/'`testplug.c

libldtestplug2_la-testplug2.lo: testplug2.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug2_la_CFLAGS) $(CFLAGS) -MT libldtestplug2_la-testplug2.lo -MD -MP -MF $(DEPDIR)/libldtestplug2_la-testplug2.Tpo -c -o libldtestplug2_la-testplug2.lo `test -f 'testplug2.c' || echo '$(srcdir)/'`testplug2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libldtestplug2_la-testplug2.Tpo $(DEPDIR)/libldtestplug2_la-testplug2.Plo
#	$(AM_V_CC)source='testplug2.c' object='libldtestplug2_la-testplug2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug2_la_CFLAGS) $(CFLAGS) -c -o libldtestplug2_la-testplug2.lo `test -f 'testplug2.c' || echo '$(srcdir)/'`testplug2.c

libldtestplug3_la-testplug3.lo: testplug3.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug3_la_CFLAGS) $(CFLAGS) -MT libldtestplug3_la-testplug3.lo -MD -MP -MF $(DEPDIR)/libldtestplug3_la-testplug3.Tpo -c -o libldtestplug3_la-testplug3.lo `test -f 'testplug3.c' || echo '$(srcdir)/'`testplug3.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libldtestplug3_la-testplug3.Tpo $(DEPDIR)/libldtestplug3_la-testplug3.Plo
#	$(AM_V_CC)source='testplug3.c' object='libldtestplug3_la-testplug3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug3_la_CFLAGS) $(CFLAGS) -c -o libldtestplug3_la-testplug3.lo `test -f 'testplug3.c' || echo '$(srcdir)/'`testplug3.c

libldtestplug4_la-testplug4.lo: testplug4.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug4_la_CFLAGS) $(CFLAGS) -MT libldtestplug4_la-testplug4.lo -MD -MP -MF $(DEPDIR)/libldtestplug4_la-testplug4.Tpo -c -o libldtestplug4_la-testplug4.lo `test -f 'testplug4.c' || echo '$(srcdir)/'`testplug4.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libldtestplug4_la-testplug4.Tpo $(DEPDIR)/libldtestplug4_la-testplug4.Plo
#	$(AM_V_CC)source='testplug4.c' object='libldtestplug4_la-testplug4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libldtestplug4_la_CFLAGS) $(CFLAGS) -c -o libldtestplug4_la-testplug4.lo `test -f 'testplug4.c' || echo '$(srcdir)/'`testplug4.c

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

ld.info: ld.texi $(ld_TEXINFOS)
	@echo "NOT REBUILDING $@"
NetBSD_DISABLED_ld.info:
	$(AM_V_MAKEINFO)restore=: && backupdir="$(am__leading_dot)am$$$$" && \
	rm -rf $$backupdir && mkdir $$backupdir && \
	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
	  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
	    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
	  done; \
	else :; fi && \
	if $(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir) \
	 -o $@ `test -f 'ld.texi' || echo '$(srcdir)/'`ld.texi; \
	then \
	  rc=0; \
	else \
	  rc=$$?; \
	  $$restore $$backupdir/* `echo "./$@" | sed 's|[^/]*$$||'`; \
	fi; \
	rm -rf $$backupdir; exit $$rc

ld.dvi: ld.texi $(ld_TEXINFOS) 
	$(AM_V_TEXI2DVI)TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
	MAKEINFO='$(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir)' \
	$(TEXI2DVI) $(AM_V_texinfo) --build-dir=$(@:.dvi=.t2d) -o $@ $(AM_V_texidevnull) \
	`test -f 'ld.texi' || echo '$(srcdir)/'`ld.texi

ld.pdf: ld.texi $(ld_TEXINFOS) 
	$(AM_V_TEXI2PDF)TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
	MAKEINFO='$(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir)' \
	$(TEXI2PDF) $(AM_V_texinfo) --build-dir=$(@:.pdf=.t2p) -o $@ $(AM_V_texidevnull) \
	`test -f 'ld.texi' || echo '$(srcdir)/'`ld.texi

ld.html: ld.texi $(ld_TEXINFOS) 
	$(AM_V_MAKEINFO)rm -rf $(@:.html=.htp)
	$(AM_V_at)if $(MAKEINFOHTML) $(AM_MAKEINFOHTMLFLAGS) $(MAKEINFOFLAGS) -I $(srcdir) \
	 -o $(@:.html=.htp) `test -f 'ld.texi' || echo '$(srcdir)/'`ld.texi; \
	then \
	  rm -rf $@ && mv $(@:.html=.htp) $@; \
	else \
	  rm -rf $(@:.html=.htp); exit 1; \
	fi
.dvi.ps:
	$(AM_V_DVIPS)TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
	$(DVIPS) $(AM_V_texinfo) -o $@ $<

uninstall-dvi-am:
	@$(NORMAL_UNINSTALL)
	@list='$(DVIS)'; test -n "$(dvidir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(dvidir)/$$f'"; \
	  rm -f "$(DESTDIR)$(dvidir)/$$f"; \
	done

uninstall-html-am:
	@$(NORMAL_UNINSTALL)
	@list='$(HTMLS)'; test -n "$(htmldir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " rm -rf '$(DESTDIR)$(htmldir)/$$f'"; \
	  rm -rf "$(DESTDIR)$(htmldir)/$$f"; \
	done

uninstall-info-am:
	@$(PRE_UNINSTALL)
	@if test -d '$(DESTDIR)$(infodir)' && $(am__can_run_installinfo); then \
	  list='$(INFO_DEPS)'; \
	  for file in $$list; do \
	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
	    echo " install-info --info-dir='$(DESTDIR)$(infodir)' --remove '$(DESTDIR)$(infodir)/$$relfile'"; \
	    if install-info --info-dir="$(DESTDIR)$(infodir)" --remove "$(DESTDIR)$(infodir)/$$relfile"; \
	    then :; else test ! -f "$(DESTDIR)$(infodir)/$$relfile" || exit 1; fi; \
	  done; \
	else :; fi
	@$(NORMAL_UNINSTALL)
	@list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  relfile=`echo "$$file" | sed 's|^.*/||'`; \
	  relfile_i=`echo "$$relfile" | sed 's|\.info$$||;s|$$|.i|'`; \
	  (if test -d "$(DESTDIR)$(infodir)" && cd "$(DESTDIR)$(infodir)"; then \
	     echo " cd '$(DESTDIR)$(infodir)' && rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]"; \
	     rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]; \
	   else :; fi); \
	done

uninstall-pdf-am:
	@$(NORMAL_UNINSTALL)
	@list='$(PDFS)'; test -n "$(pdfdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pdfdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pdfdir)/$$f"; \
	done

uninstall-ps-am:
	@$(NORMAL_UNINSTALL)
	@list='$(PSS)'; test -n "$(psdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(psdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(psdir)/$$f"; \
	done

dist-info: $(INFO_DEPS)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	list='$(INFO_DEPS)'; \
	for base in $$list; do \
	  case $$base in \
	    $(srcdir)/*) base=`echo "$$base" | sed "s|^$$srcdirstrip/||"`;; \
	  esac; \
	  if test -f $$base; then d=.; else d=$(srcdir); fi; \
	  base_i=`echo "$$base" | sed 's|\.info$$||;s|$$|.i|'`; \
	  for file in $$d/$$base $$d/$$base-[0-9] $$d/$$base-[0-9][0-9] $$d/$$base_i[0-9] $$d/$$base_i[0-9][0-9]; do \
	    if test -f $$file; then \
	      relfile=`expr "$$file" : "$$d/\(.*\)"`; \
	      test -f "$(distdir)/$$relfile" || \
		cp -p $$file "$(distdir)/$$relfile"; \
	    else :; fi; \
	  done; \
	done

mostlyclean-aminfo:
	-rm -rf ld.t2d ld.t2p

clean-aminfo:
	-test -z "ld.dvi ld.pdf ld.ps ld.html" \
	|| rm -rf ld.dvi ld.pdf ld.ps ld.html

maintainer-clean-aminfo:
	@list='$(INFO_DEPS)'; for i in $$list; do \
	  i_i=`echo "$$i" | sed 's|\.info$$||;s|$$|.i|'`; \
	  echo " rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]"; \
	  rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]; \
	done
install-man1: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files
site.exp: Makefile $(EXTRA_DEJAGNU_SITE_CONFIG)
	@echo 'Making a new site.exp file ...'
	@echo '## these variables are automatically generated by make ##' >site.tmp
	@echo '# Do not edit here.  If you wish to override these values' >>site.tmp
	@echo '# edit the last section' >>site.tmp
	@echo 'set srcdir "$(srcdir)"' >>site.tmp
	@echo "set objdir `pwd`" >>site.tmp
	@echo 'set build_alias "$(build_alias)"' >>site.tmp
	@echo 'set build_triplet $(build_triplet)' >>site.tmp
	@echo 'set host_alias "$(host_alias)"' >>site.tmp
	@echo 'set host_triplet $(host_triplet)' >>site.tmp
	@echo 'set target_alias "$(target_alias)"' >>site.tmp
	@echo 'set target_triplet $(target_triplet)' >>site.tmp
	@list='$(EXTRA_DEJAGNU_SITE_CONFIG)'; for f in $$list; do \
	  echo "## Begin content included from file $$f.  Do not modify. ##" \
	   && cat `test -f "$$f" || echo '$(srcdir)/'`$$f \
	   && echo "## End content included from file $$f. ##" \
	   || exit 1; \
	 done >> site.tmp
	@echo "## End of auto-generated content; you can edit from here. ##" >> site.tmp
	@if test -f site.exp; then \
	   sed -e '1,/^## End of auto-generated content.*##/d' site.exp >> site.tmp; \
	 fi
	@-rm -f site.bak
	@test ! -f site.exp || mv site.exp site.bak
	@mv site.tmp site.exp

distclean-DEJAGNU:
	-rm -f site.exp site.bak
	-l='$(DEJATOOL)'; for tool in $$l; do \
	  rm -f $$tool.sum $$tool.log; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(INFO_DEPS) $(LTLIBRARIES) $(PROGRAMS) $(MANS) \
		config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bfdplugindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(infodir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f deffilep.c
	-rm -f deffilep.h
	-rm -f ldgram.c
	-rm -f ldgram.h
	-rm -f ldlex.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-aminfo clean-bfdpluginLTLIBRARIES clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-DEJAGNU distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-local distclean-tags

dvi: dvi-recursive

dvi-am: $(DVIS)

html: html-recursive

html-am: $(HTMLS) html-local

info: info-recursive

info-am: $(INFO_DEPS)

install-data-am: install-bfdpluginLTLIBRARIES install-data-local \
	install-info-am install-man

install-dvi: install-dvi-recursive

install-dvi-am: $(DVIS)
	@$(NORMAL_INSTALL)
	@list='$(DVIS)'; test -n "$(dvidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dvidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dvidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dvidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dvidir)" || exit $$?; \
	done
install-exec-am: install-binPROGRAMS install-exec-local

install-html: install-html-recursive

install-html-am: $(HTMLS)
	@$(NORMAL_INSTALL)
	@list='$(HTMLS)'; list2=; test -n "$(htmldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(htmldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(htmldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p" || test -d "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__strip_dir) \
	  d2=$$d$$p; \
	  if test -d "$$d2"; then \
	    echo " $(MKDIR_P) '$(DESTDIR)$(htmldir)/$$f'"; \
	    $(MKDIR_P) "$(DESTDIR)$(htmldir)/$$f" || exit 1; \
	    echo " $(INSTALL_DATA) '$$d2'/* '$(DESTDIR)$(htmldir)/$$f'"; \
	    $(INSTALL_DATA) "$$d2"/* "$(DESTDIR)$(htmldir)/$$f" || exit $$?; \
	  else \
	    list2="$$list2 $$d2"; \
	  fi; \
	done; \
	test -z "$$list2" || { echo "$$list2" | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(htmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(htmldir)" || exit $$?; \
	done; }
install-info: install-info-recursive

install-info-am: $(INFO_DEPS)
	@$(NORMAL_INSTALL)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	list='$(INFO_DEPS)'; test -n "$(infodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(infodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(infodir)" || exit 1; \
	fi; \
	for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	  esac; \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  file_i=`echo "$$file" | sed 's|\.info$$||;s|$$|.i|'`; \
	  for ifile in $$d/$$file $$d/$$file-[0-9] $$d/$$file-[0-9][0-9] \
	               $$d/$$file_i[0-9] $$d/$$file_i[0-9][0-9] ; do \
	    if test -f $$ifile; then \
	      echo "$$ifile"; \
	    else : ; fi; \
	  done; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(infodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(infodir)" || exit $$?; done
	@$(POST_INSTALL)
	@if $(am__can_run_installinfo); then \
	  list='$(INFO_DEPS)'; test -n "$(infodir)" || list=; \
	  for file in $$list; do \
	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
	    echo " install-info --info-dir='$(DESTDIR)$(infodir)' '$(DESTDIR)$(infodir)/$$relfile'";\
	    install-info --info-dir="$(DESTDIR)$(infodir)" "$(DESTDIR)$(infodir)/$$relfile" || :;\
	  done; \
	else : ; fi
install-man: install-man1

install-pdf: install-pdf-recursive

install-pdf-am: $(PDFS)
	@$(NORMAL_INSTALL)
	@list='$(PDFS)'; test -n "$(pdfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pdfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pdfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pdfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pdfdir)" || exit $$?; done
install-ps: install-ps-recursive

install-ps-am: $(PSS)
	@$(NORMAL_INSTALL)
	@list='$(PSS)'; test -n "$(psdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(psdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(psdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(psdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(psdir)" || exit $$?; done
installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-aminfo \
	maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-aminfo mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-local

pdf: pdf-recursive

pdf-am: $(PDFS)

ps: ps-recursive

ps-am: $(PSS)

uninstall-am: uninstall-bfdpluginLTLIBRARIES uninstall-binPROGRAMS \
	uninstall-dvi-am uninstall-html-am uninstall-info-am \
	uninstall-man uninstall-pdf-am uninstall-ps-am

uninstall-man: uninstall-man1

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-DEJAGNU check-am clean clean-aminfo \
	clean-bfdpluginLTLIBRARIES clean-binPROGRAMS clean-cscope \
	clean-generic clean-libtool clean-noinstLTLIBRARIES cscope \
	cscopelist-am ctags ctags-am dist-info distclean \
	distclean-DEJAGNU distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-local distclean-tags \
	dvi dvi-am html html-am html-local info info-am install \
	install-am install-bfdpluginLTLIBRARIES install-binPROGRAMS \
	install-data install-data-am install-data-local install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-local \
	install-html install-html-am install-info install-info-am \
	install-man install-man1 install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-aminfo maintainer-clean-generic mostlyclean \
	mostlyclean-aminfo mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-local pdf pdf-am ps ps-am tags \
	tags-am uninstall uninstall-am uninstall-bfdpluginLTLIBRARIES \
	uninstall-binPROGRAMS uninstall-dvi-am uninstall-html-am \
	uninstall-info-am uninstall-man uninstall-man1 \
	uninstall-pdf-am uninstall-ps-am

.PRECIOUS: Makefile


# Disable -Werror, if it has been enabled, since old versions of bison/
# yacc will produce working code which contain compile time warnings.
ldgram.o: ldgram.c
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `test -f ldgram.c || echo $(srcdir)/`ldgram.c $(NO_WERROR)
	$(AM_V_at)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='ldgram.c' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC)$(COMPILE) -c `test -f ldgram.c || echo $(srcdir)/`ldgram.c $(NO_WERROR)

ldlex-wrapper.o: ldlex-wrapper.c ldlex.c
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $(srcdir)/ldlex-wrapper.c $(NO_WERROR)
	$(AM_V_at)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='ldlex-wrapper.c' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC)$(COMPILE) -c $(srcdir)/ldlex-wrapper.c $(NO_WERROR)

deffilep.o: deffilep.c
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `test -f deffilep.c || echo $(srcdir)/`deffilep.c $(NO_WERROR)
	$(AM_V_at)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='deffilep.c' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC)$(COMPILE) -c `test -f deffilep.c || echo $(srcdir)/`deffilep.c $(NO_WERROR)

po/SRC-POTFILES.in: # Makefile
	for f in $(SRC_POTFILES); do echo $$f; done | LC_ALL=C sort > $@-tmp \
	  && mv $@-tmp $(srcdir)/po/SRC-POTFILES.in

po/BLD-POTFILES.in: # Makefile $(BLD_POTFILES)
	for f in $(BLD_POTFILES); do echo $$f; done | LC_ALL=C sort > $@-tmp \
	  && mv $@-tmp $(srcdir)/po/BLD-POTFILES.in

ldmain.o: ldmain.c config.status
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ \
	  -DDEFAULT_EMULATION='"$(EMUL)"' \
	  -DBINDIR='"$(bindir)"' -DTOOLBINDIR='"$(tooldir)/bin"' \
	  -DTARGET='"m68k--netbsdelf"' -DTARGET_SYSTEM_ROOT=\"$(TARGET_SYSTEM_ROOT)\" -DTARGET_SYSTEM_ROOT_RELOCATABLE \
	  $(srcdir)/ldmain.c
	$(AM_V_at)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='ldmain.c' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC)$(COMPILE) -c -DDEFAULT_EMULATION='"$(EMUL)"' \
#	  -DBINDIR='"$(bindir)"' -DTOOLBINDIR='"$(tooldir)/bin"' \
#	  -DTARGET='"m68k--netbsdelf"' -DTARGET_SYSTEM_ROOT=\"$(TARGET_SYSTEM_ROOT)\" -DTARGET_SYSTEM_ROOT_RELOCATABLE \
#	  $(srcdir)/ldmain.c

ldfile.o: ldfile.c config.status
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ \
	-DSCRIPTDIR='"$(scriptdir)"' -DBINDIR='"$(bindir)"' -DTOOLBINDIR='"$(tooldir)/bin"' \
	 $(srcdir)/ldfile.c
	$(AM_V_at)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='ldfile.c' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC)$(COMPILE) -c -DSCRIPTDIR='"$(scriptdir)"' -DBINDIR='"$(bindir)"' \
#	  -DTOOLBINDIR='"$(tooldir)/bin"' \
#	  $(srcdir)/ldfile.c

eelf32_spu.o: eelf32_spu.c
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ \
	  -DEMBEDSPU="\"`echo embedspu | sed '$(transform)'`\"" eelf32_spu.c
	$(AM_V_at)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='eelf32_spu.c' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC)$(COMPILE) -c -DEMBEDSPU="\"`echo embedspu | sed '$(transform)'`\"" \
#	  eelf32_spu.c

ldemul-list.h: Makefile
	(echo "/* This file is automatically generated.  DO NOT EDIT! */";\
	for f in `echo " " ${EMULATION_OFILES} "" \
	 | sed -e 's/ e/ ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
	    echo "extern ld_emulation_xfer_type ld_$${f}_emulation;"; \
	done;\
	echo "";\
	echo "#define EMULATION_LIST \\";\
	for f in `echo " " ${EMULATION_OFILES} "" \
	 | sed -e 's/ e/ ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
	    echo "  &ld_$${f}_emulation, \\"; \
	done;\
	echo "  0") >ldemul-tmp.h
	mv ldemul-tmp.h ldemul-list.h

stringify.sed: ${srcdir}/emultempl/$(STRINGIFY)
	  $(AM_V_GEN)cp ${srcdir}/emultempl/$(STRINGIFY) stringify.sed


tdir_m68kelfnbsd=m68k--netbsdelf

# We can't use pattern rules as we don't want to depend on GNU
# make, or else these rules could have been expressed in one
# two-liner: 'e%.c:' and '	${GENSCRIPTS} $* "$(tdir_$*)"'.
# (The recursive variable expansion is portable.)

run-genscripts:
	$(AM_V_at)${GENSCRIPTS} $(script_target) "$($(script_tdirname))"

.PHONY: run-genscripts

$(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)
	$(AM_V_GEN)base=`echo $@ | sed -e 's,e\(.*\).c,\1,'`; \
	$(MAKE) run-genscripts "script_target=$$base" "script_tdirname=tdir_$$base"

# It's a pity we can't generate these include "./deps/e*.Pc" lines
# from ALL_EMULATION_SOURCES and ALL_64_EMULATION_SOURCES, but that isn't
# so easy to do.  What we'd like to do is have automake generate these
# lines in Makefile.in, but I can't see a way of doing that.  Generating
# the includes at configure time is possible but then we'd need to
# duplicate autoconf/automake handling of dependency files.
include ./$(DEPDIR)/eaix5ppc.Pc
include ./$(DEPDIR)/eaix5rs6.Pc
include ./$(DEPDIR)/eaixppc.Pc
include ./$(DEPDIR)/eaixrs6.Pc
include ./$(DEPDIR)/ealpha.Pc
include ./$(DEPDIR)/ealphavms.Pc
include ./$(DEPDIR)/earcelf.Pc
include ./$(DEPDIR)/earclinux.Pc
include ./$(DEPDIR)/earclinux_nps.Pc
include ./$(DEPDIR)/earcv2elf.Pc
include ./$(DEPDIR)/earcv2elfx.Pc
include ./$(DEPDIR)/earm_wince_pe.Pc
include ./$(DEPDIR)/earmelf.Pc
include ./$(DEPDIR)/earmelf_fbsd.Pc
include ./$(DEPDIR)/earmelf_fuchsia.Pc
include ./$(DEPDIR)/earmelf_haiku.Pc
include ./$(DEPDIR)/earmelf_linux.Pc
include ./$(DEPDIR)/earmelf_linux_eabi.Pc
include ./$(DEPDIR)/earmelf_linux_fdpiceabi.Pc
include ./$(DEPDIR)/earmelf_nacl.Pc
include ./$(DEPDIR)/earmelf_nbsd.Pc
include ./$(DEPDIR)/earmelf_phoenix.Pc
include ./$(DEPDIR)/earmelf_vxworks.Pc
include ./$(DEPDIR)/earmelfb.Pc
include ./$(DEPDIR)/earmelfb_fbsd.Pc
include ./$(DEPDIR)/earmelfb_fuchsia.Pc
include ./$(DEPDIR)/earmelfb_linux.Pc
include ./$(DEPDIR)/earmelfb_linux_eabi.Pc
include ./$(DEPDIR)/earmelfb_linux_fdpiceabi.Pc
include ./$(DEPDIR)/earmelfb_nacl.Pc
include ./$(DEPDIR)/earmelfb_nbsd.Pc
include ./$(DEPDIR)/earmnto.Pc
include ./$(DEPDIR)/earmpe.Pc
include ./$(DEPDIR)/eavr1.Pc
include ./$(DEPDIR)/eavr2.Pc
include ./$(DEPDIR)/eavr25.Pc
include ./$(DEPDIR)/eavr3.Pc
include ./$(DEPDIR)/eavr31.Pc
include ./$(DEPDIR)/eavr35.Pc
include ./$(DEPDIR)/eavr4.Pc
include ./$(DEPDIR)/eavr5.Pc
include ./$(DEPDIR)/eavr51.Pc
include ./$(DEPDIR)/eavr6.Pc
include ./$(DEPDIR)/eavrtiny.Pc
include ./$(DEPDIR)/eavrxmega1.Pc
include ./$(DEPDIR)/eavrxmega2.Pc
include ./$(DEPDIR)/eavrxmega3.Pc
include ./$(DEPDIR)/eavrxmega4.Pc
include ./$(DEPDIR)/eavrxmega5.Pc
include ./$(DEPDIR)/eavrxmega6.Pc
include ./$(DEPDIR)/eavrxmega7.Pc
include ./$(DEPDIR)/ecrisaout.Pc
include ./$(DEPDIR)/ecriself.Pc
include ./$(DEPDIR)/ecrislinux.Pc
include ./$(DEPDIR)/ecskyelf.Pc
include ./$(DEPDIR)/ecskyelf_linux.Pc
include ./$(DEPDIR)/ed10velf.Pc
include ./$(DEPDIR)/ed30v_e.Pc
include ./$(DEPDIR)/ed30v_o.Pc
include ./$(DEPDIR)/ed30velf.Pc
include ./$(DEPDIR)/eelf32_dlx.Pc
include ./$(DEPDIR)/eelf32_sparc.Pc
include ./$(DEPDIR)/eelf32_sparc_sol2.Pc
include ./$(DEPDIR)/eelf32_sparc_vxworks.Pc
include ./$(DEPDIR)/eelf32_spu.Pc
include ./$(DEPDIR)/eelf32_tic6x_be.Pc
include ./$(DEPDIR)/eelf32_tic6x_elf_be.Pc
include ./$(DEPDIR)/eelf32_tic6x_elf_le.Pc
include ./$(DEPDIR)/eelf32_tic6x_le.Pc
include ./$(DEPDIR)/eelf32_tic6x_linux_be.Pc
include ./$(DEPDIR)/eelf32_tic6x_linux_le.Pc
include ./$(DEPDIR)/eelf32am33lin.Pc
include ./$(DEPDIR)/eelf32bfin.Pc
include ./$(DEPDIR)/eelf32bfinfd.Pc
include ./$(DEPDIR)/eelf32cr16.Pc
include ./$(DEPDIR)/eelf32crx.Pc
include ./$(DEPDIR)/eelf32epiphany.Pc
include ./$(DEPDIR)/eelf32epiphany_4x4.Pc
include ./$(DEPDIR)/eelf32fr30.Pc
include ./$(DEPDIR)/eelf32frv.Pc
include ./$(DEPDIR)/eelf32frvfd.Pc
include ./$(DEPDIR)/eelf32ft32.Pc
include ./$(DEPDIR)/eelf32ip2k.Pc
include ./$(DEPDIR)/eelf32iq10.Pc
include ./$(DEPDIR)/eelf32iq2000.Pc
include ./$(DEPDIR)/eelf32lm32.Pc
include ./$(DEPDIR)/eelf32lm32fd.Pc
include ./$(DEPDIR)/eelf32lppc.Pc
include ./$(DEPDIR)/eelf32lppclinux.Pc
include ./$(DEPDIR)/eelf32lppcnto.Pc
include ./$(DEPDIR)/eelf32lppcsim.Pc
include ./$(DEPDIR)/eelf32m32c.Pc
include ./$(DEPDIR)/eelf32mb_linux.Pc
include ./$(DEPDIR)/eelf32mbel_linux.Pc
include ./$(DEPDIR)/eelf32mcore.Pc
include ./$(DEPDIR)/eelf32mep.Pc
include ./$(DEPDIR)/eelf32metag.Pc
include ./$(DEPDIR)/eelf32microblaze.Pc
include ./$(DEPDIR)/eelf32microblazeel.Pc
include ./$(DEPDIR)/eelf32moxie.Pc
include ./$(DEPDIR)/eelf32mt.Pc
include ./$(DEPDIR)/eelf32or1k.Pc
include ./$(DEPDIR)/eelf32or1k_linux.Pc
include ./$(DEPDIR)/eelf32ppc.Pc
include ./$(DEPDIR)/eelf32ppc_fbsd.Pc
include ./$(DEPDIR)/eelf32ppchaiku.Pc
include ./$(DEPDIR)/eelf32ppclinux.Pc
include ./$(DEPDIR)/eelf32ppcnto.Pc
include ./$(DEPDIR)/eelf32ppcsim.Pc
include ./$(DEPDIR)/eelf32ppcvxworks.Pc
include ./$(DEPDIR)/eelf32ppcwindiss.Pc
include ./$(DEPDIR)/eelf32rl78.Pc
include ./$(DEPDIR)/eelf32rx.Pc
include ./$(DEPDIR)/eelf32rx_linux.Pc
include ./$(DEPDIR)/eelf32tilegx.Pc
include ./$(DEPDIR)/eelf32tilegx_be.Pc
include ./$(DEPDIR)/eelf32tilepro.Pc
include ./$(DEPDIR)/eelf32vax.Pc
include ./$(DEPDIR)/eelf32visium.Pc
include ./$(DEPDIR)/eelf32xstormy16.Pc
include ./$(DEPDIR)/eelf32xtensa.Pc
include ./$(DEPDIR)/eelf32z80.Pc
include ./$(DEPDIR)/eelf_i386.Pc
include ./$(DEPDIR)/eelf_i386_be.Pc
include ./$(DEPDIR)/eelf_i386_fbsd.Pc
include ./$(DEPDIR)/eelf_i386_haiku.Pc
include ./$(DEPDIR)/eelf_i386_ldso.Pc
include ./$(DEPDIR)/eelf_i386_sol2.Pc
include ./$(DEPDIR)/eelf_i386_vxworks.Pc
include ./$(DEPDIR)/eelf_iamcu.Pc
include ./$(DEPDIR)/eelf_s390.Pc
include ./$(DEPDIR)/eh8300elf.Pc
include ./$(DEPDIR)/eh8300elf_linux.Pc
include ./$(DEPDIR)/eh8300helf.Pc
include ./$(DEPDIR)/eh8300helf_linux.Pc
include ./$(DEPDIR)/eh8300hnelf.Pc
include ./$(DEPDIR)/eh8300self.Pc
include ./$(DEPDIR)/eh8300self_linux.Pc
include ./$(DEPDIR)/eh8300snelf.Pc
include ./$(DEPDIR)/eh8300sxelf.Pc
include ./$(DEPDIR)/eh8300sxelf_linux.Pc
include ./$(DEPDIR)/eh8300sxnelf.Pc
include ./$(DEPDIR)/ehppaelf.Pc
include ./$(DEPDIR)/ehppalinux.Pc
include ./$(DEPDIR)/ehppanbsd.Pc
include ./$(DEPDIR)/ehppaobsd.Pc
include ./$(DEPDIR)/ei386aout.Pc
include ./$(DEPDIR)/ei386beos.Pc
include ./$(DEPDIR)/ei386bsd.Pc
include ./$(DEPDIR)/ei386go32.Pc
include ./$(DEPDIR)/ei386lynx.Pc
include ./$(DEPDIR)/ei386moss.Pc
include ./$(DEPDIR)/ei386msdos.Pc
include ./$(DEPDIR)/ei386nto.Pc
include ./$(DEPDIR)/ei386pe.Pc
include ./$(DEPDIR)/ei386pe_posix.Pc
include ./$(DEPDIR)/em32relf.Pc
include ./$(DEPDIR)/em32relf_linux.Pc
include ./$(DEPDIR)/em32rlelf.Pc
include ./$(DEPDIR)/em32rlelf_linux.Pc
include ./$(DEPDIR)/em68hc11elf.Pc
include ./$(DEPDIR)/em68hc11elfb.Pc
include ./$(DEPDIR)/em68hc12elf.Pc
include ./$(DEPDIR)/em68hc12elfb.Pc
include ./$(DEPDIR)/em68kelf.Pc
include ./$(DEPDIR)/em68kelfnbsd.Pc
include ./$(DEPDIR)/em9s12zelf.Pc
include ./$(DEPDIR)/emcorepe.Pc
include ./$(DEPDIR)/emn10200.Pc
include ./$(DEPDIR)/emn10300.Pc
include ./$(DEPDIR)/emoxiebox.Pc
include ./$(DEPDIR)/emsp430X.Pc
include ./$(DEPDIR)/emsp430elf.Pc
include ./$(DEPDIR)/ends32belf.Pc
include ./$(DEPDIR)/ends32belf16m.Pc
include ./$(DEPDIR)/ends32belf_linux.Pc
include ./$(DEPDIR)/ends32elf.Pc
include ./$(DEPDIR)/ends32elf16m.Pc
include ./$(DEPDIR)/ends32elf_linux.Pc
include ./$(DEPDIR)/enios2elf.Pc
include ./$(DEPDIR)/enios2linux.Pc
include ./$(DEPDIR)/ens32knbsd.Pc
include ./$(DEPDIR)/epc532macha.Pc
include ./$(DEPDIR)/epdp11.Pc
include ./$(DEPDIR)/epjelf.Pc
include ./$(DEPDIR)/epjlelf.Pc
include ./$(DEPDIR)/eppcmacos.Pc
include ./$(DEPDIR)/epruelf.Pc
include ./$(DEPDIR)/escore3_elf.Pc
include ./$(DEPDIR)/escore7_elf.Pc
include ./$(DEPDIR)/esh.Pc
include ./$(DEPDIR)/eshelf.Pc
include ./$(DEPDIR)/eshelf_fd.Pc
include ./$(DEPDIR)/eshelf_linux.Pc
include ./$(DEPDIR)/eshelf_nbsd.Pc
include ./$(DEPDIR)/eshelf_nto.Pc
include ./$(DEPDIR)/eshelf_uclinux.Pc
include ./$(DEPDIR)/eshelf_vxworks.Pc
include ./$(DEPDIR)/eshl.Pc
include ./$(DEPDIR)/eshlelf.Pc
include ./$(DEPDIR)/eshlelf_fd.Pc
include ./$(DEPDIR)/eshlelf_linux.Pc
include ./$(DEPDIR)/eshlelf_nbsd.Pc
include ./$(DEPDIR)/eshlelf_nto.Pc
include ./$(DEPDIR)/eshlelf_vxworks.Pc
include ./$(DEPDIR)/eshpe.Pc
include ./$(DEPDIR)/etic30coff.Pc
include ./$(DEPDIR)/etic3xcoff.Pc
include ./$(DEPDIR)/etic3xcoff_onchip.Pc
include ./$(DEPDIR)/etic4xcoff.Pc
include ./$(DEPDIR)/etic54xcoff.Pc
include ./$(DEPDIR)/ev850.Pc
include ./$(DEPDIR)/ev850_rh850.Pc
include ./$(DEPDIR)/evanilla.Pc
include ./$(DEPDIR)/evaxnbsd.Pc
include ./$(DEPDIR)/exgateelf.Pc
include ./$(DEPDIR)/ez80.Pc
include ./$(DEPDIR)/ez8001.Pc
include ./$(DEPDIR)/ez8002.Pc

include ./$(DEPDIR)/eaarch64cloudabi.Pc
include ./$(DEPDIR)/eaarch64cloudabib.Pc
include ./$(DEPDIR)/eaarch64elf.Pc
include ./$(DEPDIR)/eaarch64elf32.Pc
include ./$(DEPDIR)/eaarch64elf32b.Pc
include ./$(DEPDIR)/eaarch64elfb.Pc
include ./$(DEPDIR)/eaarch64fbsd.Pc
include ./$(DEPDIR)/eaarch64fbsdb.Pc
include ./$(DEPDIR)/eaarch64haiku.Pc
include ./$(DEPDIR)/eaarch64linux.Pc
include ./$(DEPDIR)/eaarch64linux32.Pc
include ./$(DEPDIR)/eaarch64linux32b.Pc
include ./$(DEPDIR)/eaarch64linuxb.Pc
include ./$(DEPDIR)/eelf32_x86_64.Pc
include ./$(DEPDIR)/eelf32b4300.Pc
include ./$(DEPDIR)/eelf32bmip.Pc
include ./$(DEPDIR)/eelf32bmipn32.Pc
include ./$(DEPDIR)/eelf32briscv.Pc
include ./$(DEPDIR)/eelf32briscv_ilp32.Pc
include ./$(DEPDIR)/eelf32briscv_ilp32f.Pc
include ./$(DEPDIR)/eelf32bsmip.Pc
include ./$(DEPDIR)/eelf32btsmip.Pc
include ./$(DEPDIR)/eelf32btsmip_fbsd.Pc
include ./$(DEPDIR)/eelf32btsmipn32.Pc
include ./$(DEPDIR)/eelf32btsmipn32_fbsd.Pc
include ./$(DEPDIR)/eelf32ebmip.Pc
include ./$(DEPDIR)/eelf32ebmipvxworks.Pc
include ./$(DEPDIR)/eelf32elmip.Pc
include ./$(DEPDIR)/eelf32elmipvxworks.Pc
include ./$(DEPDIR)/eelf32l4300.Pc
include ./$(DEPDIR)/eelf32loongarch.Pc
include ./$(DEPDIR)/eelf32lmip.Pc
include ./$(DEPDIR)/eelf32lr5900.Pc
include ./$(DEPDIR)/eelf32lr5900n32.Pc
include ./$(DEPDIR)/eelf32lriscv.Pc
include ./$(DEPDIR)/eelf32lriscv_ilp32.Pc
include ./$(DEPDIR)/eelf32lriscv_ilp32f.Pc
include ./$(DEPDIR)/eelf32lsmip.Pc
include ./$(DEPDIR)/eelf32ltsmip.Pc
include ./$(DEPDIR)/eelf32ltsmip_fbsd.Pc
include ./$(DEPDIR)/eelf32ltsmipn32.Pc
include ./$(DEPDIR)/eelf32ltsmipn32_fbsd.Pc
include ./$(DEPDIR)/eelf32mipswindiss.Pc
include ./$(DEPDIR)/eelf64_aix.Pc
include ./$(DEPDIR)/eelf64_ia64.Pc
include ./$(DEPDIR)/eelf64_ia64_fbsd.Pc
include ./$(DEPDIR)/eelf64_ia64_vms.Pc
include ./$(DEPDIR)/eelf64_s390.Pc
include ./$(DEPDIR)/eelf64_sparc.Pc
include ./$(DEPDIR)/eelf64_sparc_fbsd.Pc
include ./$(DEPDIR)/eelf64_sparc_sol2.Pc
include ./$(DEPDIR)/eelf64alpha.Pc
include ./$(DEPDIR)/eelf64alpha_fbsd.Pc
include ./$(DEPDIR)/eelf64alpha_nbsd.Pc
include ./$(DEPDIR)/eelf64bmip.Pc
include ./$(DEPDIR)/eelf64bpf.Pc
include ./$(DEPDIR)/eelf64briscv.Pc
include ./$(DEPDIR)/eelf64briscv_lp64.Pc
include ./$(DEPDIR)/eelf64briscv_lp64f.Pc
include ./$(DEPDIR)/eelf64btsmip.Pc
include ./$(DEPDIR)/eelf64btsmip_fbsd.Pc
include ./$(DEPDIR)/eelf64hppa.Pc
include ./$(DEPDIR)/eelf64lppc.Pc
include ./$(DEPDIR)/eelf64lppc_fbsd.Pc
include ./$(DEPDIR)/eelf64loongarch.Pc
include ./$(DEPDIR)/eelf64lriscv.Pc
include ./$(DEPDIR)/eelf64lriscv_lp64.Pc
include ./$(DEPDIR)/eelf64lriscv_lp64f.Pc
include ./$(DEPDIR)/eelf64ltsmip.Pc
include ./$(DEPDIR)/eelf64ltsmip_fbsd.Pc
include ./$(DEPDIR)/eelf64mmix.Pc
include ./$(DEPDIR)/eelf64ppc.Pc
include ./$(DEPDIR)/eelf64ppc_fbsd.Pc
include ./$(DEPDIR)/eelf64rdos.Pc
include ./$(DEPDIR)/eelf64tilegx.Pc
include ./$(DEPDIR)/eelf64tilegx_be.Pc
include ./$(DEPDIR)/eelf_mipsel_haiku.Pc
include ./$(DEPDIR)/eelf_x86_64.Pc
include ./$(DEPDIR)/eelf_x86_64_cloudabi.Pc
include ./$(DEPDIR)/eelf_x86_64_fbsd.Pc
include ./$(DEPDIR)/eelf_x86_64_haiku.Pc
include ./$(DEPDIR)/eelf_x86_64_sol2.Pc
include ./$(DEPDIR)/ehppa64linux.Pc
include ./$(DEPDIR)/ei386pep.Pc
include ./$(DEPDIR)/emmo.Pc

check-DEJAGNU: site.exp
	(cd .libs; test -e ldscripts || test ! -e ld-new || $(LN_S) ../ldscripts .)
	srcroot=`cd $(srcdir) && pwd`; export srcroot; \
	r=`pwd`; export r; \
	LC_ALL=C; export LC_ALL; \
	EXPECT=$(EXPECT); export EXPECT; \
	runtest=$(RUNTEST); \
	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
	  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \
		CC="$(CC)" CFLAGS="$(CFLAGS)" \
		CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" \
		CC_FOR_TARGET="$(CC_FOR_TARGET)" \
		CFLAGS_FOR_TARGET="$(CFLAGS_FOR_TARGET)" \
		CXX_FOR_TARGET="$(CXX_FOR_TARGET)" \
		CXXFLAGS_FOR_TARGET="$(CXXFLAGS_FOR_TARGET)" \
		OFILES="$(OFILES)" BFDLIB="$(TESTBFDLIB)" CTFLIB="$(TESTCTFLIB) $(ZLIB)" \
		LIBIBERTY="$(LIBIBERTY) $(LIBINTL)" LIBS="$(LIBS)" \
		DO_COMPARE="`echo '$(do_compare)' | sed -e 's,\\$$,,g'`" \
		$(RUNTESTFLAGS); \
	else echo "WARNING: could not find \`runtest'" 1>&2; :;\
	fi

development.exp: $(BFDDIR)/development.sh
	$(AM_V_GEN)$(EGREP) "(development|experimental)=" $(BFDDIR)/development.sh  \
	  | $(AWK) -F= '{ print "set " $$1 " " $$2 }' > $@

enablings.exp:
	$(AM_V_GEN)echo "set enable_libctf ${enable_libctf}" >> $@

# DOCUMENTATION TARGETS
# Manual configuration file; not usually attached to normal configuration,
# because almost all configs use "gen" version of manual.
#  Set DOCVER above to change.
configdoc.texi:	${DOCVER}-doc.texi
	@echo "NOT REBUILDING $@"
NetBSD_DISABLED_configdoc.texi:
	$(AM_V_GEN)cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi
	$(AM_V_at)chmod u+w ./configdoc.texi

# Build the man page from the texinfo file
# The sed command removes the no-adjust Nroff command so that
# the man output looks standard.
ld.1: $(srcdir)/ld.texi configdoc.texi
	@echo "NOT REBUILDING $@"
NetBSD_DISABLED_ld.1:
	$(AM_V_GEN)touch $@
	$(AM_V_at)-$(TEXI2POD) $(MANCONF) < $(srcdir)/ld.texi > ld.pod
	$(AM_V_at)-($(POD2MAN) ld.pod | \
		sed -e '/^.if n .na/d' > $@.T$$$$ && \
		mv -f $@.T$$$$ $@) || \
		(rm -f $@.T$$$$ && exit 1)
	$(AM_V_at)rm -f ld.pod
mostlyclean-local:
	-rm -rf tmpdir

.PHONY: install-exec-local install-data-local

install-exec-local: ld-new$(EXEEXT) install-binPROGRAMS
	$(mkinstalldirs) $(DESTDIR)$(tooldir)/bin
	n=`echo $(installed_linker) | sed '$(transform)'`; \
	if test "$(bindir)" != "$(tooldir)/bin"; then \
	  rm -f $(DESTDIR)$(tooldir)/bin/$(installed_linker)$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$(installed_linker)$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$(installed_linker)$(EXEEXT); \
	fi; \
	if test "x$(install_as_default)" = "xyes"; then \
	  ld=`echo ld | sed '$(transform)'`; \
	  rm -f $(DESTDIR)$(bindir)/$$ld$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(bindir)/$$ld$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(bindir)/$$ld$(EXEEXT); \
	  if test "$(bindir)" != "$(tooldir)/bin"; then \
	    rm -f $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	    ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
	    || $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	  fi; \
	fi

install-data-local: install-bfdpluginLTLIBRARIES
	$(mkinstalldirs) $(DESTDIR)$(scriptdir)/ldscripts
	for f in ldscripts/* ; do \
	  $(INSTALL_DATA) $$f $(DESTDIR)$(scriptdir)/$$f ; \
	done
	rm -f $(DESTDIR)$(bfdplugindir)/libdep.la
	rm -f $(DESTDIR)$(bfdplugindir)/libdep.dll.a
diststuff: info $(EXTRA_DIST)

# Both info (ld.info) and ld.1 depend on configdoc.texi.
# But info isn't a direct target. Make info-recursive to depend on
# ld.1 to support parallel build.
info-recursive: ld.1

html-local: doc/ld/index.html
doc/ld/index.html: ld.texi $(ld_TEXINFOS)
	$(AM_V_at)$(MKDIR_P) doc
	$(AM_V_GEN)$(MAKEINFOHTML) $(AM_MAKEINFOHTMLFLAGS) $(MAKEINFOFLAGS) \
	  --split=node -I$(srcdir) $(srcdir)/ld.texi -o doc/ld
distclean-local:
	rm -rf ldscripts

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
