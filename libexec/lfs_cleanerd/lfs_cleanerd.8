.\"	$NetBSD: lfs_cleanerd.8,v 1.18.48.1 2019/09/02 16:16:56 martin Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @(#)lfs_cleanerd.8	8.2 (Berkeley) 12/11/93
.\"
.Dd August 6, 2009
.Dt LFS_CLEANERD 8
.Os
.Sh NAME
.Nm lfs_cleanerd
.Nd garbage collect a log-structured file system
.Sh SYNOPSIS
.Nm
.Op Fl bcDdfmqs
.Op Fl i Ar segment-number
.Op Fl J Ar raw-device
.Op Fl l Ar load-threshhold
.Op Fl n Ar number-of-segments
.Op Fl r Ar report-frequency
.Op Fl S Ar semaphore-address
.Op Fl t Ar timeout
.Pa node
.Sh DESCRIPTION
The
.Nm
command starts a daemon process which garbage-collects
the log-structured file system residing at the point named by
.Ar node
in the global file system namespace.
This command is normally executed by
.Xr mount_lfs 8
when the log-structured file system is mounted.
The daemon will exit within a few minutes
of when the file system it was cleaning is unmounted.
.Pp
Garbage collection on a log-structured file system is done by scanning
the file system's segments for active, i.e. referenced, data and copying
it to new segments.
When all of the active data in a given segment has been copied to a new
segment that segment can be marked as empty, thus reclaiming the space
taken by the inactive data which was in it.
.Pp
The following options are available:
.Bl -tag -width indent
.It Fl b
Use bytes written, rather than segments read, when determining how many
segments to clean at once.
.It Fl c
Coalescing mode.
For each live inode, check to see if it has too many
blocks that are not contiguous, and if it does, rewrite it.
After a single pass through the filesystem the cleaner will exit.
This option has been reported to corrupt file data; do not use it.
.It Fl D
Stay in the foreground, do not become a daemon process.
Does not print additional debugging information (in contrast to
.Fl d ) .
.It Fl d
Run in debug mode.
Do not become a daemon process, and print debugging information.
More
.Fl d
s give more detailed debugging information.
.It Fl f
Use filesystem idle time as the criterion for aggressive cleaning,
instead of system load.
.It Fl i Ar segment-number
Invalidate the segment with segment number
.Ar segment-number .
This option is used by
.Xr resize_lfs 8 ,
and should not be specified on the command line.
.It Fl J Ar raw device
Specify the raw device that the cleaner is to work against rather than
trying to figure it out from the mount point.  This is mostly useful
when the cleaner is compiled into
.Xr rump_lfs 8 ,
and the ATF test framework.
.It Fl l Ar load-threshhold
Clean more aggressively when the system load is below the given threshhold.
The default threshhold is 0.2.
.It Fl m
Does nothing.
This option is present for historical compatibility.
.It Fl n Ar number-of-segments
Clean this number of segments at a time: that is, pass this many
segments' blocks through a single call to lfs_markv, or, if
.Fl b
was also given, pass this many segments' worth of blocks through a
single call to lfs_markv.
.It Fl q
Quit after cleaning once.
.It Fl r Ar report-frequency
Give an efficiency report after every
.Ar report-frequency
times through the main loop.
.It Fl S Ar semaphore address
When the cleaner code is compiled into
.Xr rump_lfs 8 ,
and the ATF frame work, this option allows for a synchronization
semaphore to be specified.  This option is not available in the
stand alone
.Xr lfs_cleanerd 8 .
.It Fl s
When cleaning the file system,
send only a few blocks through lfs_markv at a time.
Don't use this option.
.It Fl t Ar timeout
Poll the filesystem every
.Ar timeout
seconds, looking for opportunities to clean.
The default is 300, that is, five minutes.
Note that
.Nm
will be automatically awakened when the filesystem is active,
so it is not usually necessary to set
.Ar timeout
to a low value.
.El
.Sh SEE ALSO
.Xr lfs_bmapv 2 ,
.Xr lfs_markv 2 ,
.Xr lfs_segwait 2 ,
.Xr mount_lfs 8 ,
.Xr rump_lfs 8 .
.Sh HISTORY
The
.Nm
utility first appeared in
.Bx 4.4 .
