$NetBSD: UPDATING,v 1.291.2.4 2018/07/28 04:32:56 pgoyette Exp $

This file (UPDATING) is intended to be a brief reference to recent
changes that might cause problems in the build process, and a guide for
what to do if something doesn't work.

For a more detailed description of the recommended way to build NetBSD
using build.sh, see the BUILDING file.

Note that much of the advice in this UPDATING file was written before
build.sh existed.  Nevertheless, the advice here may be useful for
working around specific problems with build.sh.

Sections are marked with "^^^^^".  After the section on "Recent changes"
are several sections containing more general information.

See also: BUILDING, build.sh, Makefile.

Recent changes:
^^^^^^^^^^^^^^^

20180717:
	On aarch64 int64_t and related types have changed from long long
	to long. This requires recompiling all C++ binaries.

20180713:
	On amd64 and i386 static binaries are now build position
	independend. This requires recompilation of all object
	files used to create the crunched /rescue binary.
	Clean the rescue directory in your obj directory before
	doing an update build, otherwise linking will fail.

20180414:
	Existing binutils was migrated to binutils.old.  Manual
	removal of tools/binutils objects directory may be required
	to fix tools build failure.

20180311:
	bdftopcf was updated and may need cleaning in the
	src/external/mit/xorg/tools/bdftopcf subdirectory if there are
	link errors.

20180212:
	between OpenSSL and GCC updates, many things may fail to build.
	any failure that looks like GCC or openssl is best handled by
	a clean destdir and objdir.  Full cleandir and destdir deletion
	is recommended if build failures occur.

20171225:
	removal of the vadvise syscall requires manual removal of all
	associated files from the libc build object directory (including
	the .depend files) - a command like:
		cd $OBJ && find . -type d -name libc | xargs rm -rf
	For architectures that support multiple "compat" binary targets,
	you'll need to cleanup both the regular libc directory and the
	compat ones (the above command will do that).

20171010:
	a change to the build structure of external/bsd/acpica/bin/iasl
	means that its objdir (or *.d and .depend at least) might need
	to be manually removed - or a build done once without -u.

20170822:
	a new version of GMP has been imported and probably
	will break parts of builds related to themselves or GCC, both
	in the tools and the native section.  Remove all GCC, GMP, MPFR
	and MPC objdirs or build once without -u.

20170816:
	a new version of MPFR and MPC have been imported and probably
	will break parts of builds related to themselves or GCC, both
	in the tools and the native section.  Remove all GCC, GMP, MPFR
	and MPC objdirs or build once without -u.

20170402:
	a new version of dhcpcd has been imported, which does not support
	update builds from the previous version. Remove your
	external/bsd/dhcpcd object dir or build once without -u.

20170211:
	a new terminfo database has been imported.
	The structure of it has changed slightly from prior versions and
	an updated tic tool is required.
	If you build.sh, don't use -u

20170207:
	various arch dependent libc/exect.S files were removed
	Either remove the obj directories (lib/libc and compat/amd64/i386/lib
	if it exists) or do a clean build.
	(This is a bug in the make system, it should be corrected without
	human intervention, but isn't.)

20170104:
	xinput build options have changed.
	Remove the obj directory (external/mit/xorg/bin/xinput)
	if you build.sh -u

20170103:
	a new version of flex has been imported.
	Remove the file from obj (external/bsd/flex)
	if you build.sh -u

20161014:
	a new version of OpenSSL has been imported.
	Remove the files from obj (crypto/external/bsd/openssl) 
	if you build.sh -u

20161009:
	a new version of dhcpcd has been imported with slightly changed
	build infrastructure. When doing a build.sh -u this requires
	pruning the external/bsd/dhcpcd objdir.

20160914:
	i386, amd64, shark, ofppc and macppc have joined shark and x68k
	ports in using xorg-server 1.18. This requires a clean destdir
	and a clean objdir.

20160527:
	i386 needs a full cleandir or objdir deletion because PIE has
	been enabled. (see the amd64 entry two down for further info)

20160418:
	libedit needs manual removal of all autogenerated files since
	some of them are not autogenerated anymore. Remember that there
	might be two copies of libedit if your platform builds "compat".

20160410:
	amd64 needs full "make cleandir" or deletion of objdir now that
	PIE has been enabled for amd64.  PIE, or position-independent
	executables, means all code, including executables and not just
	shared libraries, is position-independent and hence able to be
	relocated by ASLR, address space layout randomization.

	The change was made in Makefile variables for compiler and
	linker flags, for which make(1) does not record dependencies,
	hence it is unable to detect that all .o files need rebuilding.

	Partial rebuilds with some modified source files will likely
	fail when linking executables, since the linker refuses to mix
	position-independent code with position-dependent code in
	position-independent executables:

		.../x86_64--netbsd/bin/ld: foo.o: relocation R_X86_64_32 against `...' cannot be used when making a shared object; recompile with -fPIC

20160401:
	Ports switching to GCC 5.3 will need a full "make cleandir".
	Some people have found that cleandir is not sufficient, so if
	in doubt delete the entire object directory tree for gcc.

20160306:
	NetBSD's regexp implementation is now part of libnbcompat.
	Nblex, nbm4, nbpax, nbsed use it and they may crash on
	non-NetBSD hosts if linked with stale object files produced
	while they included a non-NetBSD regex.h.
	In any case, you should "make cleandir" at least these tools
	before updating your toolchain.

20160125:
	Dtrace has been enabled by default on some architectures.
	When doing an update build, make sure to clean the etc/mtree
	object directory before starting the build - otherwise the
	needed directories in destdir will not be created.
	An easy way to do this is:
	   cd src/etc/mtree && $TOOLDIR/bin/nbmake-$arch cleandir

20150818:
	New acpica requires "make cleandir" in src/external/bsd/acpica
	again.

20150413:
	New acpica requires "make cleandir" and reinstalling yacc
	in /usr/src/external/bsd/byacc and /usr/src/tools/yacc and
	also "make cleandir" in /usr/src/external/bsd/acpica.

20150404:
	Lint changes require a full rebuild of the tool, so make
	sure to build without -u option to build.sh, or manually
	do a make cleandir in src/tools/lint1 and
	src/usr.bin/xlint.

20150310:
	Improvements to openssl for arm mean that update builds of
	the openssl libraries will fail. A make cleandir in
	external/bsd/openssl/lib is needed

20141026:
	A mishap during the import of pppd may cause your corruption
	in your cvs directory if you happened to do a cvs update
	during a short period of time. To fix, just remove the
	directory src/external/bsd/ppp/dist/pppd completely
	and let cvs restore it on next update.

20140721:
	The src/external/mit/lua/src directory was accidentally created
	and then deleted in the CVS repository.  If you get errors like

	cvs [update aborted]: cannot open directory
	/cvsroot/src/external/mit/lua/src: No such file or directory

	then delete your local copy of that directory tree and try again.

20140530:
	ARM eABI switched to DWARF based exception handling. This requires
	rebuilding all C++ code. It is strongly advised to do a clean build.

20140131:
	The new compiler_rt/libc integration moved a few things. It is strongly
	advised to do a clean build. At least lib/libc, the compat version(s)
	of libc, libkern, rump and the kernels need to be cleaned.

20131227:
	1. The new ntpd runs in a restricted mode to prevent amplification
	   attacks. If you need ntpdc to work you need to explicitly enable
	   mode7 in your config file. Make sure you put the necessary restrict
	   statements to avoid being exposed.
	2. strncat has moved from lib/libc to common/lib/libc; you might need
	   to make clean in libc

20131129:
	The GMP sources were updated, and builds will likely fail without
	cleaning their build trees for both tools and in-tree, like below.

20131128:
	The MPC and MPFR sources were updated, and builds may require their
	tools and in-tree directories cleaned for successful updates.

20130605:
	The kernel option FAST_IPSEC no longer exists, it's been renamed
	to IPSEC (and the older IPSEC version removed).

20130605:
	Previous freetype installations eroneously installed private
	header files. If you are building against a non-empty $DESTDIR,
	please remove ${DESTDIR}//usr/X11R7/include/freetype2/freetype/.

20130531:
	The xdm update may cause build failure due to xdm.man being
	in the obj tree.  Make sure to ensure any like this:
		nbmake: nbmake: don't know how to make xdm.man. Stop
	is fixed by deleting the xdm.man in the obj tree.

20130530:
	Updates of many xsrc packages will leave old .pc files around.
	Best to clean out the xsrc objdir entirely before rebuilds.

20130301:
	The removal of netiso requires manual removal of /usr/include/netiso
	prior to the build and make cleandir in /usr/src/usr.bin/{ktruss,kdump}

20120726:
	The update of OpenSSL requires cleaning both the OpenSSL build
	directory and DESTDIR.  *Even non-update builds require cleaning
	DESTDIR.* Builds done without taking these steps may fail, or in
	some cases may succeed and install broken OpenSSL libraries that
	cause third-party software to link incorrectly and/or crash.

20120507:
	The database schema for makemandb was changed.  You will
	need to update the database using 'makemandb -f' or wait
	for the next weekly run to fix it.

20120319:
	sys/conf/Makefile.kern.inc has been modified to adjust the
	size of db_symtab automatically.  You need to update dbsym in
	your $TOOLDIR to build kernels with options SYMTAB_SPACE.  If
	you don't want this behavior, add AUTO_SYMTAB_SPACE=no to your
	mk.conf.

20120216:
	Default for MKCATPAGES changed to NO.  Update builds will fail
	unless DESTDIR is cleaned manually.  If you built between 20120207
	and 20120216, daily and weekly could have created an unreadable
	/var/db/man.db index for apropos.  Running makemandb -f or
	the next run of weekly will fix it.

20111227:
	If you built between 20111225 and 20111227 you need to remove
	/usr/lib/libpam.so.4* and /usr/lib/security/*.so.4, since the
	bump has been reverted.

20111125:
	The "rnd" pseudodevice has been added to sys/conf/std, which
	means it should no longer be explicitly listed in kernel
	configuration files.  The line "pseudo-device rnd" should be
	removed from any custom kernel config files users may have.

20111119:
	A problem with the datastructures used by the rndctl(8)
	utility (pointers in datastructures in an array, making 32->64
	bit compatibility very painful) has been fixed in a
	non-backwards-compatible way.  If you replace your kernel,
	replace your rndctl executable too.

20111001:
	the prop_*_send_syscall() functions from proplib(3) have been
	changed and their new version is not backward compatible with the old
	one.  So ensure that all consumers of these functions (currently:
	quota2 code and its tests) are updated together with the new lib.

20110817:
	sparc has been changed to use GCC 4.5.3, so any objdir or
	DESTDIR for them should be deleted before updating.

20110806:
	i386 and amd64 have been changed to use GCC 4.5.3, so any
	objdir or DESTDIR for them should be deleted before updating.

20110805:
	The update to GCC 4.5.3 requires a non-trivial portion of
	the tree to be cleaned.  Best to delete both objdir and
	DESTDIR before running this update.  So far, only the
	sparc64, mips and powerpc platforms have changed.

20110803:
	The layout of external/public-domain/xz has changed.  To do an
	update build you will have to remove the contents of the OBJDIR
	for external/public-domain/xz/bin by hand as the xz entry there
	is now a directory.

20110410:
	The configuration of src/tools/gcc has changed.  To do an
	update build you have to clean both tools/binutils and
	tools/gcc by hand.

20110328:
	Building the Xorg binary was moved into a subdirectory to fix
	ordering issues with "make all".  It may be necessary to remove
	the OBJDIR for external/mit/xorg/server/xorg-server/hw/xfree86
	if your update build fails, as the "Xorg" entry there is now a
	directory.

20110121:
	Assembler files no longer use -traditional-cpp.  This can break
	the build of individual parts of the tree.  This is handled
	correctly by build.sh.  Manual builds have to update /usr/share/mk
	and re-run config(1) for any kernel configurations as needed.

20101217:
	The tcpdump(8) program was changed to drop privileges and chroot(2)
	by default.  It may be necessary to manually update passwd(5) and
	group(5) in order to make the program work with existing setups.

20101125:
	The latest changes to setenv(3) dissallow setting environment
	variables with names that contain '='.  Revision 1.18 of env.c
	assumed that this was allowed.  Installing a new libc with an
	old copy of /usr/bin/env causes env x=1 printenv | grep x= to
	break which affects the autoconf tests for dependency finding,
	so building gcc will end up printing:
	    checking dependency style of gcc... none
	    configure: error: no usable dependency style found
	Fix it by rebuilding and re-installing env.

20101119:
	Recent Xorg updates in xsrc/external/mit/ may cause various build
	or run-time problems.  Delete your entire DESTDIR and OBJDIR if you
	have any build problems with xsrc, or problems with mismatched
	versions between xorg-server and drivers.

20100604:
	The update of ATF to 0.9 causes old tests written in shell to fail
	unless they are rebuilt.  If you are building with MKUPDATE=yes,
	you need to clean the src/external/bsd/atf/tests/ and the src/tests/
	trees by hand.

20100522:
	Recent Xorg updates in xsrc/external/mit/ will cause various build
	problems.  Delete your entire DESTDIR and OBJDIR if you have any
	build problems with xsrc.

20100522:
	private section of <ctype.h> was splitted, and now mklocale(1)
	include ctype_local.h, so you have to make cleandir in tools/mklocale.

20100520:
	The location of the xkb compiled descriptions has changed.  Please
	remove usr/X11R7/lib/X11/xkb/compiled from your $DESTDIR.

20100222:
	The shared objects file extension has been changed from .so to
	.pico, in order to avoid conflicts with shared libraries names
	libXX.so.  All now stale regular .so files can be removed from
	your object directories.

20100204:
	The termcap database has been removed from the sources,
	but has not been marked obsolete so it is not removed
	from the system when upgrading.
	As such, you will need to remove them from your object
	and destination directories.

20091101:
        After updating, it may be necessary to make the 'cleandir'
        target in src/tools/yacc/ and in src/usr.bin/yacc/ before a
        'build.sh -u tools' or 'build.sh -u distribution'.  Ditto
        src/tools/lex/ and src/usr.bin/lex/.

20091001:
	On amd64 you must rebuild tools (to get the new binutils)
	before building a kernel, or the build fails on cpufunc.S.

20091001:
	An error will create a ./usr/X11R7/lib/X11/xkb/compiled/xkb
	symlink, failing the build.  Delete the link, and the subdir
	it is in, and retry your build.

20090718:
	libc build changed so that strchr() provides the extra entry
	point for index().  Update build of libc.a (and libc_pic.a)
	may fail because the archive contains the unwanted index.o.
	(Similarly for strrchr() and rindex().)

20090709:
	Native Xorg was upgraded again.  Builds will probably fail again
	without a clean objdir, at least for src/external/mit/xorg.

20090616:
	Native Xorg was upgraded.  Builds will need a clean objdir for
	src/external/mit/xorg.  Upgrading a system from sets will not
	work properly yet as the /usr/X11R7/lib/X11/xkb/symbols/pc
	subdirectory has been changed into a file, and this needs to
	be manually "rm -r"'ed before installing xbase.tgz.

20090501:
	Several new functions were added to string.h/libc, and this
	can cause autoconf problems during the tool build for people
	who fail to clean out their tools objects properly.  If you
	note messages about stpcpy, stpncpy or strnlen accompanying a
	failure during the tool build, clean out all your tools
	objects and start again.

20090325:
	The i386 port was switched to i486 default toolchain.  This requires
	cleaning your src/tools directory and $TOOLDIR and rebuilding them.

20090126:
	The __posix_fadvise50 system call changed assembly stub type.  You
	need to 'rm -f __posix_fadvise50.*' in the libc build directory
	to avoid using the old assembly stub.

20090202:
	pkg_install now depends on the pkgdb cache for automatic conflict
	detection.  It is recommented to rebuild the cache with
	``pkg_admin rebuild''.

20090110:
	time_t and dev_t have been bumped to 64 bit quantities.  To upgrade:
	1. Make sure your kernel has COMPAT_50 in it.  Build and install.
	   This is needed even in the MODULAR kernel because there is
	   conditionally compiled code in rtsock.c.
	2. make sure build.sh completes and the binaries in a chroot work
	   before installing.
	3. If you don't use build.sh and you build directly to root, and
	   your build breaks in the middle, don't despair.  Make sure headers
	   are installed properly, and start building libraries first libc
	   and libutil, install them and then continue building all the
	   libraries in src/lib and src/gnu/lib and install them.  Once
	   the new libraries are installed, you can restart the build.
	4. If you compile packages and you notice link time warnings,
	   rebuild the required packages to update their shared libraries.
	   Any package you rebuild will require rebuilding all the packages
	   that depend on it.
	5. Next time you run pwd_mkdb with the new binary, the file
	   will be upgraded and it will not be backwards compatible.
	6. The utmpx/wtmpx files (/var/run/utmpx and /var/log/wtmpx, see
	   lastlogx(5)) have been versioned, and there is a heuristic
	   for utmp.  You are better off removing the old files after
	   upgrading.  The automated clearing of /var/run during
	   boot, and the automated rotating of files in /var/log by
	   newsyslog(8), may mean that you do not have to remove the
	   files manually.
	7. The optional accounting file (/var/account/acct, see
	   accton(8)) has not been versioned, and will need to be
	   removed.  The automatic rotation of the accounting file by
	   /etc/daily limits the bad consequences of failure to remove
	   the file.
	8. Application software that writes time_t to binary files on
	   disk will break or need attention.  Most notably: if you are
	   using PostgreSQL < 8.4, you need to dump your databases,
	   rebuild PostgreSQL with the new time_t, then restore.

20081219:
	config(1) has been updated, and one of the files it creates -
	swapnetbsd.o - has changed format.  You need to rebuild config
	(done automatically by build.sh) and then you need to rerun
	config on all kernel configuration files before rebuilding those
	kernels.

20081205:
	If you build with MKX11=no, you should remove /etc/rc.d/xdm and
	/etc/rc.d/xfs from DESTDIR because those files were moved to the xetc
	set and will appear as extra files for MKX11=no update builds.

20081122:
	On i386, various kernel options(4) in GENERIC including
	file systems have been disabled and moved into kernel modules.
	Before trying a new GENERIC kernel, you have to prepare the
	following files as well as a new GENERIC kernel:

	- build and install kernel modules from src/sys/modules

	- install the latest bootloader, which will load a module
	  for the file system from which the kernel is loaded automatically

	If you have to load your kernel from a file system which is not of
	the same type as the root file system, you have to load the necessary
	file system module manually on the boot prompt or in the boot.cfg file.

20080827:
	If you built and installed a libc from sources between
	2008/08/20 and 2008/08/26 you got a broken strtouq(3)
	which results in false errors reported by lint(1).
	Since this breaks the libc build itself, manual help is
	needed -- lint must be disabled temporarily, e.g.:
	  $ (cd lib/libc && make MKLINT=no dependall install)

20080813:
	MKDEBUG build was broken because the .depend files did not know
	about .go files.  You need to remove all .depend files and rebuild.

20080802:
	A regression in binary compatibility for pthread_mutex_t has
	been fixed.  Unfortunately, the price is breaking compatibility
	for -current.

	Threaded programs (using libpthread) and C++ programs (using
	libstdc++) compiled after 20070907 and before 20080802 need to
	be recompiled.

	One way to find affected pkgsrc packages:

	  $ grep REQUIRES=/usr/lib/libpthread /var/db/pkg/*/+BUILD_INFO
	  $ grep REQUIRES=/usr/lib/libstdc++ /var/db/pkg/*/+BUILD_INFO

20080731:
	WAPBL (metadata journaling support) has been added, but at this
	time isn't backwards compatible with pre-WAPBL aware kernels
	and userland (fsck_ffs in particular).  Please make sure you
	don't use a journaled filesystem with an older kernel/userland,
	especially an uncleanly mounted journaled filesystem.  WAPBL
	also requires the super block to be in the UFS2 format.  You
	can use fsck_ffs -c 4 to update the superblock format.

20080721:
	Assembler warnings are now fatal if $WARNS>0 and $NOGCCERROR
	isn't defined.

20080531:
	The ioctl number of DRVSUSPENDDEV command on /dev/drvctl changed
	from 125 (conflicted with DRVCTLCOMMAND) to 129.  The drvctl(8)
	utility needs to be rebuilt and reinstalled as older binaries
	won't work correctly.  The following sequence of commands:

	  $ (cd sys/sys/ && nbmake-$arch includes)
	  $ (cd sbin/drvctl/ && nbmake-$arch clean)
	  $ (cd sbin/drvctl/ && nbmake-$arch all)

	leaves new drvctl utility in sbin/drvctl build directory.

20080503:
	The <bsd.lib.mk> variable MKPRIVATELIB was renamed to LIBISPRIVATE.

20080521:
	For a while, unprivileged UPDATE builds would fail to
	succeed at the checkflist stage, complaining that
	${DESTDIR}/stand/<arch>/ did not exist.  A fix for this
	problem was committed to share/mk/bsd.kmodule.mk, revision 1.9.
	If you already hit this problem, update the .mk file,
	remove ${DESTDIR}/stand/<arch>, and re-run the build.

20080303:
	Linker warnings are now fatal if $WARNS>0.

20080126:
	The posix_fadvise system call has been changed from an assembly
	stub, to a c file that calls an assembly stub.  You need to
	'rm -f posix_fadvise.* .depend' in the libc build directory to
	avoid using the old assembly stub.

20071209:
	The acpiec(4) driver has been split into two attachments.  If you
	get ACPI errors before the attachment, please update your kernel
	configuration file appropriately or see GENERIC for more details.

20071115:
	The it(4) driver has been renamed to itesio(4) and the old port
	argument specified in the kernel configuration file is not valid
	anymore.  The itesio(4) driver now uses the Super I/O address port
	rather than the EC address port.  Please update your kernel
	configuration file appropriately or see GENERIC for more details.

20071028:
	The pccons(4) driver has been removed from the NetBSD/shark port.
	You need to update any custom kernel configuration file you have
	to remove any references to pccons (which includes removing the
	now useless XSERVER option) and replace them with the correct
	entries for the wscons driver.  See the GENERIC configuration file
	for more details.

20070913:
	A latent bug in dhclient/dhcpd that caused it to be unable to
	enumerate interfaces was fixed.  The bug began to cause
	problems after 20070911 when the kernel's SIOCGIFCONF
	implementation was repaired.  From 20070529 to 20070911 racoon
	could not enumerate interfaces.  (These are noted because
	normal kernel/userspace version matching hygiene is not
	sufficient to avoid this problem.)  Ensure that both kernel
	and userland are from after 20070913.

20070703:
	nbinstall has been renamed ${MACHINE_GNU_ARCH}-install.  It
	calls the target-specific strip program, and the logic to pass
	down STRIP from make has been removed.  This requires a
	re-installation of tools.

20070422:
	The way OS emulations lookup filenames inside the emulation root
	has been changed.  Rather than modify the pathname (and copy back
	to userspace) namei() and lookup() directly check the emulation
	root.  One side effect is that absolute symlinks inside the emulated
	root file system will be relative to that file system - unless they
	start /../ this is useful when the emulated root is a real install
	that has such links.
	This might affect symlinks that have been added to reference outside
	the emulated root.

20070412:
	The pckbc driver on sgimips IP32 has been removed.  Use macekbc
	instead.  See the GENERIC32_IP3x kernel configuration for an
	example.

20070319:
        src/lib/libc/Makefile revision 1.129 broke libc and ld.elf_so
        on many platforms due to incorrect flags settings.  If you
        updated and built after about 20070315, do "nbmake-$arch
	cleandir" in src/lib/libc and src/libexec/ld.elf_so to force a
	rebuild of object files that might have been built
	incorrectly, and ensure that you have at least
	src/lib/libc/Makefile 1.130.

20070210:
        src/sys/sys/{sa.h,savar.h} were removed.
          find ${OBJDIR} \( -name .depend -o -name '*.d' \) -print \
              | xargs egrep -l '/sa.h|/savar.h' | xargs rm
        will allow dependencies on those files to get get rebuilt

20070209:
        The threading model was changed when the newlock2 branch
        was merged to NetBSD-current.  If you boot with a new
        kernel (version 4.99.10), then you also need a new pthread
        library (/usr/lib/libpthread.so.0.7).  If you boot with
        an old kernel, then you need the old pthread library
        (/usr/lib/libpthread.so.0.6).  Provided you keep the kernel and
        the pthread library in sync, old threaded applications should
        continue to work with an old or new kernel.  Note that named(8)
	is the only threaded application in the base system.

20061214:
	Following the move of string_to_flags() and flags_to_string()
	from the bin/ls/ sources to libutil, users doing UPDATE builds
	will need to do a "make cleandir" in
		tools/mtree/, tools/makefs/, tools/binstall/, tools/pax/,
		bin/pax/, bin/ls/, usr.sbin/mtree/, usr.sbin/makefs/,
		usr.bin/xinstall/, libexec/ftpd/, rescue/, as well
		as the installation images in distrib/
	in order to excise stale references to the old stat_flags.h header
	file in the ls sources -- stat_flags.h has been removed.

20061108:
	The configure script used in the src/tools/gcc compiler has been
	changed to indicate that our libc has ssp support built-in and
	does not depend on -lssp and -lssp-nonshared.  You'll need to
	make clean in src/tools/gcc first to rebuild the compiler.

20061009:
	The sysctl variables net.inet{,6}.tcp{,6}.newreno are no longer
	available.  Use net.inet{,6}.tcp{,6}.congctl.selected instead.

20060814:
	The vt, vidcconsole, kbd, and rpckbd drivers on acorn32 have been
	withdrawn.  Use vidcvideo and pckbd instead.  See the GENERIC
	kernel configuration for an example.  X servers from the last
	few years should cope.

20060703:
	MPACPI is no more.  We always configure PCI interrupts using ACPI
	if we have an ACPI kernel.  The option MPACPI_SCANPCI has been renamed
	to ACPI_SCANPCI.  Thanks to work from fvdl.

20060627:
	socket(2) has changed, and its system call has been versioned.
	For userlands with the old version of socket(2), make sure that
	your kernel has 'options COMPAT_30' set, or else 'bad system call'
	errors will result.

Hints for a more successful build:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Use build.sh, but do not use its "expert mode":
	This will automatically build the tools in the
	   correct order, and it will keep the tools and the
	   new build products from interfering with the running
	   system.  This will allow you to ignore most of the
	   other advice in this file.
    Build a new kernel first:
	This makes sure that any new system calls or features
	   expected by the new userland will be present.  This
	   helps to avoid critical errors when upgrading.
    Use object directories:
	This helps to keep stale object
	   files from polluting the build if a Makefile "forgets"
	   about one.  It also makes it easier to clean up after
	   a build.  It's also necessary if you want to use the
	   same source tree for multiple machines.
	   To use object directories with build.sh:
	    a) invoke build.sh with the "-M" or "-O" options.
	   To use object directories without using build.sh:
	    a) cd /usr/src ; make cleandir
	    b) Add "OBJMACHINE=yes" to /etc/mk.conf
	    c) Add "MKOBJDIRS=yes" to /etc/mk.conf
	    d) cd /usr/src ; make build
	   Note that running "make obj" in a directory will create
	   in obj.$MACHINE directory.
    Build to a DESTDIR:
	This helps to keep old installed files (especially libraries)
	   from interfering with the new build.
	   To build to a DESTDIR with build.sh, use the "-D" option.
	   To build to a DESTDIR without using build.sh, set the DESTDIR
	   environment variable before running make build.  It should be
	   set to the pathname of an initially empty directory.
	   Problems: if you do not use build.sh, you might need to
		update critical utilities without using DESTDIR since
		nothing is executed from what is installed in DESTDIR.
		(See critical utils, below.)
    Build often:
	This keeps critical utilities current enough to not choke
	on any other part of the source tree that depends on up to
	date functionality.  If you use build.sh, you should not have
	this problem.

What to do if things don't work:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
When things don't work there are usually a few things that commonly
should be done.
    1)	make includes
	This should be done automatically by make build.
    2)  cd share/mk && make install
	Again, automatically done by make build.

Failsafe rebuild of a small part of the tree:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
To make sure you rebuild something correctly you want to do
something like the following:
    1)  Make sure the includes and .mk files are up to date.
    2)  Make sure any program used to build the particular
	utility is up to date.  (yacc, lex, etc...)
    3)  cd ...path/to/util...
	make cleandir
	rm ...all obj directories...
	make cleandir			# yes, again
	make obj
	make depend && make

Failsafe rebuild of the entire tree:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
If you really want to make sure the source tree is clean and
ready for a build try the following.  Note that sourcing /etc/mk.conf
(a make(1) Makefile) in this manner is not right, and will not work
for anyone who uses any make(1) features in /etc/mk.conf.

---cut here---
#!/bin/sh
. /etc/mk.conf

if [ -z $NETBSDSRCDIR ] ; then
    NETBSDSRCDIR=/usr/src
fi
if [ \! -d $NETBSDSRCDIR ] ; then
    echo Unable to find sources
    exit 1
fi
find $NETBSDSRCDIR -name \*.o -o -name obj.\* -o -name obj -exec rm \{\} \;

if [ -z $BSDOBJDIR ] ; then
    BSDOBJDIR=/usr/obj
fi
if [ -d $BSDOBJDIR ] ; then
    rm -rf $BSDOBJDIR
fi

cd $NETBSDSRCDIR && make cleandir

---cut here---

Critical utilities:
^^^^^^^^^^^^^^^^^^^
	usr.bin/compile_et
	usr.bin/make
	usr.bin/yacc
	usr.bin/lex
	usr.bin/xlint
	usr.bin/config

Other problems and possible solutions:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Symptom:Complaints involving a Makefile.
Fix:	Rebuild usr.bin/make:
	cd usr.bin/make && make && make install
	Or, a failsafe method if that doesn't work:
	cd usr.bin/make && cc *.c */*.c -I . -o make && mv make /usr/bin

Fix:	Make sure .mk files are up to date.
	cd share/mk && make install

Symptom:Kernel `config' fails to configure any kernel, including GENERIC.
Fix:	Rebuild usr.bin/config

Symptom:
Fix:	Rebuild usr.bin/yacc

Symptom:
Fix:	Rebuild usr.bin/lex

Symptom:
Fix:	rm /usr/lib/libbfd.a

Symptom:Obsolete intermediate files are used during compilation
Fix:	Try the following sequence of commands in the directory in question.
	make cleandir; rm `make print-objdir`; make cleandir; make obj
	(If you built the tree without "make obj" in the past, obsolete files
	may remain.  The command tries to clean everything up)

Symptom:.../sysinst/run.c:xx: warning: initialization from incompatible
	pointer type
Fix:	Rebuild and install usr.bin/menuc

Symptom:mklocale not found during build in share/locale/ctype
Fix:	Build and install usr.bin/mklocale

Symptom:undefined reference to `__assert13' or `__unsetenv13'
Fix:    Rebuild and install lib/libc

Symptom:usr.bin/config fails to build.
Fix:	Try building with -DMAKE_BOOTSTRAP added to CFLAGS in Makefile.

Symptom:undefined reference to `getprogname' or `setprogname'
Fix:    Rebuild and install lib/libc

Symptom:lint does not understand the '-X' option
Fix:    May need to build & install libs with NOLINT=1 before rebuilding lint

Symptom:Update build fails in src/tools/gcc complaining that a variable
	(e.g. CPPFLAGS) has changed since the previous run.
Fix:    Run "nbmake-${ARCH} clean" in src/tools/gcc or do a clean build.

Symptom:cvs [update aborted]: cannot open directory /cvsroot/src/...:
	No such file or directory.
Cause:	If a directory is created by mistake, then it is sometimes
	deleted from the CVS repository using administrative commands
	that bypass the normal cvs access controls.  If your cvs working tree
	contains references to a directory that has been deleted on the
	server in this way, then "cvs update" reports this error.
Fix:	Recursively delete the affected directory from your working tree
	and try the update again.
