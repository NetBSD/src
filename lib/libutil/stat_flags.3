.\" $NetBSD: stat_flags.3,v 1.8.40.1 2024/07/20 15:38:24 martin Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Christos Zoulas.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd May 31, 2023
.Dt STAT_FLAGS 3
.Os
.Sh NAME
.Nm string_to_flags ,
.Nm flags_to_string
.Nd Stat flags parsing and printing functions
.Sh LIBRARY
.Lb libutil
.Sh SYNOPSIS
.In util.h
.Ft char *
.Fn flags_to_string "u_long flags" "const char *def"
.Ft int
.Fn string_to_flags "char **stringp" "u_long *setp" "u_long *clrp"
.Sh DESCRIPTION
The
.Fn flags_to_string
and
.Fn string_to_flags
functions are used by
programs such as
.Xr chflags 1 ,
.Xr ls 1 ,
.Xr makefs 8 ,
.Xr mtree 8 ,
etc., to parse and/or print the
.Fa st_flags
field in the
.Xr stat 2
structure.
.
.Pp
They recognize the following flags:
.
.Bl -tag -width Cm -offset indent
.
.It Cm arch , Cm archived Pq Dv SF_ARCHIVED
file is archived
.Po legacy/compat flag for
.Xr mount_msdos 8
filesystems
.Pc
.
.It Cm nodump Pq Dv UF_NODUMP
do not
.Xr dump 8
file
.
.It Cm opaque Pq Dv UF_OPAQUE
directory is opaque in
.Xr mount_union 8
filesystems
.
.It Cm sappnd , Cm sappend Pq Dv SF_APPEND
writes to the file may only append
.Pq flag can be changed by the superuser only
.
.It Cm schg , Cm schange , Cm simmutable Pq Dv SF_IMMUTABLE
file cannot be changed; it is immutable
.Pq flag can be changed by the superuser only
.
.It Cm snap Pq Dv SF_SNAPSHOT
file is an
.Xr fss 4
snapshot inode
.
.It Cm uappnd , Cm uappend Pq Dv UF_APPEND
writes to the file may only append
.
.It Cm uchg , Cm uchange , Cm uimmutable Pq Dv UF_IMMUTABLE
file cannot be changed; it is immutable
.
.El
.
.Pp
The
.Fn flags_to_string
function converts the bits set in the
.Fa flags
argument to a comma-separated string and returns it.
If no flags are set, then the
.Fa def
string is returned.
The returned string is allocated via
.Xr malloc 3
and it is the responsibility of the caller to
.Xr free 3
it.
.Pp
Where the above list has several flag names for a flag,
the first of the listed names is returned.
.
.Pp
The
.Fn string_to_flags
function takes a
.Fa stringp
of space, comma, or tab separated flag names
and places their bit value on the
.Fa setp
argument.
.Pp
If the flag name is prefixed by
.Ql no ,
then the bit value is placed on the
.Fa clrp
argument.
Both
.Cm nonodump
and
.Cm dump
are recognized as negative forms of the
.Cm nodump
flag name.
.Pp
Where the above list has several flag names for a flag,
all of them are recognized.
The
.Cm snap
flag name is
.Em not
recognized
.Pq as its flag cannot be changed anyway .
.
.Sh RETURN VALUES
.Fn flags_to_string
returns the symbolic representation of flags, the default string, or
.Dv NULL
if allocation failed.
.
.Pp
.Fn string_to_flags
returns
.Dv 0
on success and
.Dv 1
if it fails to parse the string, setting
.Fa stringp
to point to the first name that it failed to parse.
.Sh SEE ALSO
.Xr chflags 2 ,
.Xr stat 2
