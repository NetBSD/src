.\"	$NetBSD: opendisk.3,v 1.16 2018/04/05 11:07:00 wiz Exp $
.\"
.\" Copyright (c) 1997, 2001 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Luke Mewburn.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd April 4, 2018
.Dt OPENDISK 3
.Os
.Sh NAME
.Nm opendisk ,
.Nm opendisk1
.Nd open a disk partition
.Sh LIBRARY
.Lb libutil
.Sh SYNOPSIS
.In util.h
.Ft int
.Fo opendisk
.Fa "const char *path"
.Fa "int flags"
.Fa "char *buf"
.Fa "size_t buflen"
.Fa "int iscooked"
.Fc
.Ft int
.Fo opendisk1
.Fa "const char *path"
.Fa "int flags"
.Fa "char *buf"
.Fa "size_t buflen"
.Fa "int iscooked"
.Fa "int (*ofn)(const char *, int, ...))"
.Fc
.Sh DESCRIPTION
.Fn opendisk
opens
.Fa path ,
for reading and/or writing as specified by the argument
.Fa flags
using
.Xr open 2 ,
and the file descriptor is returned to the caller.
.Fa buf
is used to store the resultant filename.
.Fa buflen
is the size, in bytes, of the array referenced by
.Fa buf
(usually
.Dv MAXPATHLEN
bytes).
.Fa iscooked
controls which paths in
.Pa /dev
are tried.
.Pp
.Fn opendisk
attempts to open the following variations of
.Fa path ,
in order:
.Pp
If
.Fa path
does not contain a
slash
.Pq Dq / ,
the following variations are attempted:
.Pp
.Bl -dash -compact
.It
If
.Fa iscooked
is zero:
.Bl -tag -compact -width "/dev/rpathX"
.It Pa /dev/rpath
.Fa path
with a prefix of
.Dq Pa /dev/r .
.It Pa /dev/rpath Ns Em X
.Fa path
with a prefix of
.Dq Pa /dev/r
and a suffix of
.Sq Em X
(q.v.).
.El
.It
If
.Fa iscooked
is non-zero:
.Bl -tag -compact -width "/dev/rpathX"
.It Pa /dev/path
.Fa path
with a prefix of
.Dq Pa /dev/ .
.It Pa /dev/path Ns Em X
.Fa path
with a prefix of
.Dq Pa /dev/
and a suffix of
.Sq Em X
(q.v.).
.El
.El
.Pp
If the above fails, then the original
.Fa path
is tried using the following two variations:
.Pp
.Bl -dash -compact
.It
The
.Fa iscooked
value is ignored:
.Bl -tag -compact -width "/dev/rpathX"
.It Pa path
The pathname as given.
.It Pa path Ns Em X
.Fa path
with a suffix of
.Sq Em X ,
where
.Sq Em X
represents the raw partition of the device, as determined by
.Xr getrawpartition 3 ,
usually
.Dq c
or
.Dq d .
.El
.El
.Pp
.Fn opendisk1
is identical to
.Fn opendisk
except uses the supplied
.Fa ofn
function instead of
.Xr open 2 .
This function must be compatible
with
.Xr open 2
in the parameters it takes,
the value it returns,
and way that errors are indicated.
.Sh RETURN VALUES
An open file descriptor, or -1 if the
.Xr open 2
failed.
.Sh ERRORS
.Fn opendisk
and
.Fn opendisk1
may set
.Va errno
to one of the following values:
.Bl -tag -width Er
.It Bq Er EFAULT
.Fa buf
was the
.Dv NULL
pointer.
.It Bq Er EINVAL
.Dv O_CREAT
was set in
.Fa flags ,
or
.Xr getrawpartition 3
didn't return a valid partition.
.El
.Pp
The
.Fn opendisk
function
may also set
.Va errno
to any value specified by the
.Xr open 2
function.
.Pp
The
.Fn opendisk1
function may also set
.Va errno
to any value set by the
.Fa ofn
function.
.Sh SEE ALSO
.Xr open 2 ,
.Xr getrawpartition 3
.Sh HISTORY
The
.Fn opendisk
function first appeared in
.Nx 1.3 .
.Pp
The
.Fn opendisk1
function first appeared in
.Nx 6.0 ,
and was documented in
.Nx 8.0 .
.Pp
The lookup order of
.Fn opendisk
was changed in
.Nx 7.1
to first look in
.Pa /dev
in order to avoid opening random files in the current working directory.
