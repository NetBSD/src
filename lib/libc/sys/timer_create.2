.\"	$NetBSD: timer_create.2,v 1.13 2017/07/03 21:32:50 wiz Exp $
.\"
.\" Copyright (c) 2003 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Christos Zoulas.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd May 19, 2010
.Dt TIMER_CREATE 2
.Os
.Sh NAME
.Nm timer_create
.Nd create a per-process timer
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In time.h
.In signal.h
.Ft int
.Fn timer_create "clockid_t clockid" "struct sigevent * restrict evp" "timer_t * restrict timerid"
.Sh DESCRIPTION
The
.Fn timer_create
function creates a per-process timer using the clock specified in the
.Ar clockid
argument.
If it succeeds, the
.Fn timer_create
function fills in the
.Ar timerid
argument with an id associated with the timer created that can be used by
other timer related calls.
The
.Ar clockid
must be a valid clock id as defined in
.In time.h .
The timer is created in a disarmed state.
.Pp
An optional
.Pq non- Ns Dv NULL
.Em struct sigevent
argument can be specified by the
.Ar evp
argument.
If the
.Ar evp
argument is
.Dv NULL ,
then
.Fa evp->sigev_notify
defaults to
.Dv SIGEV_SIGNAL
and
.Fa evp->sigev_value
is set to
.Ar timerid .
Refer to
.Xr sigevent 3
for more details.
.Sh NOTES
Timers are not inherited after a
.Xr fork 2
and are disarmed and deleted by an
.Xr exec 3 .
.Sh RETURN VALUES
If successful, the
.Fn timer_create
function returns 0, and fills in the
.Ar timerid
argument with the id of the new timer that was created.
Otherwise, it returns \-1, and sets
.Dv errno
to indicate the error.
.Sh ERRORS
The
.Fn timer_create
function will fail if:
.Bl -tag -width Er
.It Bq Er EAGAIN
The system is out of resources to satisfy this request, or the process has
created all the timers it is allowed.
.It Bq Er EINVAL
The argument
.Ar clockid
is not a valid clock id.
.El
.Sh SEE ALSO
.Xr clock_getres 2 ,
.Xr clock_gettime 2 ,
.Xr clock_settime 2 ,
.Xr timer_delete 2 ,
.Xr timer_getoverrun 2 ,
.Xr timer_gettime 2 ,
.Xr timer_settime 2 ,
.Xr sigevent 3
.Sh STANDARDS
.St -p1003.1b-93 ,
.St -p1003.1i-95
