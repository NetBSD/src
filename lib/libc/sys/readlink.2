.\"	$NetBSD: readlink.2,v 1.33 2017/07/03 21:32:50 wiz Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)readlink.2	8.1 (Berkeley) 6/4/93
.\"
.Dd July 28, 2013
.Dt READLINK 2
.Os
.Sh NAME
.Nm readlink ,
.Nm readlinkat
.Nd read value of a symbolic link
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft ssize_t
.Fn readlink "const char * restrict path" "char * restrict buf" "size_t bufsiz"
.Ft ssize_t
.Fn readlinkat "int fd" "const char * restrict path" "char * restrict buf"\
 "size_t bufsiz"
.Sh DESCRIPTION
.Fn readlink
places the contents of the symbolic link
.Fa path
in the buffer
.Fa buf ,
which has size
.Fa bufsiz .
.Fn readlink
does not append a
.Dv NUL
character to
.Fa buf .
.Pp
.Fn readlinkat
works the same way as
.Fn readlink
except if
.Fa path
is relative.
In that case, it is looked up from a directory whose file
descriptor was passed as
.Fa fd .
Search permission is required on this directory.
.\"    (These alternatives await a decision about the semantics of O_SEARCH)
.\" Search permission is required on this directory
.\" except if
.\" .Fa fd
.\" was opened with the
.\" .Dv O_SEARCH
.\" flag.
.\"    - or -
.\" This file descriptor must have been opened with the
.\" .Dv O_SEARCH
.\" flag.
.Fa fd
can be set to
.Dv AT_FDCWD
in order to specify the current directory.
.Sh RETURN VALUES
The call returns the count of characters placed in the buffer
if it succeeds, or a \-1 if an error occurs, placing the error
code in the global variable
.Va errno .
.Sh EXAMPLES
A typical use is illustrated in the following piece of code
which reads the contents of a symbolic link named
.Pa /symbolic/link
and stores them as null-terminated string:
.Bd -literal -offset indent
#include <limits.h>
#include <unistd.h>

char buf[PATH_MAX];
ssize_t len;

if ((len = readlink("/symbolic/link", buf, sizeof(buf)-1)) == -1)
	error handling;
buf[len] = '\e0';
.Ed
.Sh ERRORS
.Fn readlink
and
.Fn readlinkat
will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EFAULT
.Fa buf
extends outside the process's allocated address space.
.It Bq Er EINVAL
The named file is not a symbolic link.
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Brq Dv NAME_MAX
characters, or an entire path name exceeded
.Brq Dv PATH_MAX
characters.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.El
.Pp
In addition,
.Fn readlinkat
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa path
does not specify an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a valid file descriptor open for reading or searching.
.It Bq Er ENOTDIR
.Fa path
is not an absolute path and
.Fa fd
is a file descriptor associated with a non-directory file.
.El
.Sh SEE ALSO
.Xr lstat 2 ,
.Xr stat 2 ,
.Xr symlink 2 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn readlink
function conforms to
.St -p1003.1-2001 .
.Fn readlinkat
conforms to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn readlink
function appeared in
.Bx 4.2 .
The type returned was changed from
.Ft int
to
.Ft ssize_t
in
.Nx 2.1 .
