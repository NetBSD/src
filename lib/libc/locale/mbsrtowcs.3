.\" $NetBSD: mbsrtowcs.3,v 1.12.48.1 2024/10/11 17:35:46 martin Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd September 9, 2024
.Dt MBSRTOWCS 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm mbsrtowcs ,
.Nm mbsrntowcs
.Nd converts a multibyte character string to a wide-character string \
(restartable)
.\" ----------------------------------------------------------------------
.Sh LIBRARY
.Lb libc
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.
.In wchar.h
.
.Ft size_t
.Fo mbsrtowcs
.Fa "wchar_t * restrict pwcs"
.Fa "const char ** restrict s"
.Fa "size_t n"
.Fa "mbstate_t * restrict ps"
.Fc
.
.Ft size_t
.Fo mbsnrtowcs
.Fa "wchar_t * restrict pwcs"
.Fa "const char ** restrict s"
.Fa "size_t nmc"
.Fa "size_t n"
.Fa "mbstate_t * restrict ps"
.Fc
.
.\" ----------------------------------------------------------------------
.Sh DESCRIPTION
The
.Fn mbsrtowcs
function converts the multibyte character string indirectly pointed to
by
.Fa s
to the corresponding wide-character string, and stores it in the
array pointed to by
.Fa pwcs .
The conversion stops due to the following reasons:
.Bl -bullet
.It
The conversion reaches a NUL byte.
In this case, the NUL byte is also converted.
.It
The
.Fn mbsrtowcs
has already stored
.Fa n
wide characters.
.It
The conversion encounters an invalid character.
.El
.Pp
Each character will be converted as if
.Xr mbrtowc 3
is continuously called.
.Pp
After conversion,
if
.Fa pwcs
is not a NULL pointer,
the pointer object pointed to by
.Fa s
is a NULL pointer
.Pq if the conversion is stopped due to reaching a NUL byte
or the first byte of the character just after the last character
converted.
.Pp
If
.Fa pwcs
is not a NULL pointer and the conversion is stopped due to reaching
a NUL byte, the
.Fn mbsrtowcs
places the state object pointed to by
.Fa ps
to an initial state after the conversion has taken place.
.Pp
The behaviour of
.Fn mbsrtowcs
is affected by the
.Dv LC_CTYPE
category of the current locale.
.Pp
These are the special cases:
.Bl -tag -width Li
.
.It Li "s == NULL || *s == NULL"
Undefined (may cause the program to crash).
.
.It Li "pwcs == NULL"
The conversion has taken place, but the resulting wide-character string
was discarded.
In this case, the pointer object pointed to by
.Fa s
is not modified and
.Fa n
is ignored.
.
.It Li "ps == NULL"
The
.Fn mbsrtowcs
uses its own internal state object to keep the conversion state,
instead of
.Fa ps
mentioned in this manual page.
.Pp
Calling any other functions in
.Lb libc
never changes the internal state of
.Fn mbsrtowcs ,
which is initialized at startup time of the program.
.El
.Pp
The
.Fn mbsnrtowcs
function behaves identically to
.Fn mbsrtowcs ,
except that the conversion stops after reading at most
.Fa nmc
characters from the buffer pointed to by
.Fa s .
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
The
.Fn mbsrtowcs
and
.Fn mbsnrtowcs
functions return:
.Bl -tag -width Li
.It Li 0 , No or positive
The value returned is the number of elements stored in the array
pointed to by
.Fa pwcs ,
except for a terminating NUL wide character (if any).
If
.Fa pwcs
is not
.Dv NULL
and the value returned is equal to
.Fa n ,
the wide-character string pointed to by
.Fa pwcs
is not NUL-terminated.
If
.Fa pwcs
is a NULL pointer, the value returned is the number of elements to contain
the whole string converted, except for a terminating NUL wide character.
.It Li "(size_t)-1"
The array indirectly pointed to by
.Fa s
contains a byte sequence forming invalid character.
In this case,
.Fn mbsrtowcs
sets
.Va errno
to indicate the error.
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
The
.Fn mbsrtowcs
and
.Fn mbsnrtowcs
functions may fail with the following errors:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa s
points to a string containing an invalid or incomplete multibyte
character.
.It Bq Er EINVAL
.Fa ps
points to an invalid or uninitialized mbstate_t object.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr mbrtowc 3 ,
.Xr mbstowcs 3 ,
.Xr setlocale 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn mbsrtowcs
function conforms to
.St -isoC-amd1 .
The
.Li restrict
qualifier was added by
.St -isoC-99 .
.Pp
The
.Fn mbsnrtowcs
function conforms to
.St -p1003.1-2008 .
